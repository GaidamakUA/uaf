<abilities>
  <item>
    <name>$EVENT_WhoTries_Attempt</name>
    <asl>
      <script name="Ability">
        <![CDATA[$VAR abLevel;
-$VAR abName;
-$VAR me; // character who is trying
-$VAR abNeed;
-$VAR abDie;
-abName = $GET_HOOK_PARAM(5);
-abNeed = $GET_HOOK_PARAM(6);
-me = $IndexOf($CharacterContext());
-$SWITCH (abName)
-	{
-		$CASE "Strength": abLevel = $GET_CHAR_LIMITED_STR(me);$BREAK;
-		$CASE "Intelligence": abLevel = $GET_CHAR_LIMITED_INT(me);$BREAK;
-		$CASE "Wisdom": abLevel = $GET_CHAR_LIMITED_WIS(me);$BREAK;
-		$CASE "Dexterity": abLevel = $GET_CHAR_LIMITED_DEX(me);$BREAK;
-		$CASE "Constitution": abLevel = $GET_CHAR_LIMITED_CON(me);$BREAK;
-		$CASE "Charisma": abLevel = $GET_CHAR_LIMITED_CHA(me);$BREAK;
-		$CASE "StrengthMod": abLevel = $GET_CHAR_LIMITED_STRMOD(me);$BREAK;
-		$DEFAULT: $RETURN "N";
-	} $ENDSWITCH;
-$IF (abNeed <# 0)
-	{
-		abDie = $RANDOM (0 -# abNeed);
-		$IF (abLevel <# abDie){$RETURN "N";};
-	};
-$IF (abLevel <# abNeed){$RETURN "N";};
OldAbility = $VAR abLevel;
-$VAR abName;
-$VAR me; // character who is trying
-$VAR abNeed;
-$VAR abDie;
-abName = $GET_HOOK_PARAM(5);
-abNeed = $GET_HOOK_PARAM(6);
-me = $IndexOf($CharacterContext());
-$IF (abName == "Strength"){abLevel = $GET_CHAR_LIMITED_STR(me);};
-$IF (abName == "Intelligence"){abLevel = $GET_CHAR_LIMITED_INT(me);};
-$IF (abName == "Wisdom"){abLevel = $GET_CHAR_LIMITED_WIS(me);};
-$IF (abName == "Dexterity"){abLevel = $GET_CHAR_LIMITED_DEX(me);};
-$IF (abName == "Constitution"){abLevel = $GET_CHAR_LIMITED_CON(me);};
-$IF (abName == "Charisma"){abLevel = $GET_CHAR_LIMITED_CHA(me);};
-$IF (abName == "StrengthMod"){abLevel = $GET_CHAR_LIMITED_STRMOD(me);};
-$IF (abLevel == "") {$RETURN "N";};
-$IF (abNeed <# 0)
-	{
-		abDie = $RANDOM (0 -# abNeed);
-		$IF (abLevel <# abDie){$RETURN "N";};
-	};
-$IF (abLevel <# abNeed){$RETURN "N";};
]]>
      </script>
      <script name="Experience">
        <![CDATA[$VAR me;
-$VAR cls; // class
-$VAR lvl; // level
-$VAR par0;
-$VAR par5;
-$VAR par6;
-me = $MyIndex();
-cls = $GetHighestLevelBaseclass(me);
-lvl = $GetBaseclassLevel(me,cls);
-par0 = $GET_HOOK_PARAM(0);
-par5 = $GET_HOOK_PARAM(5);
-par6 = $GET_HOOK_PARAM(6);
-$IF (lvl <# par6){$RETURN "N";};
]]>
      </script>
      <script name="NightSkill">
        <![CDATA[$VAR time;
-$VAR par0;
-$VAR skillName;
-$VAR skillLevel;
-$VAR skillNeed;
-$VAR skillDie;
-time = $GET_PARTY_HOURS();
-par0 = $GET_HOOK_PARAM(0);
-skillName = $GET_HOOK_PARAM(5);
-skillLevel = $SkillAdj($CharacterContext(),skillName,"","F",0);
-skillNeed = $GET_HOOK_PARAM(6);
-$IF (skillNeed <# 0)
-	{
-		skillDie = $RANDOM (0 -# skillNeed);
-		$IF (skillLevel <# skillDie){$RETURN "N";};
-	};
-$IF (time ># 6 && time <# 18){$RETURN "N";};
-$IF (skillLevel <# skillNeed){$RETURN "N";};
]]>
      </script>
      <script name="Skill">
        <![CDATA[$VAR skillLevel;
-$VAR skillName;
-$VAR skillNeed;
-$VAR skillDie;
-skillName = $GET_HOOK_PARAM(5);
-skillNeed = $GET_HOOK_PARAM(6);
-skillLevel = $SkillAdj($CharacterContext(),skillName , "", "F", 0 );
-$IF (skillNeed <# 0)
-	{
-		skillDie = $RANDOM (0 -# skillNeed);
-		$IF (skillLevel <# skillDie){$RETURN "N";};
-	};
-$IF (skillLevel <# skillNeed){$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>AbilityAdjustments</name>
    ><asl>
      <script name="idk">
        <![CDATA[
<DexInit> = 3
-2
-1
-0
-0
-0
-0
-0
-0
-0
-0
-0
-0
--1
--2
--3
--3
--3
--4
--4
--4
--5
--5
<IntSpellsMax> = 6
-7
-7
-7
-9
-9
-11
-11
-14
-18
-255
-255
-255
-255
-255
-255
-255
<IntSpellsMin> = 4
-5
-5
-5
-6
-6
-7
-7
-8
-9
-10
-12
-13
-14
-15
-16
-17
<IntSpellsSuccess> = 35
-45
-45
-45
-55
-55
-65
-65
-75
-85
-95
-96
-97
-98
-99
-100
-100
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>baseclass_NameSuppress</name>
    <asl>
      <script name="DisplayCharacterBaseclass">
        <![CDATA[$VAR par;
-par = $SA_PARAM_GET();
-$IF (par != "-?-?-")
-	{
-		$SET_HOOK_PARAM(5,"Level/XP");
-		$RETURN;
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>baseclassWitch</name>
    <asl>
      <script name="IsBaseclassAllowed">
        <![CDATA[$VAR par5;
-par5 = $GET_HOOK_PARAM(5);
-$IF (par5 != "F"){$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>baseclassWizard</name>
    <asl>
      <script name="IsBaseclassAllowed">
        <![CDATA[$VAR par5;
-par5 = $GET_HOOK_PARAM(5);
-$IF (par5 != "M"){$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>casterLevel</name>
    <asl>
      <script name="SpellCasterLevel">
        <![CDATA[$VAR atk; // attacker
-$VAR nom;
-$VAR list;
-$VAR cls; // class of spell caster
-$VAR adj; // level modifier
-$VAR lvl; // level
-atk = $IndexOf($AttackerContext());
-nom = $GET_CHAR_NAME(atk);
-list = $SA_PARAM_GET();
-cls = $DelimitedStringSubstring(list,0);
-adj = $DelimitedStringSubstring(list,1);
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj;
-$IF (cls == "monster"){$RETURN $GET_MONSTERTYPE_SA(nom,"monsterLevel");};
-$IF (cls == "item"){$RETURN adj;}
-$ELSE {$RETURN lvl;};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>ChangeClassAssassin</name>
    <asl>
      <script name="CanChangeFromClass">
        <![CDATA[$RETURN "Y";
]]>
      </script>
      <script name="CanChangeToClass">
        <![CDATA[$VAR me; $VAR align;
-me = $IndexOf($CharacterContext());
-align = $GET_CHAR_ALIGNMENT(me);
-$IF (align >=# 6) {$RETURN "Y";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>ChangeClassCleric</name>
    <asl>
      <script name="CanChangeFromClass">
        <![CDATA[$VAR me; $VAR WIS;
-me = $IndexOf($CharacterContext());
-WIS = $GET_CHAR_LIMITED_WIS(me);
-$IF (WIS >=# 15) {$RETURN "Y";};
]]>
      </script>
      <script name="CanChangeToClass">
        <![CDATA[$VAR me; $VAR WIS;
-me = $IndexOf($CharacterContext());
-WIS = $GET_CHAR_LIMITED_WIS(me);
-$IF (WIS >=# 17) {$RETURN "Y";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>ChangeClassDruid</name>
    <asl>
      <script name="CanChangeFromClass">
        <![CDATA[$VAR me; $VAR WIS; $VAR CHA;
-me = $IndexOf($CharacterContext());
-WIS = $GET_CHAR_LIMITED_WIS(me);
-CHA = $GET_CHAR_LIMITED_CHA(me);
-$IF ((WIS >=# 15) && (CHA >=# 15)) {$RETURN "Y";};
]]>
      </script>
      <script name="CanChangeToClass">
        <![CDATA[$VAR me; $VAR WIS; $VAR CHA; $VAR align;
-me = $IndexOf($CharacterContext());
-WIS = $GET_CHAR_LIMITED_WIS(me);
-CHA = $GET_CHAR_LIMITED_CHA(me);
-align = $GET_CHAR_ALIGNMENT(me);
-$IF ((WIS >=# 15) && (CHA >=# 17) && (align ==# 4)) {$RETURN "Y";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>ChangeClassFighter</name>
    <asl>
      <script name="CanChangeFromClass">
        <![CDATA[$VAR me; $VAR STR;
-me = $IndexOf($CharacterContext());
-STR = $GET_CHAR_LIMITED_STR(me);
-$IF (STR >=# 15) {$RETURN "Y";};
]]>
      </script>
      <script name="CanChangeToClass">
        <![CDATA[$VAR me; $VAR STR;
-me = $IndexOf($CharacterContext());
-STR = $GET_CHAR_LIMITED_STR(me);
-$IF (STR >=# 17) {$RETURN "Y";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>ChangeClassMagicUser</name>
    <asl>
      <script name="CanChangeFromClass">
        <![CDATA[$VAR me; $VAR INT;
-me = $IndexOf($CharacterContext());
-INT = $GET_CHAR_LIMITED_INT(me);
-$IF (INT >=# 15) {$RETURN "Y";};
]]>
      </script>
      <script name="CanChangeToClass">
        <![CDATA[$VAR me; $VAR INT;
-me = $IndexOf($CharacterContext());
-INT = $GET_CHAR_LIMITED_INT(me);
-$IF (INT >=# 17) {$RETURN "Y";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>ChangeClassPaladin</name>
    <asl>
      <script name="CanChangeFromClass">
        <![CDATA[$VAR me; $VAR STR; $VAR WIS;
-me = $IndexOf($CharacterContext());
-STR = $GET_CHAR_LIMITED_STR(me);
-WIS = $GET_CHAR_LIMITED_WIS(me);
-$IF ((STR >=# 15) && (WIS >=# 15)) {$RETURN "Y";};
]]>
      </script>
      <script name="CanChangeToClass">
        <![CDATA[$VAR me; $VAR STR; $VAR WIS; $VAR CHA; $VAR INT; $VAR CON; $VAR align;
-me = $IndexOf($CharacterContext());
-STR = $GET_CHAR_LIMITED_STR(me);
-WIS = $GET_CHAR_LIMITED_WIS(me);
-CHA = $GET_CHAR_LIMITED_CHA(me);
-INT = $GET_CHAR_LIMITED_INT(me);
-CON = $GET_CHAR_LIMITED_CON(me);
-align = $GET_CHAR_ALIGNMENT(me);
-$DEBUG("paladin align= "+align);
-$IF ((STR >=# 17) && (WIS >=# 17) && (CHA >=# 17) && (INT >=# 9) && (CON >=# 9) && (align ==# 0)) {$RETURN "Y";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>ChangeClassRanger</name>
    <asl>
      <script name="CanChangeFromClass">
        <![CDATA[$VAR me; $VAR STR; $VAR INT; $VAR WIS;
-me = $IndexOf($CharacterContext());
-STR = $GET_CHAR_LIMITED_STR(me);
-INT = $GET_CHAR_LIMITED_INT(me);
-WIS = $GET_CHAR_LIMITED_WIS(me);
-$IF ((STR >=# 15) && (INT >=# 15) && (WIS >=# 15)) {$RETURN "Y";};
]]>
      </script>
      <script name="CanChangeToClass">
        <![CDATA[$VAR me; $VAR STR; $VAR INT; $VAR WIS; $VAR CON; $VAR align;
-me = $IndexOf($CharacterContext());
-STR = $GET_CHAR_LIMITED_STR(me);
-INT = $GET_CHAR_LIMITED_INT(me);
-WIS = $GET_CHAR_LIMITED_WIS(me);
-CON = $GET_CHAR_LIMITED_CON(me);
-align = $GET_CHAR_ALIGNMENT(me);
-$IF ((STR >=# 17) && (INT >=# 17) && (WIS >=# 17) && (WIS >=# 14) && (align <=# 2)) {$RETURN "Y";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>ChangeClassThief</name>
    <asl>
      <script name="CanChangeFromClass">
        <![CDATA[$VAR me; $VAR DEX;
-me = $IndexOf($CharacterContext());
-DEX = $GET_CHAR_LIMITED_DEX(me);
-$IF (DEX >=# 15) {$RETURN "Y";};
]]>
      </script>
      <script name="CanChangeToClass">
        <![CDATA[$VAR me; $VAR DEX; $VAR align;
-me = $IndexOf($CharacterContext());
-DEX = $GET_CHAR_LIMITED_DEX(me);
-align = $GET_CHAR_ALIGNMENT(me);
-$IF ((DEX >=# 17) && (align !=# 0)) {$RETURN "Y";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>class_Assassin</name>
    ><asl>
      <script name="idk">
        <![CDATA[\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>class_baseName</name>
    <asl>
      <script name="PostCreateCharacter">
        <![CDATA[$SET_CHARACTER_SA($CharacterContext(), "class_baseName", $SA_PARAM_GET());
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>class_ClassSuppress</name>
    <asl>
      <script name="SelectCharacterClass">
        <![CDATA[$RETURN "Y";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>class_Druid</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM(7,"Immune to Woodland Creature Charm");
-$SET_HOOK_PARAM(6,"");
-$RETURN 1;
TrainingCharacter $VAR me;
-me = $IndexOf($CharacterContext());
-$IF ($GET_CHARACTER_SA($CharacterContext(),"IsDruidImmuneWoodlandCharm") != "-?-?-") {$RETURN;};
-$IF ($GET_CHAR_Lvl(me,"druid") ># 6)
-	{
-		$SET_CHARACTER_SA($CharacterContext(),"IsDruidImmuneWoodlandCharm","");
-		$SET_CHARACTER_SA($CharacterContext(),"IsDruidShapeChanger","");
-`};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>class_MageScribe</name>
    <asl>
      <script name="CanScribeOrWhatever">
        <![CDATA[$SET_HOOK_PARAM(5,"SCRIBE");
-$SET_HOOK_PARAM(6,0);
]]>
      </script>
      <script name="KnowableSpells">
        <![CDATA[$RETURN "100";
]]>
      </script>
      <script name="KnowableSpellsMinMax">
        <![CDATA[$SET_HOOK_PARAM(7,"999999");
-$SET_HOOK_PARAM(8,"999999");
-$SET_HOOK_PARAM(9,"999999");
]]>
      </script>
      <script name="AD&amp;DKnowableSpellsMinMax">
        <![CDATA[$VAR param;
-$VAR par4;
-$VAR par5;
-$VAR par6;
-$VAR intMin;
-$VAR intMax;
-$VAR char;
-$VAR muLvl;
-param = $SA_PARAM_GET();
-par4 = $GET_HOOK_PARAM(4);
-par4 = $GET_HOOK_PARAM(5);
-par6 = $GET_HOOK_PARAM(6);
-intMin = $IntegerTable("AbilityAdjustments","IntSpellsMin",par5 -# 9,"Index");
-intMax = $IntegerTable("AbilityAdjustments","IntSpellsMax",par5 -# 9,"Index");
-char = $IndexOf($CharacterContext());
-muLvl = $GET_CHAR_Lvl(char,param);
-$IF (par4 == "I")
-	{
-		$IF (par6 !=# 1)
-			{
-				$SET_HOOK_PARAM(7, intMin);
-				$SET_HOOK_PARAM(8, intMax);
-				$SET_HOOK_PARAM(9, "999999");
-				$RETURN "2";
-			}
-		$ELSE
-			{
-				$SET_HOOK_PARAM(7, intMin -# 2);
-				$SET_HOOK_PARAM(8, intMax -# 2);
-				$SET_HOOK_PARAM(9, "999999");
-				$RETURN "1";
-			};
-	};
-$IF (par4 == "L")
-	{
-		$IF (muLvl ># 18){muLvl = 19;};
-		$IF (par6 !=# $IntegerTable("class_Spells","magicUserTrain",muLvl -# 1,"Index"))
-			{
-				$SET_HOOK_PARAM(7, 0);
-				$SET_HOOK_PARAM(8, 0);
-				$SET_HOOK_PARAM(9, "999999");
-				$RETURN "0";
-			}
-		$ELSE
-			{
-				$SET_HOOK_PARAM(7, intMin);
-				$SET_HOOK_PARAM(8, intMax);
-				$SET_HOOK_PARAM(9, "999999");
-				$RETURN "0";
-			};
-	};
]]>
      </script>
      <script name="LearnSpells">
        <![CDATA[$VAR spl;
-spl = $GET_SPELL_SA($SpellContext(),"spellClass");
-$IF (spl != "-?-?-"){$RETURN "100";}
-$ELSE {$RETURN "0";};
]]>
      </script>
      <script name="LearnSpellsNum">
        <![CDATA[$VAR char;
-$VAR param;
-$VAR muLvl;
-$VAR canKnow;
-$VAR lvl;
-$VAR spl;
-$VAR sLvl;
-$VAR par4;
-$VAR par6;
-char = $IndexOf($CharacterContext());
-param = $SA_PARAM_GET();
-muLvl = $GET_CHAR_Lvl(char,param);
-canKnow = "#$2$0$0$0$0$0$0$0$0#$3$0$0$0$0$0$0$0$0#$3$2$0$0$0$0$0$0$0#$4$3$0$0$0$0$0$0$0#$4$3$2$0$0$0$0$0$0#$5$3$3$0$0$0$0$0$0#$5$4$3$2$0$0$0$0$0#$5$4$4$3$0$0$0$0$0#$5$5$4$3$2$0$0$0$0#$6$5$4$3$3$0$0$0$0#$6$6$5$4$4$0$0$0$0#$6$6$5$5$5$2$0$0$0#$7$6$6$5$5$3$0$0$0#$7$7$6$5$5$3$2$0$0#$7$7$6$6$6$4$2$0$0#$7$8$6$6$6$4$3$2$0#$7$8$6$6$6$4$4$3$0#$7$8$6$6$6$4$4$3$2#$7$8$7$6$6$4$4$4$2#$7$8$7$6$6$5$4$4$3#$7$8$7$6$6$5$5$5$3#$7$8$7$6$6$6$5$5$4#$7$8$7$6$6$6$6$6$4#$7$8$7$6$6$6$6$6$5#$7$9$7$6$6$6$6$6$6#$8$9$8$7$6$6$6$6$6#$8$9$8$7$7$7$7$6$6#$8$9$8$7$7$7$7$7$7#$9$10$9$8$7$7$7$7$7#$9$10$9$8$8$8$8$7$7#$9$10$9$8$8$8$8$8$8#$10$11$10$9$8$8$8$8$8#$10$11$10$9$9$9$9$8$8#$11$12$11$10$9$9$9$9$9#$11$12$12$11$9$9$9$9$9#$11$12$12$11$10$10$10$9$9#$11$12$12$11$10$10$10$10$10#$12$13$12$11$10$10$10$10$10#$12$13$12$11$11$11$11$10$10#$12$13$12$11$11$11$11$11$11";
-lvl = $DelimitedStringSubstring(canKnow,muLvl -# 1);
-sLvl = $IntegerTable("class_Spells","magicUserLvl",muLvl -# 1,"Index");
-par4 = $GET_HOOK_PARAM(4);
-par6 = $GET_HOOK_PARAM(6);
-$IF (par6 ==# 0) {$SET_HOOK_PARAM(8, 0); $RETURN;};
-spl = $DelimitedStringSubstring(lvl,par6 -# 1);
-$IF (par4 == "I")
-	{
-		$SET_HOOK_PARAM(8,spl);
-		$SET_HOOK_PARAM(9,1);
-		$RETURN "1";
-	};
-$IF (par4 == "L")
-	{
-		$IF (par6 <=# sLvl)
-			{
-				$SET_HOOK_PARAM(8,1);
-				$SET_HOOK_PARAM(9,1);
-			}
-		$ELSE
-			{
-				$SET_HOOK_PARAM(8,0);
-			};
-		$RETURN "1";
-	};
]]>
      </script>
      <script name="ScribeOrWhatever">
        <![CDATA[$SET_HOOK_PARAM(5, "Scribe");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>class_NoSpells</name>
    <asl>
      <script name="CanCastSpells">
        <![CDATA[$IF ($SpellContext() == "WandMagicMissile"){$RETURN;}
-$ELSE {$RETURN "N";};
]]>
      </script>
      <script name="CanMemorizeSpells">
        <![CDATA[$RETURN "N";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>class_Paladin</name>
    <asl>
      <script name="CanCureOrWhatever">
        <![CDATA[$VAR tgt;
-$VAR prevTime; // hours
-$VAR curTime;
-$VAR elapsedTime;
-$VAR waitTime;
-$VAR paladinLvl;
-$VAR paladinDiv;
-tgt = $IndexOf($CharacterContext());
-prevTime = $GET_CHARACTER_SA($CharacterContext(),"paladinCureTime");
-curTime = $GET_PARTY_TIME();
-$IF(prevTime != "-?-?-"){elapsedTime = curTime -# prevTime;}
-$ELSE{elapsedTime = 999;};
-paladinLvl = $GET_CHAR_Lvl(tgt,"paladin");
-paladinDiv = (paladinLvl +#4) /# 5;
-$IF (paladinDiv <# 1){paladinDiv = 1;};
-$IF (paladinDiv ># 8){paladinDiv = 8;};
-waitTime = 10080 /# paladinDiv;
-$IF ((elapsedTime >= 0) && (elapsedTime <# waitTime)) {$RETURN;};
-$SET_HOOK_PARAM( 5, "CURE DISEASE" );
-$SET_HOOK_PARAM( 6, "0");
]]>
      </script>
      <script name="CanLayOrWhatever">
        <![CDATA[$VAR prevTime;
-$VAR curTime;
-$VAR elapsedTime;
-prevTime = $GET_CHARACTER_SA($CharacterContext(),"paladinLayTime");
-curTime = $GET_PARTY_TIME();
-$IF(prevTime)  // First time fudge.
-{elapsedTime = curTime -# prevTime;}
-$ELSE{elapsedTime = 999;};
-$IF ((elapsedTime >= 0) && (elapsedTime <# 1440)) {$RETURN;};
-$SET_HOOK_PARAM( 5, "LAY ON HANDS" );
-$SET_HOOK_PARAM( 6, "0");
]]>
      </script>
      <script name="CreateMonsterCombatant">
        <![CDATA[$VAR char; // character being created
-$VAR cls;
-char = $IndexOf($CharacterContext());
-cls = $GET_CHAR_Lvl(char,"paladin");
-$IF (cls ># 0)
-	{
-		$SET_CHARACTER_SA($CharacterContext(),"IsPaladinImmuneDisease","paladin");
-		$SET_CHARACTER_SA($CharacterContext(),"IsPaladinProtectedFromEvil","paladin");
-		$SkillAdj($CharacterContext(),"Save Vs BR","paladinProtEvil","-","2");
-		$SkillAdj($CharacterContext(),"Save Vs PP","paladinProtEvil","-","2");
-		$SkillAdj($CharacterContext(),"Save Vs PPDM","paladinProtEvil","-","2");
-		$SkillAdj($CharacterContext(),"Save Vs RSW","paladinProtEvil","-","2");
-		$SkillAdj($CharacterContext(),"Save Vs SP","paladinProtEvil","-","2");
-	};
]]>
      </script>
      <script name="CureOrWhatever">
        <![CDATA[$VAR curTime;
-curTime = $GET_PARTY_TIME();
-$SET_CHARACTER_SA($CharacterContext(),"paladinCureTime",curTime);
-$SET_HOOK_PARAM(1,"paladinCureDisease");
-$RETURN "CastSpell";
]]>
      </script>
      <script name="LayOrWhatever">
        <![CDATA[$VAR curTime;
-curTime = $GET_PARTY_TIME();
-$SET_CHARACTER_SA($Myself(),"paladinLayTime",curTime);
-$SET_HOOK_PARAM(1,"paladinLayOnHands");
-$RETURN "CastSpell";
]]>
      </script>
      <script name="PostCreateCharacter">
        <![CDATA[$SET_CHARACTER_SA($CharacterContext(),"IsPaladinImmuneDisease","paladin");
-$SET_CHARACTER_SA($CharacterContext(),"IsPaladinProtectedFromEvil","paladin");
-$SkillAdj($CharacterContext(),"Save Vs BR","paladinProtEvil","-","2");
-$SkillAdj($CharacterContext(),"Save Vs PP","paladinProtEvil","-","2");
-$SkillAdj($CharacterContext(),"Save Vs PPDM","paladinProtEvil","-","2");
-$SkillAdj($CharacterContext(),"Save Vs RSW","paladinProtEvil","-","2");
-$SkillAdj($CharacterContext(),"Save Vs SP","paladinProtEvil","-","2");
]]>
      </script>
      <script name="SpellCasterLevel">
        <![CDATA[$VAR atk; // attacker
-$VAR cls;
-$VAR lvl;
-atk = $IndexOf($AttackerContext());
-cls = $GetHighestLevelBaseclass(atk);
-lvl = $GetBaseclassLevel(atk,cls);
-$RETURN lvl;
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>class_Spells</name>
    ><asl>
      <script name="idk">
        <![CDATA[
<magicUserLvl> = 1
-1
-2
-2
-3
-3
-4
-4
-5
-5
-5
-6
-6
-7
-7
-8
-8
-9
-9
<magicUserTrain> = 1
-0
-2
-0
-3
-0
-4
-0
-5
-0
-0
-6
-0
-7
-0
-8
-0
-9
-0
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>class_Thief</name>
    ><asl>
      <script name="idk">
        <![CDATA[\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>CombatPlacement</name>
    <asl>
      <script name="PlaceMonsterClose">
        $IF($GET_PARTY_FACING() ><![CDATA[=#2){$MonsterPlacement("FbPV500E");}
-$ELSE{$MonsterPlacement("bPV500E");};
]]>
      </script>
      <script name="PlaceMonsterFar">
        $IF($GET_PARTY_FACING() ><![CDATA[=#2){$MonsterPlacement("17FbPV500E");}
-$ELSE{$MonsterPlacement("16FbPV500E");};
]]>
      </script>
      <script name="PlaceMonsterNear">
        $IF($GET_PARTY_FACING() ><![CDATA[=#2){$MonsterPlacement("10FbPV500E");}
-$ELSE{$MonsterPlacement("9FbPV500E");};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>CombatRoundStart</name>
    <asl>
      <script name="StartCombatRound">
        <![CDATA[$SA_PARAM_SET("0");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>CombatRoundStart1</name>
    <asl>
      <script name="StartCombatRound">
        <![CDATA[$SA_PARAM_SET("-?-?-");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>Competing</name>
    <asl>
      <script name="AdjustInitiative">
        <![CDATA[$VAR me; $VAR dex; $VAR p5; $VAR list; $VAR adj; $VAR redo; $VAR un;
-me = $IndexOf($CombatantContext());
-dex = $GET_CHAR_LIMITED_DEX(me);
-p5 = $GET_HOOK_PARAM(5);
-list = "$3$3$3$3$2$1$0$0$0$0$0$0$0$0$0$0$-1$-2$-3$-3$-3$-4$-4$-4$-5$-5";
-adj = $DelimitedStringSubstring(list,dex);
-un = $GET_COMBATANT_SA($CombatantContext(),"class_Unsurprised");
-$IF ($NOT($GetCombatRound()))//Past round 1
-	{$RETURN adj;};
-$IF (p5 != 18)// adjustment for unsurprised
-	{$RETURN adj;};
-$IF (adj <# "-1" || adj ==# "-1" && un != "-?-?-")// negate surprise for -2 or better
-	{redo = 1;};
-$IF (un != "-?-?-" || dex == 16)// 50% negate surprise for -1 or ranger
-	{redo = $RANDOM(2);};
-$IF (redo ==# 1)// set new random initiative if not surprised
-	{$RETURN $RANDOM(10) +# 9 +# adj -# 18;}
-$ELSE {$RETURN 5;}; // set to surprised
]]>
      </script>
      <script name="AutoAction">
        <![CDATA[$RETURN $GET_COMBATANT_SA($CombatantContext(),"playerControl");
]]>
      </script>
      <script name="CombatMainMenu">
        <![CDATA[$VAR adj; $VAR count; $VAR t; $VAR tgt; $VAR bc; $VAR lvl;
-bc = $GET_CHARACTER_SA($CharacterContext(),"class_Sweep");
-$IF (bc != "-?-?-") {lvl = $GET_CHAR_Lvl($MyIndex(),bc);};
-$IF (lvl ># 1)
-	{
-		adj = $ListAdjacentCombatants($MyIndex());
-		t = 0;
-		count = $DelimitedStringCount(adj);
-		$WHILE (count >=# 0)
-			{
-				tgt = $DelimitedStringSubstring(adj,count);
-				$IF ($GET_MONSTERTYPE_SA($GET_CHAR_NAME(tgt),"monster_Swept") != "-?-?-" && $GET_CHAR_STATUS(tgt) ==# 0){t = t +# 1;};
-				count = count -# 1;
-			};
-		$IF (t ># 1)
-			{
-				$SET_HOOK_PARAM(6, "SWEEP");
-				$SET_HOOK_PARAM(7, 0);
-				$SET_COMBATANT_SA($CombatantContext(),"IsSweeping",lvl);
-			};
-	};
]]>
      </script>
      <script name="DoesAttackSucceed">
        <![CDATA[$VAR par5;
-par5 = $GET_HOOK_PARAM(5);
-$IF (par5 ==# 20) {$RETURN "Y";};
-$IF (par5 ==# 1) {$RETURN "N";};
]]>
      </script>
      <script name="FreeAttack-AttackOver">
        <![CDATA[$SET_HOOK_PARAM(7,"0");
-$RETURN;
]]>
      </script>
      <script name="FreeAttack-CanFreeAttack">
        <![CDATA[$VAR rangeWpn; $VAR par8;
-rangeWpn = $GET_ITEM_SA($GET_CHAR_Ready($AttackerContext(), "WEAPON", 0),"item_CombatAim");
-par8 = $GET_HOOK_PARAM(8);
-$IF (rangeWpn != "-?-?-"){$RETURN "N";};
-$RETURN par8;
]]>
      </script>
      <script name="GetNumberOfAttacks">
        <![CDATA[$VAR com; $VAR bc; $VAR lvl; $VAR adj; $VAR adjLvl;
-com = $IndexOf($CombatantContext());
-bc = $GET_CHARACTER_SA($CharacterContext(),"class_AttacksPerRound");
-// monk starts
-$IF ($GET_CHAR_Lvl(com,"monk") ># 0)
-	{
-		lvl = $GET_CHAR_Lvl(com,"monk");
-		$IF (lvl >=# 16) {$RETURN 4;};
-		$IF (lvl >=# 14) {$RETURN 3;};
-		$IF (lvl >=# 11) {$IF ((($GetCombatRound() +# 1) %# 2) ==# 0) {$RETURN 2;}
-						  $ELSE {$RETURN 3;};};
-		$IF (lvl >=# 9) {$RETURN 2;};
-		$IF (lvl >=# 6) {$RETURN (($GetCombatRound() +# 1) %# 2) +# 1;};
-		$IF (lvl >=# 4) {$IF ((($GetCombatRound() +# 1) %# 4) ==# 0) {$RETURN 2;};};
-// monk ends
-	};
-$IF (bc == "-?-?-") {$RETURN;};
-adj = $GET_CHARACTER_SA($CharacterContext(),"class_AttacksPerRoundAdj");
-$IF (adj != "-?-?-") {adjLvl = ($GET_CHAR_Lvl(com,bc) -# 1) /# 7;}
-$ELSE {adjLvl = 0;};
-lvl = $GET_CHAR_Lvl(com,bc) -# adjLvl;
-$IF ($GET_MONSTERTYPE_SA($MonsterTypeContext(),"monsterLevel") != "-?-?-"){$RETURN;};
-$IF (lvl >=# 13) {$RETURN 2;};
-$IF (lvl >=# 7) {$RETURN (($GetCombatRound() +# 1) %# 2) +# 1;};
]]>
      </script>
      <script name="Guarding-AttackOver">
        <![CDATA[$RETURN;
]]>
      </script>
      <script name="Guarding-BeginCombat">
        <![CDATA[$RETURN "N";
]]>
      </script>
      <script name="Guarding-CanGuard">
        <![CDATA[$VAR rangeWpn;
-rangeWpn = $GET_ITEM_SA($GET_CHAR_Ready($CombatantContext(), "WEAPON",0),"item_CombatAim");
-$IF (rangeWpn != "-?-?-"){$RETURN "N";};
-$IF($GET_HOOK_PARAM(5) ==# 2){$RETURN "Y";};
]]>
      </script>
      <script name="Guarding-CanGuardAttack">
        <![CDATA[$VAR par5;
-par5 = $GET_HOOK_PARAM(5);
-$IF ($GetCombatantState($AttackerContext()) != "ICS_Guarding"){$RETURN "N";};
-$IF (par5 ># 0){$RETURN "Y";};
]]>
      </script>
      <script name="Guarding-Guard">
        <![CDATA[$RETURN;
]]>
      </script>
      <script name="Guarding-StartOfRound">
        <![CDATA[$VAR par5;
-$VAR par6;
-par5 = $GET_HOOK_PARAM(5);
-par6 = $GET_HOOK_PARAM(6);
-$IF (par5 ==# 3){$SET_HOOK_PARAM(6,"G");};
]]>
      </script>
      <script name="IsCombatReady">
        <![CDATA[$RETURN;
]]>
      </script>
      <script name="OnStartCombat">
        <![CDATA[$VAR name; $VAR name1; $VAR me;
-$VAR lvl; $VAR lead; $VAR controlNPC;
-$VAR idx1; $VAR idx4; $VAR modCha;
-me = $IndexOf($CharacterContext());
-name = $GET_CHAR_NAME(me);
-idx1 = $NextCreatureIndex("", 1);
-idx4 = $NextCreatureIndex("", 4);
-$SET_CHARACTER_SA($CharacterContext(  ),"turnUndead","");
-$IF ($NextCreatureIndex(me -# 1, 4) == me)
-	{
-		$SET_CHARACTER_SA($CharacterContext(),"side",1);
-		$SET_CHAR_ASL(me,"side",1);
-	}
-$ELSE
-	{
-		$SET_CHARACTER_SA($CharacterContext(),"side",2);
-		$SET_CHAR_ASL(me,"side",2);
-	};
-name1 = $GET_CHAR_NAME(idx1);
-$IF (name != name1 && $GET_MONSTERTYPE_SA(name1,"range") != "-?-?-")
-	{
-		$SET_CHARACTER_SA($CharacterContext(),"range" + name1,1);
-	};
-$RUN_CHAR_SCRIPTS(me,"spawn");
-$IF ($GetCombatRound() ># 0) {$SET_COMBATANT_SA($CharacterContext(),"Summoned","spell");};
-// Paladin Leadership
-controlNPC = 0;
-$SET_CHARACTER_SA($CharacterContext(),"endControl", 1);
-lead = $GET_CHARACTER_SA($CharacterContext(),"class_Leader");
-lvl = $GET_CHAR_Lvl(me,lead);
-$IF ($InParty($CharacterContext()) != "" && lvl ># 0)
-	{
-		modCha = ($GET_CHAR_LIMITED_CHA(me) -# 13) *# 5;
-		$IF (lvl >=# 3){controlNPC = modCha +# 79;};
-		$IF (lvl ==# 2){controlNPC = modCha +# 39;};
-		$IF (lvl ==# 1){controlNPC = modCha +# 19;};
-		$SET_PARTY_ASL("controlNPC",controlNPC);
-	};
-$IF ($GET_CHARACTER_SA($CharacterContext(),"side") == 1 && $RANDOM(100) <# $GET_PARTY_ASL("controlNPC"))
-	{
-		$SET_CHARACTER_SA($CharacterContext(),"playerControl","CP");
-	};
]]>
      </script>
      <script name="OnStep">
        <![CDATA[$VAR me;
-$VAR it;
-me = $IndexOf($CombatantContext());
-it = $NextCreatureIndex("", 1);
-$IF (it != me)
-	{
-		$SET_HOOK_PARAM(5, it);
-		$SET_HOOK_PARAM(6, me);
-		$RUN_CHAR_SCRIPTS(it,"CheckProximity");
-		$RUN_CHAR_SCRIPTS(me,"CheckProximity");
-	};
]]>
      </script>
      <script name="PreStartCombat">
        <![CDATA[$VAR par5;
-$VAR char;
-$VAR class;
-par5 = $GET_HOOK_PARAM(5);
-char = $IndexOf($CharacterContext());
-class = $GET_CHAR_CLASS(char);
-$IF (class == "Paladin") {$RETURN par5 +# 10000;};
]]>
      </script>
      <script name="StartCombatRound">
        <![CDATA[$RETURN;
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>DamageMagical</name>
    <asl>
      <script name="DoesSpellAttackSucceed">
        <![CDATA[$VAR atk; // attacker
-$VAR tgt; // target
-$VAR targetMR;
-$VAR caster;
-$VAR caster1;
-$VAR caster2;
-$VAR level;
-$VAR base;
-atk = $IndexOf($AttackerContext());
-tgt = $IndexOf($TargetContext());
-targetMR = $GET_CHAR_MAGICRESIST(tgt);
-$IF (targetMR ==# 0) {$RETURN;};
-caster = $SA_SPELL_GET("casterLevel");
-caster1 = $DelimitedStringSubstring(caster,0);
-caster2 = $DelimitedStringSubstring(caster,1);
-$IF (caster1 == "monster")
-	{
-		level =  $GET_MONSTERTYPE_SA($GET_CHAR_NAME(atk),"monsterLevel");
-		base = 11;
-	}
-$ELSE
-	{
-		$IF (caster1 == "item")
-			{
-				level = caster2;
-				base = 11;
-			}
-		$ELSE
-			{
-				level = $GET_CHAR_Lvl(atk,caster1);
-				base = caster2;
-			};
-	};
Parameters = "acid, charm, cold, electricity, fear, fire, mind, paralysis, petrification, poison, spell";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>DamageNonMagical</name>
    ><asl>
      <script name="idk">
        <![CDATA[Parameters = "acid, blunt, cold, crushing, electricity, fire, piercing, poison, psionic, slashing, venom";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>elemental_GrowthAcid</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Acid Growth");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="DoesAttackSucceed">
        <![CDATA[$VAR tgt; $VAR tgtName; $VAR hp;
-$VAR item; $VAR itmNon; $VAR monster; $VAR monNon; $VAR grow;
-item = $SA_ITEM_GET("DamageMagical");
-itmNon = $SA_ITEM_GET("DamageNonMagical");
-monster = $SA_MONSTERTYPE_GET("DamageMagical");
-monNon = $SA_MONSTERTYPE_GET("DamageNonMagical");
-$IF ((item == "-?-?-") && (itmNon == "-?-?-") && (monster == "-?-?-") && (monNon == "-?-?-")) {$RETURN;};
-$IF (item != "-?-?-") {grow = item;};
-$IF (itmNon != "-?-?-") {grow = itmNon;};
-$IF (monster != "-?-?-") {grow = monster;};
-$IF (monNon != "-?-?-") {grow = monNon;};
-$IF (grow == "acid")
-	{
-		tgt = $IndexOf($TargetContext());
-		hp = $RANDOM(8) +# 1;
-		tgtName = $GET_CHAR_NAME(tgt);
-		$SET_CHAR_MAXHITPOINTS(tgt, $GET_CHAR_MAXHITPOINTS(tgt) +# hp);
-		$SET_CHAR_HITPOINTS(tgt, $GET_CHAR_HITPOINTS(tgt) +# hp);
-		$SET_CHAR_THAC0(tgt, $GET_CHAR_THAC0(tgt) -# 1);
-		$SET_COMBATANT_SA($TargetContext(),"monsterLevel", $GET_MONSTERTYPE_SA(tgtName,"monsterLevel") +# 1);
-		$SET_HOOK_PARAM(5,tgtName +" grows.");
-		$RETURN "N";
-	};
]]>
      </script>
      <script name="DoesSpellAttackSucceed">
        <![CDATA[$VAR tgt; $VAR tgtName; $VAR hp;
-$VAR spell; $VAR splNon; $VAR grow;
-spell = $SA_SPELL_GET("DamageMagical");
-splNon = $SA_SPELL_GET("DamageNonMagical");
-$IF ((spell == "-?-?-") && (splNon == "-?-?-")) {$RETURN;};
-$IF (spell != "-?-?-") {grow = spell;};
-$IF (splNon != "-?-?-") {grow = splNon;};
-$IF (grow == "acid")
-	{
-		tgt = $IndexOf($TargetContext());
-		tgtName = $GET_CHAR_NAME(tgt);
-		hp = $RANDOM(8) +# 1;
-		$SET_CHAR_MAXHITPOINTS(tgt,$GET_CHAR_MAXHITPOINTS(tgt) +# hp);
-		$SET_CHAR_HITPOINTS(tgt,$GET_CHAR_HITPOINTS(tgt) +# hp);
-		$SET_CHAR_THAC0(tgt,$GET_CHAR_THAC0(tgt) -# 1);
-		$SET_COMBATANT_SA($TargetContext(),"monsterLevel", $GET_MONSTERTYPE_SA(tgtName,"monsterLevel") +# 1);
-		$SET_HOOK_PARAM(5,tgtName +" grows.");
-		$RETURN "N";
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>elemental_GrowthCold</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Cold Growth");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="DoesAttackSucceed">
        <![CDATA[$VAR tgt; $VAR tgtName; $VAR hp;
-$VAR item; $VAR itmNon; $VAR monster; $VAR monNon; $VAR grow;
-item = $SA_ITEM_GET("DamageMagical");
-itmNon = $SA_ITEM_GET("DamageNonMagical");
-monster = $SA_MONSTERTYPE_GET("DamageMagical");
-monNon = $SA_MONSTERTYPE_GET("DamageNonMagical");
-$IF ((item == "-?-?-") && (itmNon == "-?-?-") && (monster == "-?-?-") && (monNon == "-?-?-")) {$RETURN;};
-$IF (item != "-?-?-") {grow = item;};
-$IF (itmNon != "-?-?-") {grow = itmNon;};
-$IF (monster != "-?-?-") {grow = monster;};
-$IF (monNon != "-?-?-") {grow = monNon;};
-$IF (grow == "cold")
-	{
-		tgt = $IndexOf($TargetContext());
-		hp = $RANDOM(8) +# 1;
-		tgtName = $GET_CHAR_NAME(tgt);
-		$SET_CHAR_MAXHITPOINTS(tgt, $GET_CHAR_MAXHITPOINTS(tgt) +# hp);
-		$SET_CHAR_HITPOINTS(tgt, $GET_CHAR_HITPOINTS(tgt) +# hp);
-		$SET_CHAR_THAC0(tgt, $GET_CHAR_THAC0(tgt) -# 1);
-		$SET_COMBATANT_SA($TargetContext(),"monsterLevel", $GET_MONSTERTYPE_SA(tgtName,"monsterLevel") +# 1);
-		$SET_HOOK_PARAM(5,tgtName +" grows.");
-		$RETURN "N";
-	};
]]>
      </script>
      <script name="DoesSpellAttackSucceed">
        <![CDATA[$VAR tgt; $VAR tgtName; $VAR hp;
-$VAR spell; $VAR splNon; $VAR grow;
-spell = $SA_SPELL_GET("DamageMagical");
-splNon = $SA_SPELL_GET("DamageNonMagical");
-$IF ((spell == "-?-?-") && (splNon == "-?-?-")) {$RETURN;};
-$IF (spell != "-?-?-") {grow = spell;};
-$IF (splNon != "-?-?-") {grow = splNon;};
-$IF (grow == "cold")
-	{
-		tgt = $IndexOf($TargetContext());
-		tgtName = $GET_CHAR_NAME(tgt);
-		hp = $RANDOM(8) +# 1;
-		$SET_CHAR_MAXHITPOINTS(tgt,$GET_CHAR_MAXHITPOINTS(tgt) +# hp);
-		$SET_CHAR_HITPOINTS(tgt,$GET_CHAR_HITPOINTS(tgt) +# hp);
-		$SET_CHAR_THAC0(tgt,$GET_CHAR_THAC0(tgt) -# 1);
-		$SET_COMBATANT_SA($TargetContext(),"monsterLevel", $GET_MONSTERTYPE_SA(tgtName,"monsterLevel") +# 1);
-		$SET_HOOK_PARAM(5,tgtName +" grows.");
-		$RETURN "N";
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>elemental_GrowthElectricity</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Electrical Growth");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="DoesAttackSucceed">
        <![CDATA[$VAR tgt; $VAR tgtName; $VAR hp;
-$VAR item; $VAR itmNon; $VAR monster; $VAR monNon; $VAR grow;
-item = $SA_ITEM_GET("DamageMagical");
-itmNon = $SA_ITEM_GET("DamageNonMagical");
-monster = $SA_MONSTERTYPE_GET("DamageMagical");
-monNon = $SA_MONSTERTYPE_GET("DamageNonMagical");
-$IF ((item == "-?-?-") && (itmNon == "-?-?-") && (monster == "-?-?-") && (monNon == "-?-?-")) {$RETURN;};
-$IF (item != "-?-?-") {grow = item;};
-$IF (itmNon != "-?-?-") {grow = itmNon;};
-$IF (monster != "-?-?-") {grow = monster;};
-$IF (monNon != "-?-?-") {grow = monNon;};
-$IF (grow == "electricity")
-	{
-		tgt = $IndexOf($TargetContext());
-		hp = $RANDOM(8) +# 1;
-		tgtName = $GET_CHAR_NAME(tgt);
-		$SET_CHAR_MAXHITPOINTS(tgt, $GET_CHAR_MAXHITPOINTS(tgt) +# hp);
-		$SET_CHAR_HITPOINTS(tgt, $GET_CHAR_HITPOINTS(tgt) +# hp);
-		$SET_CHAR_THAC0(tgt, $GET_CHAR_THAC0(tgt) -# 1);
-		$SET_COMBATANT_SA($TargetContext(),"monsterLevel", $GET_MONSTERTYPE_SA(tgtName,"monsterLevel") +# 1);
-		$SET_HOOK_PARAM(5,tgtName +" grows.");
-		$RETURN "N";
-	};
]]>
      </script>
      <script name="DoesSpellAttackSucceed">
        <![CDATA[$VAR tgt; $VAR tgtName; $VAR hp;
-$VAR spell; $VAR splNon; $VAR grow;
-spell = $SA_SPELL_GET("DamageMagical");
-splNon = $SA_SPELL_GET("DamageNonMagical");
-$IF ((spell == "-?-?-") && (splNon == "-?-?-")) {$RETURN;};
-$IF (spell != "-?-?-") {grow = spell;};
-$IF (splNon != "-?-?-") {grow = splNon;};
-$IF (grow == "electricity")
-	{
-		tgt = $IndexOf($TargetContext());
-		tgtName = $GET_CHAR_NAME(tgt);
-		hp = $RANDOM(8) +# 1;
-		$SET_CHAR_MAXHITPOINTS(tgt,$GET_CHAR_MAXHITPOINTS(tgt) +# hp);
-		$SET_CHAR_HITPOINTS(tgt,$GET_CHAR_HITPOINTS(tgt) +# hp);
-		$SET_CHAR_THAC0(tgt,$GET_CHAR_THAC0(tgt) -# 1);
-		$SET_COMBATANT_SA($TargetContext(),"monsterLevel", $GET_MONSTERTYPE_SA(tgtName,"monsterLevel") +# 1);
-		$SET_HOOK_PARAM(5,tgtName +" grows.");
-		$RETURN "N";
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>elemental_GrowthFire</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Fire Growth");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="DoesAttackSucceed">
        <![CDATA[$VAR tgt; $VAR tgtName; $VAR hp;
-$VAR item; $VAR itmNon; $VAR monster; $VAR monNon; $VAR grow;
-item = $SA_ITEM_GET("DamageMagical");
-itmNon = $SA_ITEM_GET("DamageNonMagical");
-monster = $SA_MONSTERTYPE_GET("DamageMagical");
-monNon = $SA_MONSTERTYPE_GET("DamageNonMagical");
-$IF ((item == "-?-?-") && (itmNon == "-?-?-") && (monster == "-?-?-") && (monNon == "-?-?-")) {$RETURN;};
-$IF (item != "-?-?-") {grow = item;};
-$IF (itmNon != "-?-?-") {grow = itmNon;};
-$IF (monster != "-?-?-") {grow = monster;};
-$IF (monNon != "-?-?-") {grow = monNon;};
-$IF (grow == "fire")
-	{
-		tgt = $IndexOf($TargetContext());
-		hp = $RANDOM(8) +# 1;
-		tgtName = $GET_CHAR_NAME(tgt);
-		$SET_CHAR_MAXHITPOINTS(tgt, $GET_CHAR_MAXHITPOINTS(tgt) +# hp);
-		$SET_CHAR_HITPOINTS(tgt, $GET_CHAR_HITPOINTS(tgt) +# hp);
-		$SET_CHAR_THAC0(tgt, $GET_CHAR_THAC0(tgt) -# 1);
-		$SET_COMBATANT_SA($TargetContext(),"monsterLevel", $GET_MONSTERTYPE_SA(tgtName,"monsterLevel") +# 1);
-		$SET_HOOK_PARAM(5,tgtName +" grows.");
-		$RETURN "N";
-	};
]]>
      </script>
      <script name="DoesSpellAttackSucceed">
        <![CDATA[$VAR tgt; $VAR tgtName; $VAR hp;
-$VAR spell; $VAR splNon; $VAR grow;
-spell = $SA_SPELL_GET("DamageMagical");
-splNon = $SA_SPELL_GET("DamageNonMagical");
-$IF ((spell == "-?-?-") && (splNon == "-?-?-")) {$RETURN;};
-$IF (spell != "-?-?-") {grow = spell;};
-$IF (splNon != "-?-?-") {grow = splNon;};
-$IF (grow == "fire")
-	{
-		tgt = $IndexOf($TargetContext());
-		tgtName = $GET_CHAR_NAME(tgt);
-		hp = $RANDOM(8) +# 1;
-		$SET_CHAR_MAXHITPOINTS(tgt,$GET_CHAR_MAXHITPOINTS(tgt) +# hp);
-		$SET_CHAR_HITPOINTS(tgt,$GET_CHAR_HITPOINTS(tgt) +# hp);
-		$SET_CHAR_THAC0(tgt,$GET_CHAR_THAC0(tgt) -# 1);
-		$SET_COMBATANT_SA($TargetContext(),"monsterLevel", $GET_MONSTERTYPE_SA(tgtName,"monsterLevel") +# 1);
-		$SET_HOOK_PARAM(5,tgtName +" grows.");
-		$RETURN "N";
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>elemental_ImmuneAcid</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Immune to Acid");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="ComputeDamage">
        <![CDATA[$VAR item; $VAR itmNon; $VAR monster; $VAR monNon; $VAR immune;
-item = $SA_ITEM_GET("DamageMagical");
-itmNon = $SA_ITEM_GET("DamageNonMagical");
-monster = $SA_MONSTERTYPE_GET("DamageMagical");
-monNon = $SA_MONSTERTYPE_GET("DamageNonMagical");
-$IF ((item == "-?-?-") && (itmNon == "-?-?-") && (monster == "-?-?-") && (monNon == "-?-?-")) {$RETURN;};
-$IF (item != "-?-?-") {immune = item;};
-$IF (itmNon != "-?-?-") {immune = itmNon;};
-$IF (monster != "-?-?-") {immune = monster;};
-$IF (monNon != "-?-?-") {immune = monNon;};
-$IF (immune == "acid") {$RETURN 0;};
]]>
      </script>
      <script name="ComputeSpellDamage">
        <![CDATA[$VAR spell; $VAR splNon; $VAR immune;
-spell = $SA_SPELL_GET("DamageMagical");
-splNon = $SA_SPELL_GET("DamageNonMagical");
-$IF ((spell == "-?-?-") && (splNon == "-?-?-")){$RETURN;};
-$IF (spell != "-?-?-") {immune = spell;};
-$IF (splNon != "-?-?-") {immune = splNon;};
-$IF (immune == "acid") {$RETURN 0;};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>elemental_ImmuneCold</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Immune to Cold");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="ComputeDamage">
        <![CDATA[$VAR item; $VAR itmNon; $VAR monster; $VAR monNon; $VAR immune;
-item = $SA_ITEM_GET("DamageMagical");
-itmNon = $SA_ITEM_GET("DamageNonMagical");
-monster = $SA_MONSTERTYPE_GET("DamageMagical");
-monNon = $SA_MONSTERTYPE_GET("DamageNonMagical");
-$IF ((item == "-?-?-") && (itmNon == "-?-?-") && (monster == "-?-?-") && (monNon == "-?-?-")) {$RETURN;};
-$IF (item != "-?-?-") {immune = item;};
-$IF (itmNon != "-?-?-") {immune = itmNon;};
-$IF (monster != "-?-?-") {immune = monster;};
-$IF (monNon != "-?-?-") {immune = monNon;};
-$IF (immune == "cold") {$RETURN 0;};
]]>
      </script>
      <script name="ComputeSpellDamage">
        <![CDATA[$VAR spell; $VAR splNon; $VAR immune;
-spell = $SA_SPELL_GET("DamageMagical");
-splNon = $SA_SPELL_GET("DamageNonMagical");
-$IF ((spell == "-?-?-") && (splNon == "-?-?-")){$RETURN;};
-$IF (spell != "-?-?-") {immune = spell;};
-$IF (splNon != "-?-?-") {immune = splNon;};
-$IF (immune == "cold") {$RETURN 0;};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>elemental_ImmuneElectricity</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Immune to Electricity");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="ComputeDamage">
        <![CDATA[$VAR item; $VAR itmNon; $VAR monster; $VAR monNon; $VAR immune;
-item = $SA_ITEM_GET("DamageMagical");
-itmNon = $SA_ITEM_GET("DamageNonMagical");
-monster = $SA_MONSTERTYPE_GET("DamageMagical");
-monNon = $SA_MONSTERTYPE_GET("DamageNonMagical");
-$IF ((item == "-?-?-") && (itmNon == "-?-?-") && (monster == "-?-?-") && (monNon == "-?-?-")) {$RETURN;};
-$IF (item != "-?-?-") {immune = item;};
-$IF (itmNon != "-?-?-") {immune = itmNon;};
-$IF (monster != "-?-?-") {immune = monster;};
-$IF (monNon != "-?-?-") {immune = monNon;};
-$IF (immune == "electricity") {$RETURN 0;};
]]>
      </script>
      <script name="ComputeSpellDamage">
        <![CDATA[$VAR spell; $VAR splNon; $VAR immune;
-spell = $SA_SPELL_GET("DamageMagical");
-splNon = $SA_SPELL_GET("DamageNonMagical");
-$IF ((spell == "-?-?-") && (splNon == "-?-?-")){$RETURN;};
-$IF (spell != "-?-?-") {immune = spell;};
-$IF (splNon != "-?-?-") {immune = splNon;};
-$IF (immune == "electricity") {$RETURN 0;};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>elemental_ImmuneFire</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Immune to Fire");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="ComputeDamage">
        <![CDATA[$VAR item; $VAR itmNon; $VAR monster; $VAR monNon; $VAR immune;
-item = $SA_ITEM_GET("DamageMagical");
-itmNon = $SA_ITEM_GET("DamageNonMagical");
-monster = $SA_MONSTERTYPE_GET("DamageMagical");
-monNon = $SA_MONSTERTYPE_GET("DamageNonMagical");
-$IF ((item == "-?-?-") && (itmNon == "-?-?-") && (monster == "-?-?-") && (monNon == "-?-?-")) {$RETURN;};
-$IF (item != "-?-?-") {immune = item;};
-$IF (itmNon != "-?-?-") {immune = itmNon;};
-$IF (monster != "-?-?-") {immune = monster;};
-$IF (monNon != "-?-?-") {immune = monNon;};
-$IF (immune == "fire") {$RETURN 0;};
]]>
      </script>
      <script name="ComputeSpellDamage">
        <![CDATA[$VAR spell; $VAR splNon; $VAR immune;
-spell = $SA_SPELL_GET("DamageMagical");
-splNon = $SA_SPELL_GET("DamageNonMagical");
-$IF ((spell == "-?-?-") && (splNon == "-?-?-")){$RETURN;};
-$IF (spell != "-?-?-") {immune = spell;};
-$IF (splNon != "-?-?-") {immune = splNon;};
-$IF (immune == "fire") {$RETURN 0;};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>elemental_ImmuneStone</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Immune to Earth and Stone");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="ComputeDamage">
        <![CDATA[$VAR item; $VAR itmNon; $VAR monster; $VAR monNon; $VAR immune;
-item = $SA_ITEM_GET("DamageMagical");
-itmNon = $SA_ITEM_GET("DamageNonMagical");
-monster = $SA_MONSTERTYPE_GET("DamageMagical");
-monNon = $SA_MONSTERTYPE_GET("DamageNonMagical");
-$IF (item == "-?-?-") && (itmNon == "-?-?-") && (monster == "-?-?-") && (monNon == "-?-?-")) {$RETURN;};
-$IF (item != "-?-?-") {immune = item;};
-$IF (itmNon != "-?-?-") {immune = itmNon;};
-$IF (monster != "-?-?-") {immune = monster;};
-$IF (monNon != "-?-?-") {immune = monNon;};
-$IF (immune == "stone") {$RETURN 0;};
]]>
      </script>
      <script name="ComputeSpellDamage">
        <![CDATA[$VAR spell; $VAR splNon; $VAR immune;
-spell = $SA_SPELL_GET("DamageMagical");
-splNon = $SA_SPELL_GET("DamageNonMagical");
-$IF ((spell == "-?-?-") && (splNon == "-?-?-")){$RETURN;};
-$IF (spell != "-?-?-") {immune = spell;};
-$IF (splNon != "-?-?-") {immune = splNon;};
-$IF (immune == "stone") {$RETURN 0;};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>elemental_ImmuneWater</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Immune to Water");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="ComputeDamage">
        <![CDATA[$VAR item; $VAR itmNon; $VAR monster; $VAR monNon; $VAR immune;
-item = $SA_ITEM_GET("DamageMagical");
-itmNon = $SA_ITEM_GET("DamageNonMagical");
-monster = $SA_MONSTERTYPE_GET("DamageMagical");
-monNon = $SA_MONSTERTYPE_GET("DamageNonMagical");
-$IF (item == "-?-?-") && (itmNon == "-?-?-") && (monster == "-?-?-") && (monNon == "-?-?-")) {$RETURN;};
-$IF (item != "-?-?-") {immune = item;};
-$IF (itmNon != "-?-?-") {immune = itmNon;};
-$IF (monster != "-?-?-") {immune = monster;};
-$IF (monNon != "-?-?-") {immune = monNon;};
-$IF (immune == "water") {$RETURN 0;};
]]>
      </script>
      <script name="ComputeSpellDamage">
        <![CDATA[$VAR spell; $VAR splNon; $VAR immune;
-spell = $SA_SPELL_GET("DamageMagical");
-splNon = $SA_SPELL_GET("DamageNonMagical");
-$IF ((spell == "-?-?-") && (splNon == "-?-?-")){$RETURN;};
-$IF (spell != "-?-?-") {immune = spell;};
-$IF (splNon != "-?-?-") {immune = splNon;};
-$IF (immune == "water") {$RETURN 0;};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>elemental_ResistantAcid</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Acid Resistant");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="ComputeDamage">
        <![CDATA[$VAR item; $VAR itmNon; $VAR monster; $VAR monNon; $VAR resist; $VAR par5;
-item = $SA_ITEM_GET("DamageMagical");
-itmNon = $SA_ITEM_GET("DamageNonMagical");
-monster = $SA_MONSTERTYPE_GET("DamageMagical");
-monNon = $SA_MONSTERTYPE_GET("DamageNonMagical");
-$IF ((item == "-?-?-") && (itmNon == "-?-?-") && (monster == "-?-?-") && (monNon == "-?-?-")) {$RETURN;};
-$IF (item != "-?-?-") {resist = item;};
-$IF (itmNon != "-?-?-") {resist = itmNon;};
-$IF (monster != "-?-?-") {resist = monster;};
-$IF (monNon != "-?-?-") {resist = monNon;};
-par5 = $GET_HOOK_PARAM(5);
-$IF (resist == "acid") {$RETURN par5 /# 2;};
]]>
      </script>
      <script name="ComputeSpellDamage">
        <![CDATA[$VAR spell; $VAR splNon; $VAR resist; $VAR par5;
-spell = $SA_SPELL_GET("DamageMagical");
-splNon = $SA_SPELL_GET("DamageNonMagical");
-$IF ((spell == "-?-?-") && (splNon == "-?-?-")){$RETURN;};
-$IF (spell != "-?-?-") {resist = spell;};
-$IF (splNon != "-?-?-") {resist = splNon;};
-par5 = $GET_HOOK_PARAM(5);
-$IF (resist == "acid") {$RETURN par5 /# 2;};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>elemental_ResistantCold</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Cold Resistant");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="ComputeDamage">
        <![CDATA[$VAR item; $VAR itmNon; $VAR monster; $VAR monNon; $VAR resist; $VAR par5;
-item = $SA_ITEM_GET("DamageMagical");
-itmNon = $SA_ITEM_GET("DamageNonMagical");
-monster = $SA_MONSTERTYPE_GET("DamageMagical");
-monNon = $SA_MONSTERTYPE_GET("DamageNonMagical");
-$IF ((item == "-?-?-") && (itmNon == "-?-?-") && (monster == "-?-?-") && (monNon == "-?-?-")) {$RETURN;};
-$IF (item != "-?-?-") {resist = item;};
-$IF (itmNon != "-?-?-") {resist = itmNon;};
-$IF (monster != "-?-?-") {resist = monster;};
-$IF (monNon != "-?-?-") {resist = monNon;};
-par5 = $GET_HOOK_PARAM(5);
-$IF (resist == "cold") {$RETURN par5 /# 2;};
]]>
      </script>
      <script name="ComputeSpellDamage">
        <![CDATA[$VAR spell; $VAR splNon; $VAR resist; $VAR par5;
-spell = $SA_SPELL_GET("DamageMagical");
-splNon = $SA_SPELL_GET("DamageNonMagical");
-$IF ((spell == "-?-?-") && (splNon == "-?-?-")){$RETURN;};
-$IF (spell != "-?-?-") {resist = spell;};
-$IF (splNon != "-?-?-") {resist = splNon;};
-par5 = $GET_HOOK_PARAM(5);
-$IF (resist == "cold") {$RETURN par5 /# 2;};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>elemental_ResistantElectricity</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Electricity Resistant");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="ComputeDamage">
        <![CDATA[$VAR item; $VAR itmNon; $VAR monster; $VAR monNon; $VAR resist; $VAR par5;
-item = $SA_ITEM_GET("DamageMagical");
-itmNon = $SA_ITEM_GET("DamageNonMagical");
-monster = $SA_MONSTERTYPE_GET("DamageMagical");
-monNon = $SA_MONSTERTYPE_GET("DamageNonMagical");
-$IF ((item == "-?-?-") && (itmNon == "-?-?-") && (monster == "-?-?-") && (monNon == "-?-?-")) {$RETURN;};
-$IF (item != "-?-?-") {resist = item;};
-$IF (itmNon != "-?-?-") {resist = itmNon;};
-$IF (monster != "-?-?-") {resist = monster;};
-$IF (monNon != "-?-?-") {resist = monNon;};
-par5 = $GET_HOOK_PARAM(5);
-$IF (resist == "electricity") {$RETURN par5 /# 2;};
]]>
      </script>
      <script name="ComputeSpellDamage">
        <![CDATA[$VAR spell; $VAR splNon; $VAR resist; $VAR par5;
-spell = $SA_SPELL_GET("DamageMagical");
-splNon = $SA_SPELL_GET("DamageNonMagical");
-$IF ((spell == "-?-?-") && (splNon == "-?-?-")){$RETURN;};
-$IF (spell != "-?-?-") {resist = spell;};
-$IF (splNon != "-?-?-") {resist = splNon;};
-par5 = $GET_HOOK_PARAM(5);
-$IF (resist == "electricity") {$RETURN par5 /# 2;};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>elemental_ResistantFire</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Fire Resistant");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="ComputeDamage">
        <![CDATA[$VAR item; $VAR itmNon; $VAR monster; $VAR monNon; $VAR resist; $VAR par5;
-item = $SA_ITEM_GET("DamageMagical");
-itmNon = $SA_ITEM_GET("DamageNonMagical");
-monster = $SA_MONSTERTYPE_GET("DamageMagical");
-monNon = $SA_MONSTERTYPE_GET("DamageNonMagical");
-$IF ((item == "-?-?-") && (itmNon == "-?-?-") && (monster == "-?-?-") && (monNon == "-?-?-")) {$RETURN;};
-$IF (item != "-?-?-") {resist = item;};
-$IF (itmNon != "-?-?-") {resist = itmNon;};
-$IF (monster != "-?-?-") {resist = monster;};
-$IF (monNon != "-?-?-") {resist = monNon;};
-par5 = $GET_HOOK_PARAM(5);
-$IF (resist == "fire") {$RETURN par5 /# 2;};
]]>
      </script>
      <script name="ComputeSpellDamage">
        <![CDATA[$VAR spell; $VAR splNon; $VAR resist; $VAR par5;
-spell = $SA_SPELL_GET("DamageMagical");
-splNon = $SA_SPELL_GET("DamageNonMagical");
-$IF ((spell == "-?-?-") && (splNon == "-?-?-")){$RETURN;};
-$IF (spell != "-?-?-") {resist = spell;};
-$IF (splNon != "-?-?-") {resist = splNon;};
-par5 = $GET_HOOK_PARAM(5);
-$IF (resist == "fire") {$RETURN par5 /# 2;};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>elemental_SlowingAcid</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Acid Causes Slowing");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="GetAdjMaxMovement">
        <![CDATA[$VAR item; $VAR itmNon; $VAR monster; $VAR monNon;
-$VAR spell; $VAR splNon; $VAR slow;
-item = $SA_ITEM_GET("DamageMagical");
-itemNon = $SA_ITEM_GET("DamageNonMagical");
-monster = $SA_MONSTERTYPE_GET("DamageMagical");
-monNon = $SA_MONSTERTYPE_GET("DamageNonMagical");
-spell = $SA_SPELL_GET("DamageMagical");
-spellNon = $SA_SPELL_GET("DamageNonMagical");
-$IF ((item == "-?-?-") && (itmNon == "-?-?-") && (monster == "-?-?-") && (monNon == "-?-?-") && (spell == "-?-?-") && (splNon == "-?-?-")) {$RETURN;};
-$IF (item != "-?-?-") {slow = item;};
-$IF (itmNon != "-?-?-") {slow = itmNon;};
-$IF (monster != "-?-?-") {slow = monster;};
-$IF (monNon != "-?-?-") {slow = monNon;};
-$IF (spell != "-?-?-") {slow = spell;};
-$IF (splNon != "-?-?-") {slow = splNon;};
-$IF (slow == "acid") {$RETURN $GET_HOOK_PARAM(5) /# 2;};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>elemental_SlowingCold</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Cold Causes Slowing");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="GetAdjMaxMovement">
        <![CDATA[$VAR item; $VAR itmNon; $VAR monster; $VAR monNon;
-$VAR spell; $VAR splNon; $VAR slow;
-item = $SA_ITEM_GET("DamageMagical");
-itemNon = $SA_ITEM_GET("DamageNonMagical");
-monster = $SA_MONSTERTYPE_GET("DamageMagical");
-monNon = $SA_MONSTERTYPE_GET("DamageNonMagical");
-spell = $SA_SPELL_GET("DamageMagical");
-spellNon = $SA_SPELL_GET("DamageNonMagical");
-$IF ((item == "-?-?-") && (itmNon == "-?-?-") && (monster == "-?-?-") && (monNon == "-?-?-") && (spell == "-?-?-") && (splNon == "-?-?-")) {$RETURN;};
-$IF (item != "-?-?-") {slow = item;};
-$IF (itmNon != "-?-?-") {slow = itmNon;};
-$IF (monster != "-?-?-") {slow = monster;};
-$IF (monNon != "-?-?-") {slow = monNon;};
-$IF (spell != "-?-?-") {slow = spell;};
-$IF (splNon != "-?-?-") {slow = splNon;};
-$IF (slow == "cold") {$RETURN $GET_HOOK_PARAM(5) /# 2;};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>elemental_SlowingElectricity</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Electricity Causes Slowing");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="GetAdjMaxMovement">
        <![CDATA[$VAR item; $VAR itmNon; $VAR monster; $VAR monNon;
-$VAR spell; $VAR splNon; $VAR slow;
-item = $SA_ITEM_GET("DamageMagical");
-itemNon = $SA_ITEM_GET("DamageNonMagical");
-monster = $SA_MONSTERTYPE_GET("DamageMagical");
-monNon = $SA_MONSTERTYPE_GET("DamageNonMagical");
-spell = $SA_SPELL_GET("DamageMagical");
-spellNon = $SA_SPELL_GET("DamageNonMagical");
-$IF ((item == "-?-?-") && (itmNon == "-?-?-") && (monster == "-?-?-") && (monNon == "-?-?-") && (spell == "-?-?-") && (splNon == "-?-?-")) {$RETURN;};
-$IF (item != "-?-?-") {slow = item;};
-$IF (itmNon != "-?-?-") {slow = itmNon;};
-$IF (monster != "-?-?-") {slow = monster;};
-$IF (monNon != "-?-?-") {slow = monNon;};
-$IF (spell != "-?-?-") {slow = spell;};
-$IF (splNon != "-?-?-") {slow = splNon;};
-$IF (slow == "electricity") {$RETURN $GET_HOOK_PARAM(5) /# 2;};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>elemental_SlowingFire</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Fire Causes Slowing");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="GetAdjMaxMovement">
        <![CDATA[$VAR item; $VAR itmNon; $VAR monster; $VAR monNon;
-$VAR spell; $VAR splNon; $VAR slow;
-item = $SA_ITEM_GET("DamageMagical");
-itemNon = $SA_ITEM_GET("DamageNonMagical");
-monster = $SA_MONSTERTYPE_GET("DamageMagical");
-monNon = $SA_MONSTERTYPE_GET("DamageNonMagical");
-spell = $SA_SPELL_GET("DamageMagical");
-spellNon = $SA_SPELL_GET("DamageNonMagical");
-$IF ((item == "-?-?-") && (itmNon == "-?-?-") && (monster == "-?-?-") && (monNon == "-?-?-") && (spell == "-?-?-") && (splNon == "-?-?-")) {$RETURN;};
-$IF (item != "-?-?-") {slow = item;};
-$IF (itmNon != "-?-?-") {slow = itmNon;};
-$IF (monster != "-?-?-") {slow = monster;};
-$IF (monNon != "-?-?-") {slow = monNon;};
-$IF (spell != "-?-?-") {slow = spell;};
-$IF (splNon != "-?-?-") {slow = splNon;};
-$IF (slow == "fire") {$RETURN $GET_HOOK_PARAM(5) /# 2;};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>elemental_VulnerableAcid</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Vulnerable to Acid");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="ComputeDamage">
        <![CDATA[$VAR item; $VAR itmNon; $VAR monster; $VAR monNon; $VAR vuln; $VAR par5;
-item = $SA_ITEM_GET("DamageMagical");
-itmNon = $SA_ITEM_GET("DamageNonMagical");
-monster = $SA_MONSTERTYPE_GET("DamageMagical");
-monNon = $SA_MONSTERTYPE_GET("DamageNonMagical");
-$IF ((item == "-?-?-") && (itmNon == "-?-?-") && (monster == "-?-?-") && (monNon == "-?-?-")) {$RETURN;};
-$IF (item != "-?-?-") {vuln = item;};
-$IF (itmNon != "-?-?-") {vuln = itmNon;};
-$IF (monster != "-?-?-") {vuln = monster;};
-$IF (monNon != "-?-?-") {vuln = monNon;};
-par5 = $GET_HOOK_PARAM(5);
-$IF (vuln == "acid") {$RETURN par5 *# 2;};
]]>
      </script>
      <script name="ComputeSpellDamage">
        <![CDATA[$VAR spell; $VAR splNon; $VAR vuln; $VAR par5;
-spell = $SA_SPELL_GET("DamageMagical");
-splNon = $SA_SPELL_GET("DamageNonMagical");
-$IF ((spell == "-?-?-") && (splNon == "-?-?-")){$RETURN;};
-$IF (spell != "-?-?-") {vuln = spell;};
-$IF (splNon != "-?-?-") {vuln = splNon;};
-par5 = $GET_HOOK_PARAM(5);
-$IF (vuln == "acid") {$RETURN par5 *# 2;};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>elemental_VulnerableCold</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Vulnerable to Cold");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="ComputeDamage">
        <![CDATA[$VAR item; $VAR itmNon; $VAR monster; $VAR monNon; $VAR vuln; $VAR par5;
-item = $SA_ITEM_GET("DamageMagical");
-itmNon = $SA_ITEM_GET("DamageNonMagical");
-monster = $SA_MONSTERTYPE_GET("DamageMagical");
-monNon = $SA_MONSTERTYPE_GET("DamageNonMagical");
-$IF ((item == "-?-?-") && (itmNon == "-?-?-") && (monster == "-?-?-") && (monNon == "-?-?-")) {$RETURN;};
-$IF (item != "-?-?-") {vuln = item;};
-$IF (itmNon != "-?-?-") {vuln = itmNon;};
-$IF (monster != "-?-?-") {vuln = monster;};
-$IF (monNon != "-?-?-") {vuln = monNon;};
-par5 = $GET_HOOK_PARAM(5);
-$IF (vuln == "cold") {$RETURN par5 *# 2;};
]]>
      </script>
      <script name="ComputeSpellDamage">
        <![CDATA[$VAR spell; $VAR splNon; $VAR vuln; $VAR par5;
-spell = $SA_SPELL_GET("DamageMagical");
-splNon = $SA_SPELL_GET("DamageNonMagical");
-$IF ((spell == "-?-?-") && (splNon == "-?-?-")){$RETURN;};
-$IF (spell != "-?-?-") {vuln = spell;};
-$IF (splNon != "-?-?-") {vuln = splNon;};
-par5 = $GET_HOOK_PARAM(5);
-$IF (vuln == "cold") {$RETURN par5 *# 2;};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>elemental_VulnerableElectricity</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Vulnerable to Electricity");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="ComputeDamage">
        <![CDATA[$VAR item; $VAR itmNon; $VAR monster; $VAR monNon; $VAR vuln; $VAR par5;
-item = $SA_ITEM_GET("DamageMagical");
-itmNon = $SA_ITEM_GET("DamageNonMagical");
-monster = $SA_MONSTERTYPE_GET("DamageMagical");
-monNon = $SA_MONSTERTYPE_GET("DamageNonMagical");
-$IF ((item == "-?-?-") && (itmNon == "-?-?-") && (monster == "-?-?-") && (monNon == "-?-?-")) {$RETURN;};
-$IF (item != "-?-?-") {vuln = item;};
-$IF (itmNon != "-?-?-") {vuln = itmNon;};
-$IF (monster != "-?-?-") {vuln = monster;};
-$IF (monNon != "-?-?-") {vuln = monNon;};
-par5 = $GET_HOOK_PARAM(5);
-$IF (vuln == "electricity") {$RETURN par5 *# 2;};
]]>
      </script>
      <script name="ComputeSpellDamage">
        <![CDATA[$VAR spell; $VAR splNon; $VAR vuln; $VAR par5;
-spell = $SA_SPELL_GET("DamageMagical");
-splNon = $SA_SPELL_GET("DamageNonMagical");
-$IF ((spell == "-?-?-") && (splNon == "-?-?-")){$RETURN;};
-$IF (spell != "-?-?-") {vuln = spell;};
-$IF (splNon != "-?-?-") {vuln = splNon;};
-par5 = $GET_HOOK_PARAM(5);
-$IF (vuln == "electricity") {$RETURN par5 *# 2;};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>elemental_VulnerableFire</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Vulnerable to Fire");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="ComputeDamage">
        <![CDATA[$VAR item; $VAR itmNon; $VAR monster; $VAR monNon; $VAR vuln; $VAR par5;
-item = $SA_ITEM_GET("DamageMagical");
-itmNon = $SA_ITEM_GET("DamageNonMagical");
-monster = $SA_MONSTERTYPE_GET("DamageMagical");
-monNon = $SA_MONSTERTYPE_GET("DamageNonMagical");
-$IF ((item == "-?-?-") && (itmNon == "-?-?-") && (monster == "-?-?-") && (monNon == "-?-?-")) {$RETURN;};
-$IF (item != "-?-?-") {vuln = item;};
-$IF (itmNon != "-?-?-") {vuln = itmNon;};
-$IF (monster != "-?-?-") {vuln = monster;};
-$IF (monNon != "-?-?-") {vuln = monNon;};
-par5 = $GET_HOOK_PARAM(5);
-$IF (vuln == "fire") {$RETURN par5 *# 2;};
]]>
      </script>
      <script name="ComputeSpellDamage">
        <![CDATA[$VAR spell; $VAR splNon; $VAR vuln; $VAR par5;
-spell = $SA_SPELL_GET("DamageMagical");
-splNon = $SA_SPELL_GET("DamageNonMagical");
-$IF ((spell == "-?-?-") && (splNon == "-?-?-")){$RETURN;};
-$IF (spell != "-?-?-") {vuln = spell;};
-$IF (splNon != "-?-?-") {vuln = splNon;};
-par5 = $GET_HOOK_PARAM(5);
-$IF (vuln == "fire") {$RETURN par5 *# 2;};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>Global_Combat</name>
    <asl>
      <script name="PartyArrangement">
        <![CDATA[$IF ($GET_HOOK_PARAM(5) == "I")
-  {
-    $RETURN "ABABBBbBABBBABBBBCCCbBABBBBCCCbBABBBACCCBCbBABBBCBACCCBCbBABBBCBACDCBCCCcBbBABBBCBACDCBCCCcBbBABBBCBbCACDCBCCCcBbBABBBCBDBbCACDCBCCCcBbBABBBCBDBbCACDCBCECCCbAbAABcbbAABbAABcAbBcbbAABcAbBcbbAABdbbBcAcbbAABBCdbbBcAcbbAABBCdbACcAbBdccbbAABBCdbACcAbBdccbbAABBCecACdbcAbBdccbbAABBCCDecACdbcAbBdccbbAABBCCDecBDdbcAbBACAAAAbABAAAbAAAbAbbcbBAAAbAbbcbBAAAbAAbcbbbCABAAAbAAbcbbbCABAAAbABbcbAbbbCABAAAbAcABbcbAbbbCABAAAbAcABbdbcbAbbbDACABAAAbAcABbdbcbAbbbDACABAAAbAcACbdbBbcbAbbbBBBBAACCBBAABBAACBBACCBBAACBBACCBBAADCBACBCCBBAAbbDCBACBCCBBAAbbDCAbCBBACCBBAAbbccDCAbCBBACCBBAAbbccDCbcAbCBBADDCCBBAAbbccDCbcAbCBBADDCCBBAAbbccEDbcAbDCCBBA";
-  }
-$ELSE
-  {
-    $RETURN "ABABBBbBABBBbBABBBCBcBbBABBBCBcBbbABBBCBDBdBcBbBABBBCBDBeBdBcBbBABBBCBDBeBdBcBbBABBBCBDBEBfBeBdBcBbBABBBCBDBEBfBeBdBcBbBABBBCBDBEBFBgBfBeBdBcBbBABBBCBDBEBFBbAbAABcbbAABcbbAABBCdccbbAABBCdccbbAABBCCDeddccbbAABBCCDeddccbbAABBCCDDEfeeddccbbAABBCCDDEfeeddccbbAABBCCDDEEFgffeeddccbbAABBCCDDEEFgffeeddccbbAABBCCDDEEFFGAAAAbABAAAbACABAAAbACABAAAbAbADACABAAAbAcADACABAAAbAcAdAEADACABAAAbAcAdAEADACABAAAbAcAdAeAFAEADACABAAAbAcAdAeAFAEADACABAAAbAcAdAeAfAGAFAEADACABAAAbAcAdAeAfABBBBAACCBBAACCBBAAbbDDCCBBAAbbDDCCBBAAbbccEEDDCCBBAAbbccEEDDCCBBAAbbccddFFEEDDCCBBAAbbccddFFEEDDCCBBAAbbccddeeGGFFEEDDCCBBAAbbccddeeGGFFEEDDCCBBAAbbccddeeff";
-  };
]]>
      </script>
      <script name="PartyOriginEast">
        <![CDATA[$SET_HOOK_PARAM(5,"-1");
]]>
      </script>
      <script name="PartyOriginNorth">
        <![CDATA[$SET_HOOK_PARAM(5,"-1");
]]>
      </script>
      <script name="PartyOriginSouth">
        <![CDATA[$SET_HOOK_PARAM(5,"-1");
]]>
      </script>
      <script name="PartyOriginWest">
        <![CDATA[$SET_HOOK_PARAM(5,"-1");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>Global_CreateCharacter</name>
    <asl>
      <script name="PostCreateCharacter">
        <![CDATA[$VAR char;
-char = $IndexOf($CharacterContext());
-$SET_CHARACTER_SA($CharacterContext(), "pcSTR", $GET_CHAR_PERM_STR(char));
-$SET_CHARACTER_SA($CharacterContext(), "pcSTRMOD", $GET_CHAR_PERM_STRMOD(char));
-$SET_CHARACTER_SA($CharacterContext(), "pcINT", $GET_CHAR_PERM_INT(char));
-$SET_CHARACTER_SA($CharacterContext(), "pcWIS", $GET_CHAR_PERM_WIS(char));
-$SET_CHARACTER_SA($CharacterContext(), "pcDEX", $GET_CHAR_PERM_DEX(char));
-$SET_CHARACTER_SA($CharacterContext(), "pcCON", $GET_CHAR_PERM_CON(char));
-$SET_CHARACTER_SA($CharacterContext(), "pcCHA", $GET_CHAR_PERM_CHA(char));
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>Global_CreateMonsterCombatant</name>
    <asl>
      <script name="CreateMonsterCombatant">
        <![CDATA[$VAR tbl;
-$VAR levelTbl;
-$VAR i;
-$VAR monster;
-$VAR level;
-$VAR monRace;
-tbl = "/$17$3$4$5$4$6/$15$4$5$6$4$7/$13$5$6$7$5$8/$11$7$8$9$8$10/$9$8$9$10$9$11/$7$10$11$12$12$13/$5$11$12$13$13$14/$3$13$14$15$16$16/$1$14$15$16$17$17/$0$16$17$18$20$19";
-monster = $IndexOf($CharacterContext());
-level = $SA_MONSTERTYPE_GET("monsterLevel");
-$SET_CHARACTER_SA($CharacterContext(), "class_baseName", $SA_MONSTERTYPE_GET("class_baseName"));
-$SET_CHAR_Lvl(monster,$GetHighestLevelBaseclass(monster),level);
-i = 0;
-$WHILE (1)
-	{
-		levelTbl = $DelimitedStringSubstring(tbl, i);
-		$IF (levelTbl == "") {$RETURN;}; // Protects us from bad Special Saves
-		$IF (level >=# $DelimitedStringSubstring(levelTbl, 0))
-			{
-				$SkillAdj($CharacterContext(), "Save Vs BR", "", "=", $DelimitedStringSubstring(levelTbl, 1));
-				$SkillAdj($CharacterContext(), "Save Vs PP", "", "=", $DelimitedStringSubstring(levelTbl, 2));
-				$SkillAdj($CharacterContext(), "Save Vs PPDM", "", "=", $DelimitedStringSubstring(levelTbl, 4));
-				$SkillAdj($CharacterContext(), "Save Vs RSW", "", "=", $DelimitedStringSubstring(levelTbl, 3));
-				$SkillAdj($CharacterContext(), "Save Vs SP", "", "=", $DelimitedStringSubstring(levelTbl, 5));
-				$RETURN;
-			};
-		i = i +# 1;
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>Global_Display</name>
    <asl>
      <script name="FacingText">
        <![CDATA[$SET_HOOK_PARAM(5,650);
-$SET_HOOK_PARAM(6,490);
-$RETURN;
]]>
      </script>
      <script name="LocationText">
        <![CDATA[$SET_HOOK_PARAM(5,440);
-$SET_HOOK_PARAM(6,275);
-$SET_HOOK_PARAM(8,"Yellow");
-$RETURN;
]]>
      </script>
      <script name="SearchingText">
        <![CDATA[$VAR look;
-look = $GET_HOOK_PARAM(1);
-$SET_HOOK_PARAM(5,360);
-$SET_HOOK_PARAM(6,275);
-$IF (look !=# "0"){$SET_HOOK_PARAM( 7,"Scanning");};
-$SET_HOOK_PARAM( 8, "Yellow" );
-$RETURN;
]]>
      </script>
      <script name="TimeText">
        <![CDATA[$VAR p1; $VAR p2; $VAR p3; $VAR day; $VAR dayList; $VAR dow;
-$SET_HOOK_PARAM(5,480);
-$SET_HOOK_PARAM(6,275);
-p1 = $GET_HOOK_PARAM(1);
-p2 = $GET_HOOK_PARAM(2);
-p3 = $GET_HOOK_PARAM(3);
-dow = p1 %# 7;
-dayList = "$Sunday$Monday$Tuesday$Wednesday$Thursday$Friday$Saturday";
-day = $DelimitedStringSubstring(dayList, dow);
-$SET_HOOK_PARAM(8,"Yellow");
-$IF (p2 <# 13)
-	{
-		$IF (p2 ==# 0)
-			{
-				$IF (p3 <# 10)
-					{$SET_HOOK_PARAM(7,"12" + ":" + "0" + p3 + " am" + "  " + day);}
-				$ELSE
-					{$SET_HOOK_PARAM(7,"12" + ":" + p3 + " am" + "  " + day);};
-				$RETURN;
-			};
-		$IF (p2 <# 10)
-			{
-				$IF (p3 <# 10)
-					{$SET_HOOK_PARAM(7," " + p2 + ":" + "0" + p3 + " am" + "  " + day);}
-				$ELSE
-					{$SET_HOOK_PARAM(7," " + p2 + ":" + p3 + " am" + "  " + day);};
-				$RETURN;
-			};
-		$IF (p2 <# 12)
-			{
-				$IF (p3 <# 10)
-					{$SET_HOOK_PARAM(7,p2 + ":" + "0" + p3 + " am" + "  " + day);}
-				$ELSE
-					{$SET_HOOK_PARAM(7,p2 + ":" + p3 + " am" + "  " + day);};
-				$RETURN;
-			}
-		$ELSE
-			{
-				$IF (p3 <# 10)
-					{$SET_HOOK_PARAM(7,p2 + ":" + "0" + p3 + " pm" + "  " + day);}
-				$ELSE
-					{$SET_HOOK_PARAM(7,p2 + ":" + p3 + " pm" + "  " + day);};
-				$RETURN;
-			};
-	}
-$ELSE
-	{
-		$IF (p2 <# 22)
-			{
-				$IF (p3 <# 10)
-					{$SET_HOOK_PARAM(7," " + p2 %# 12 + ":" + "0" + p3 + " pm" + "  " + day);}
-				$ELSE
-					{$SET_HOOK_PARAM(7," " + p2 %# 12 + ":" + p3 + " pm" + "  " + day);};
-				$RETURN;
-			}
-		$ELSE
-			{
-				$IF (p3 <# 10)
-					{$SET_HOOK_PARAM(7,p2 %# 12 + ":" + "0" + p3 + " pm" + "  " + day);}
-				$ELSE
-					{$SET_HOOK_PARAM(7,p2 %# 12 + ":" + p3 + " pm" + "  " + day);};
-				$RETURN;
-			};
-	};
]]>
      </script>
      <script name="CharacterViewScreen">
        <![CDATA[$VAR char; // character
-$VAR name;
-$VAR age; $VAR sex;
-$VAR align; $VAR alignList; $VAR alignName;
-$VAR class;
-$VAR cbnList; // class_baseName parameter
-$VAR cbnCount; // number of baseclasses
-$VAR cbn; // first baseclass
-$VAR cbn2; // second baseclass
-$VAR cbn3; // third baseclass
-$VAR hbl; // highest baseclass level
-$VAR hbn; // highest baseclass name
-$VAR lvl; $VAR lvl2; $VAR lvl3;
-$VAR xp; $VAR xp2; $VAR xp3;
-$VAR status;
-$VAR hp; $VAR maxHp;
-$VAR race;
-$VAR ac; $VAR acEff; $VAR acAdj;
-$VAR thac0; $VAR thac0Adj;
-$VAR str; $VAR strMod; $VAR int; $VAR wis; $VAR dex; $VAR con; $VAR cha;
-$VAR dmgList; // weapon
-$VAR dmg1; $VAR dmg2; $VAR dmg3;
-$VAR dmgPlus; // weapon plus if applicable
-$VAR dmgBns; // damage bonus
-$VAR enc;	// encumbrance
-$VAR mvmt;
-$VAR weight; $VAR height;
-$VAR wpn; $VAR shield; $VAR armor;
-$VAR sWidth; // screen width
-$VAR psnd; // Poisoned
-$VAR skilled;
-$VAR mpc; $VAR mp;
-char = $IndexOf($CharacterContext());
-name = $GET_CHAR_NAME(char);
-age = $GET_CHAR_AGE(char); sex = $GET_CHAR_SEX(char);
-align = $GET_CHAR_ALIGNMENT(char);
-alignList = "$LAWFUL GOOD$NEUTRAL GOOD$CHAOTIC GOOD$LAWFUL NEUTRAL$TRUE NEUTRAL$CHAOTIC NEUTRAL$LAWFUL EVIL$NEUTRAL EVIL$CHAOTIC EVIL";
-alignName = $DelimitedStringSubstring(alignList,align);		
-class = $GET_CHAR_CLASS(char);
-cbnList = $DAT_Class_Baseclasses(class);
-cbnCount = $DelimitedStringCount(cbnList);
-cbn = $DelimitedStringSubstring(cbnList,0);
-cbn2 = $DelimitedStringSubstring(cbnList,1);
-cbn3 = $DelimitedStringSubstring(cbnList,2);
-hbn = $GetHighestLevelBaseclass(char);
-hbl = $GetBaseclassLevel(char,hbn);
-xp = $GET_CHAR_Exp(char,cbn); xp2 = $GET_CHAR_Exp(char,cbn2); xp3 = $GET_CHAR_Exp(char,cbn3);
-lvl = $GetBaseclassLevel(char,cbn); lvl2 = $GetBaseclassLevel(char,cbn2); lvl3 = $GetBaseclassLevel(char,cbn3);
-status = $GET_CHAR_STATUS(char);
-hp = $GET_CHAR_HITPOINTS(char); maxHp = $GET_CHAR_MAXHITPOINTS(char);
-race = $GET_CHAR_RACE(char);
-ac = $GET_CHAR_AC(char); acEff = $GET_CHAR_EFFAC(char); acAdj = $GET_CHAR_ADJAC (char);
-thac0 = $GET_CHAR_THAC0(char);
-thac0Adj = $GET_CHAR_ADJTHAC0(char);
-str = $GET_CHAR_LIMITED_STR(char); strMod = $GET_CHAR_LIMITED_STRMOD(char);
-int = $GET_CHAR_LIMITED_INT(char); wis = $GET_CHAR_LIMITED_WIS(char);
-dex = $GET_CHAR_LIMITED_DEX(char); con = $GET_CHAR_LIMITED_CON(char);
-cha = $GET_CHAR_LIMITED_CHA(char);
-wpn = $GET_CHAR_Ready($CharacterContext(),"WEAPON",0);
-shield = $GET_CHAR_Ready($CharacterContext(),"SHIELD",0);
-armor = $GET_CHAR_Ready($CharacterContext(),"ARMOR",0);
-sWidth = $GET_CONFIG("Screen_Width");
-psnd = $GET_CHARACTER_SA($CharacterContext(),"IsPoisoned");
-dmgList = $DAT_Item_DamageSmall(wpn);
-dmg1 = $DelimitedStringSubstring(dmgList,0);
-dmg2 = $DelimitedStringSubstring(dmgList,1);
-dmg3 = $DelimitedStringSubstring(dmgList,2);
-dmgPlus = $DAT_Item_AttackBonus(wpn);
-dmgBns = $GET_CHAR_DAMAGEBONUS(char);
-enc = $GET_CHAR_ENC(char);
-mvmt = $GET_CHAR_MAXMOVE(char);
-weight = $GET_CHAR_ASL(char,"charWeight");
-height = $GET_CHAR_ASL(char,"charHeight");
-$IF (weight == "")
-	{
-		$SET_CHAR_ASL(char,"charWeight",$DAT_Race_Weight($CharacterContext()));
-		weight = $GET_CHAR_ASL(char,"charWeight");
-	};
-$IF (height == "")
-	{
-		$SET_CHAR_ASL(char,"charHeight",$DAT_Race_Height($CharacterContext()));
-		height = $GET_CHAR_ASL(char,"charHeight");
-	};
-mpc = $GET_CHARACTER_SA($CharacterContext(),"charManaPointsCurrent");
-mp = $GET_CHARACTER_SA($CharacterContext(),"charManaPoints");
-//mp = $GET_CLASS_SA($ClassContext(),"charManaPoints");
-
-$GrSet("LeftCol",18, 18);
-$GrSet("RightCol", 220, 18);
-$GrSet("Skills", 417, 270);
-$GrSet("Ability", 50, 0);
-$GrSet("StatusTab", 105, 0);
-$GrSet("SkillsTab", 125, 0);
-$GrSet("EncumbTab",125, 0);
-$GrSet("TextHeight", 0, 18);
-$GrSet("ManaPool",425,270);
-$GrSetLinefeed("TextHeight");
-
-$IF ($GET_CHAR_TYPE(char) != "@PC@" && $GET_CHAR_TYPE(char) != "@NPC@")
-	{
-		$GrMoveTo("LeftCol");
-		$GrFormat("SL");
-		$GrColor("YELLOW");
-		$GrPrtLF($UpCase(name));
-		$GrMark("Level");
-		$GrMoveTo("RightCol");
-		$GrColor("WHITE");
-		$GrPrint("STATUS");
-		$IF (status >=# 9) {$GrColor("RED"); $GrTab("StatusTab"); $GrPrtLF("DYING");};
-		$IF (status ==# 8) {$GrColor("RED"); $GrTab("StatusTab"); $GrPrtLF("RUNNING");};
-		$IF (status ==# 7) {$GrColor("RED"); $GrTab("StatusTab"); $GrPrtLF("TEMPGONE");};
-		$IF (status ==# 6) {$GrColor("RED"); $GrTab("StatusTab"); $GrPrtLF("ANIMATED");};
-		$IF (status ==# 5) {$GrColor("RED"); $GrTab("StatusTab"); $GrPrtLF("GONE");};
-		$IF (status ==# 4) {$GrColor("RED"); $GrTab("StatusTab"); $GrPrtLF("PETRIFIED");};
-		$IF (status ==# 3) {$GrColor("RED"); $GrTab("StatusTab"); $GrPrtLF("FLED");};
-		$IF (status ==# 2) {$GrColor("RED"); $GrTab("StatusTab"); $GrPrtLF("DEAD");};
-		$IF (status ==# 1) {$GrColor("ORANGE"); $GrTab("StatusTab"); $GrPrtLF("UNCONSCIOUS");};
-		$IF (status ==# 0) {$GrColor("GREEN"); $GrTab("StatusTab"); $GrPrtLF("OKAY");};
-		$GrColor("WHITE");
-		$GrPrint("HIT POINTS");
-		$IF (hp <=# 0) {$GrColor("RED"); $GrTab("StatusTab"); $GrPrint(hp);};
-		$IF ((hp >=# 1) && (hp <# maxHp)) {$GrColor("ORANGE"); $GrTab("StatusTab"); $GrPrint(hp);};
-		$IF (hp ==# maxHp) {$GrColor("GREEN"); $GrTab("StatusTab"); $GrPrint(hp);};
-		$GrColor("GREEN");
-		$GrPrtLF("/" + maxHp);
-		$GrColor("WHITE");
-		$GrPrtLF($UpCase(race));
-		$GrMoveTo("Level");
-		$GrMove("TextHeight"); 
-		$GrMove("TextHeight"); 
-		$GrMove("TextHeight"); 
-		$GrMove("TextHeight"); 
-		$GrColor("WHITE");
-		$GrMark("Strength");
-		$GrPrtLF(" ");
-		$GrPrtLF("INT");
-		$GrPrtLF(" ");
-		$GrPrtLF(" ");
-		$GrPrtLF(" ");
-		$GrPrtLF(" ");
-		$GrMark("Armor");
-		$GrMoveTo("Strength");
-		$GrMove("Ability");
-		$GrColor("GREEN");
-		$GrPrtLF(" ");
-		$GrPrtLF(int);
-		$GrPrtLF(" ");
-		$GrPrtLF(" ");
-		$GrPrtLF(" ");
-		$GrPrtLF(" ");
-		$GrMoveTo("Armor");
-		$GrMove("TextHeight"); 
-		$GrColor("WHITE");
-		$GrPrint("ARMOR CLASS");
-		$IF (ac !=# acEff) {$GrColor("ORANGE"); $GrTab("StatusTab"); $GrPrtLF(acEff);};
-		$IF (ac ==# acEff) {$GrColor("GREEN"); $GrTab("StatusTab"); $GrPrtLF(ac);};
-		$GrColor("WHITE");
-		$GrPrint("THAC0");
-		$IF (thac0 !=# thac0Adj) {$GrColor("ORANGE"); $GrTab("StatusTab"); $GrPrtLF(thac0Adj);};
-		$IF (thac0 ==# thac0Adj) {$GrColor("GREEN"); $GrTab("StatusTab"); $GrPrtLF(thac0);};
-		$RETURN;
-	};
-
-$GrMoveTo("LeftCol");
-$GrFormat("SL");
-$GrColor("YELLOW");
-$GrPrtLF($UpCase(name));
-$GrColor("WHITE");
-$GrPrint($UpCase(sex));
-$GrTab("StatusTab");
-$GrColor("GREEN");
-$GrPrint(age);
-$GrColor("WHITE");
-$GrPrtLF(" YEARS");
-$GrPrtLF(alignName);
-$GrPrtLF($UpCase(class));
-$IF (cbnCount ==# 3)
-	{
-		$GrPrint("LEVEL/XP " + lvl + "/" + xp);
-		$GrPrint(" " + lvl2 + "/" + xp2);
-		$GrPrtLF(" " + lvl3 + "/" + xp3);
-	};
-$IF (cbnCount ==# 2 && cbnList != "-?-?-")
-	{
-		$GrPrint("LEVEL/XP " + lvl + "/" + xp);
-		$GrPrtLF(" " + lvl2 + "/" + xp2);
-	};
-$IF (cbnCount ==# 1)
-	{
-		$GrPrtLF("LEVEL/XP " + lvl + "/" + xp);
-	};
-$GrMark("Level");
-
-$GrMoveTo("RightCol");
-$GrColor("WHITE");
-$GrPrint("STATUS");
-$IF (status >=# 9) {$GrColor("RED"); $GrTab("StatusTab"); $GrPrtLF("DYING");};
-$IF (status ==# 8) {$GrColor("RED"); $GrTab("StatusTab"); $GrPrtLF("RUNNING");};
-$IF (status ==# 7) {$GrColor("RED"); $GrTab("StatusTab"); $GrPrtLF("TEMPGONE");};
-$IF (status ==# 6) {$GrColor("RED"); $GrTab("StatusTab"); $GrPrtLF("ANIMATED");};
-$IF (status ==# 5) {$GrColor("RED"); $GrTab("StatusTab"); $GrPrtLF("GONE");};
-$IF (status ==# 4) {$GrColor("RED"); $GrTab("StatusTab"); $GrPrtLF("PETRIFIED");};
-$IF (status ==# 3) {$GrColor("RED"); $GrTab("StatusTab"); $GrPrtLF("FLED");};
-$IF (status ==# 2) {$GrColor("RED"); $GrTab("StatusTab"); $GrPrtLF("DEAD");};
-$IF (status ==# 1) {$GrColor("ORANGE"); $GrTab("StatusTab"); $GrPrtLF("UNCONSCIOUS");};
-$IF (status ==# 0) {$GrColor("GREEN"); $GrTab("StatusTab"); $GrPrtLF("OKAY");};
-$GrColor("WHITE");
-$GrPrint("HIT POINTS");
-$IF (hp <=# 0) {$GrColor("RED"); $GrTab("StatusTab"); $GrPrint(hp);};
-$IF ((hp >=# 1) && (hp <# maxHp)) {$GrColor("ORANGE"); $GrTab("StatusTab"); $GrPrint(hp);};
-$IF (hp ==# maxHp) {$GrColor("GREEN"); $GrTab("StatusTab"); $GrPrint(hp);};
-$GrColor("GREEN");
-$GrPrtLF("/" + maxHp);
-$GrColor("WHITE");
-$GrPrtLF($UpCase(race));
-$GrColor("GREEN");
-$GrPrint(weight);
-$GrColor("WHITE");
-$GrPrint(" LBS");
-$GrColor("GREEN");
-$GrTab("StatusTab");
-$GrPrint(height /# 12);
-$GrColor("WHITE");
-$GrPrint("'");
-$GrColor("GREEN");
-$GrPrint(height %# 12);
-$GrColor("WHITE");
-$GrPrtLF("\"");
-$GrMoveTo("Level");
-$GrMove("TextHeight"); 
-$GrColor("WHITE");
-$GrMark("Strength");
-$GrPrtLF("STR");
-$GrPrtLF("INT");
-$GrPrtLF("WIS");
-$GrPrtLF("DEX");
-$GrPrtLF("CON");
-$GrPrtLF("CHA");
-$GrMark("Armor");
-$GrMoveTo("Strength");
-$GrMove("Ability");
-$GrColor("GREEN");
-$IF (strMod >=# 1){$GrPrtLF(str + "(" + strMod + ")");}
-$ELSE{$GrPrtLF(str);};
-$GrPrtLF(int);
-$GrPrtLF(wis);
-$GrPrtLF(dex);
-$GrPrtLF(con);
-$GrPrtLF(cha);
-
-$GrMoveTo("Armor");
-$GrMove("TextHeight"); 
-$GrColor("WHITE");
-$GrPrint("ARMOR CLASS");
-$IF (ac !=# acEff) {$GrColor("ORANGE"); $GrTab("StatusTab"); $GrPrtLF(acEff);}
-$ELSE {$GrColor("GREEN"); $GrTab("StatusTab"); $GrPrtLF(ac);};
-$GrColor("WHITE");
-$GrPrint("THAC0");
-$IF (thac0 !=# thac0Adj) {$GrColor("ORANGE"); $GrTab("StatusTab"); $GrPrtLF(thac0Adj);}
-$ELSE {$GrColor("GREEN"); $GrTab("StatusTab"); $GrPrtLF(thac0);};
-$GrColor("WHITE");
-$GrPrint("DAMAGE");
-$GrColor("GREEN");
-$GrTab("StatusTab");
-$IF (wpn == ""){$GrPrtLF("1D2+" + dmgBns);};
-$IF (wpn != "") {$GrPrtLF(dmg1 + "d" + dmg2 + "+" + (dmgBns +# dmgPlus +# dmg3));};
-$GrColor("WHITE");
-$GrMove("TextHeight"); 
-
-$IF ((wpn == "") && (shield == "") && (armor == "")){$GrPrtLF("NONE");};
-$IF (wpn != ""){$GrPrtLF($UpCase($DAT_Item_IDName(wpn)));};
-$IF (shield != ""){$GrPrtLF($UpCase($DAT_Item_IDName(shield)));};
-$IF (armor != ""){$GrPrtLF($UpCase($DAT_Item_IDName(armor)));};
-$GrSet("Encumbrance", "RightCol", "Armor");
-$GrMoveTo("Encumbrance");
-$GrMove("TextHeight");
-$GrColor("WHITE");
-$GrPrint("ENCUMBRANCE");
-$GrColor("GREEN");
-$GrTab("EncumbTab");
-$GrPrtLF(enc);
-$GrColor("WHITE");
-$GrPrint("MOVEMENT");
-$GrColor("GREEN");
-$GrTab("EncumbTab");
-$GrPrtLF(mvmt);
-
-skilled = $GET_CHARACTER_SA($CharacterContext(),"class_ThievingSkills");
-$IF (skilled != "-?-?-")
-	{
-		$GrMoveTo("Skills");
-		$GrColor("WHITE");
-		$GrPrtLF("SKILLS");
-		$GrMark("Pick");
-		$GrPrtLF("Pick Pockets");
-		$GrPrtLF("Open Locks");
-		$GrPrtLF("Find Traps");
-		$GrPrtLF("Move Silently");
-		$GrPrtLF("Hide in Shadows");
-		$GrPrtLF("Hear Noise");
-		$GrPrtLF("Climb Walls");
-		$GrPrtLF("Read Languages");
-		$GrMoveTo("Pick");
-		$GrMove("SkillsTab");
-		$GrColor("GREEN");
-		$GrPrtLF($SkillAdj($CharacterContext(),"PickPockets","","F",""));
-		$GrPrtLF($SkillAdj($CharacterContext(),"OpenLocks","","F",""));
-		$GrPrtLF($SkillAdj($CharacterContext(),"FindTraps","","F",""));
-		$GrPrtLF($SkillAdj($CharacterContext(),"MoveSilent","","F",""));
-		$GrPrtLF($SkillAdj($CharacterContext(),"HideInShadows","","F",""));
-		$GrPrtLF($SkillAdj($CharacterContext(),"HearNoise","","F",""));
-		$GrPrtLF($SkillAdj($CharacterContext(),"ClimbWalls","","F",""));
-		$GrPrtLF($SkillAdj($CharacterContext(),"ReadLanguages","","F",""));
-	};
-
-//$GrMoveTo("ManaPool");
-//$GrColor("GREEN");$GrPrint("Mana Pool ");$GrColor("YELLOW");$GrPrint(mpc);$GrColor("GREEN");$GrPrint(" / ");$GrColor("YELLOW");$GrPrtLF(mp);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>Global_Transfer</name>
    <asl>
      <script name="EachPartyMember">
        <![CDATA[$ForEachPossession($CharacterContext(), "item_DrowEquipment");
-$RETURN "1";
]]>
      </script>
      <script name="TransferModule">
        <![CDATA[$ForEachPartyMember("Global_Transfer", "EachPartyMember");
-$IF ($GET_HOOK_PARAM(5) ==# "1"){$SET_HOOK_PARAM(6,"Your drow equipment dissolves.");};
-$RETURN;
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsAfraid</name>
    <asl>
      <script name="AutoAction">
        <![CDATA[$IF ($SA_COMBATANT_GET("monster_ImmuneFear") != "-?-?-") {$RETURN;}
-$ELSE{$RETURN "F" + $SA_PARAM_GET();};
]]>
      </script>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7,"Afraid");
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsBarkskinned</name>
    <asl>
      <script name="CharDisplayStatus">
        $IF ($GET_PARTY_TIME() ><![CDATA[# $SA_PARAM_GET())
-  {$RETURN $SA_REMOVE();};
-$SET_HOOK_PARAM( 7, "Barkskin");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
]]>
      </script>
      <script name="DoesAttackSucceed">
        <![CDATA[$IF ($GET_COMBATANT_SA($TargetContext(),"IsBarkskinned") != "-?-?-")
-  {$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) +# 1);};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)){$RETURN "Y";}
-$ELSE {$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsBestowedCurse</name>
    <asl>
      <script name="CharDisplayStatus">
        $IF ($GET_PARTY_TIME() ><![CDATA[# $SA_PARAM_GET()){$SA_REMOVE();};
-$SET_HOOK_PARAM( 7, "Curse Bestowed");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$VAR tgt; // target
-tgt = $IndexOf($TargetContext());
-$SA_REMOVE();
-$SetFriendly(tgt,$GET_COMBATANT_SA($TargetContext(),"side"));
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
]]>
      </script>
      <script name="Dispel SE">
        <![CDATA[$REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
]]>
      </script>
      <script name="DoesAttackSucceed">
        <![CDATA[$IF ($GET_COMBATANT_SA($AttackerContext(),"IsBestowedCurse") != "-?-?-")
-  {$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) +# 4);};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6))
-  {$RETURN "Y";}
-$ELSE {$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsBlackPuddingDissolving</name>
    ><asl>
      <script name="idk">
        <![CDATA[StartCombatRound = $VAR param;
-$VAR time;
-param = $SA_PARAM_GET();
-time = $GetCombatRound();
-$IF ((param +# 1) > time) {}; // chain mail, elfin chain, ring mail, scale mail, Svirfneblin Chain Mail, quarter staff and buckler
-$IF ((param +# 2) > time) {}; // banded mail, drow chain, plate mail, great helm, helm, drow buckler, shield and silver shield
-$IF ((param +# 3) > time) {};
-$IF ((param +# 4) > time) {};
-$IF ((param +# 5) > time) {};
-$IF ((param +# 6) > time) {};
-$IF ((param +# 7) > time) {};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsBlessed</name>
    <asl>
      <script name="CharDisplayStatus">
        $IF ($GET_PARTY_TIME() ><![CDATA[# $SA_PARAM_GET()){$RETURN $SA_REMOVE();};
-$SET_HOOK_PARAM( 7,"Blessed");
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
]]>
      </script>
      <script name="DoesAttackSucceed">
        <![CDATA[$IF ($GET_COMBATANT_SA($AttackerContext(),"IsBlessed") != "-?-?-")
-  {$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) -# 1);};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6))
-  {$RETURN "Y";}
-$ELSE {$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsBlind</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7,"Blind");
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
]]>
      </script>
      <script name="DoesAttackSucceed">
        <![CDATA[$IF ($GET_COMBATANT_SA($TargetContext(),"IsBlind") != "-?-?-")
-  {$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) -# 4);};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6))
-  {$RETURN "Y";}
-$ELSE {$RETURN "N";};
]]>
      </script>
      <script name="IsCombatReady">
        <![CDATA[$RETURN "N";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsBlinking</name>
    <asl>
      <script name="CanCastSpells">
        $IF ($GET_PARTY_TIME() ><![CDATA[# $SA_PARAM_GET())
-	{
-		$DELETE_COMBATANT_SA($CombatantContext(),"IsBlinking1");
-		$DELETE_COMBATANT_SA($CombatantContext(),"IsBlinking2");
-		$DELETE_CHARACTER_SA($CombatantContext(),"blinking");   
-		$SA_REMOVE();
-	};
]]>
      </script>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7,"Blinking ");
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
]]>
      </script>
      <script name="spawn">
        <![CDATA[$SET_COMBATANT_SA($Myself(),"IsBlinking1",1);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsBlinkingRing</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7,"Blinking ");
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsBlinking1</name>
    <asl>
      <script name="OnStartCombatantAction">
        <![CDATA[$SET_COMBATANT_SA($CombatantContext(),"IsBlinking2",1);
]]>
      </script>
      <script name="StartCombatRound">
        <![CDATA[$DELETE_COMBATANT_SA($CombatantContext(),"IsBlinking2");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsBlinking2</name>
    <asl>
      <script name="IsValidTarget">
        <![CDATA[$IF ($GET_MONSTERTYPE_SA($GET_CHAR_NAME($IndexOf($AttackerContext())),"monsterSeeEthereal") != "-?-?-"){$RETURN "Y";};
-$IF ($SET_COMBATANT_SA($AttackerContext(),"IsBlinking") != "-?-?-"){$RETURN "Y";};
-$IF ($SET_COMBATANT_SA($AttackerContext(),"IsBlinkingRing") != "-?-?-"){$RETURN "Y";};
-$RETURN "N";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsCarrionStenched</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Retching");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="DoesAttackSucceed">
        <![CDATA[$IF ($GET_COMBATANT_SA($AttackerContext(),"IsCarrionStenched") != "-?-?-")
-  {$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) +# 2);};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6))
-  {$RETURN "Y";}
-$ELSE {$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsCharmed</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7,"Charmed ");
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$VAR clev; // Cast level
-$VAR dlev; // Dispel level
-$VAR cls;  // Class
-$VAR pct;  // Percent
-clev = $SA_PARAM_GET();
-cls  = $SA_SPELL_GET("spell_Dispel");
-dlev = $GET_CHAR_Lvl($IndexOf($AttackerContext()),cls);
-$IF ($GET_CHARACTER_SA($TargetContext(),"z-IsGlobedMinor") != "-?-?-" && cls != "druid")
-	{$RETURN;};
-$IF ($GET_CHARACTER_SA($TargetContext(),"z-IsGlobed") != "-?-?-")
-	{$RETURN;};
-$IF (cls == "paladin"){dlev = dlev -#8;};
-$IF (clev ># dlev) {pct = 50 -# ((clev -# dlev) *# 2);}
-$ELSE {pct = 50 +# ((dlev -# clev) *# 5);};
-$IF ($RANDOM(100) +# 1 <=# pct)
-	{
-		$SetFriendly($IndexOf($TargetContext()),$GET_COMBATANT_SA($TargetContext(),"side"));
-		$SA_REMOVE();
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsCharmResistant</name>
    ><asl>
      <script name="idk">
        <![CDATA[\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsCharmResistantMin</name>
    ><asl>
      <script name="idk">
        <![CDATA[\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsCloakDisplaced</name>
    <asl>
      <script name="DoesAttackSucceed">
        <![CDATA[$IF ($GET_COMBATANT_SA($TargetContext(),"IsCloakDisplaced") != "-?-?-" && $GET_COMBATANT_SA($TargetContext(),"displaceMiss") == "-?-?-")
-	{
-		$SET_COMBATANT_SA($TargetContext(),"displaceMiss",1);
-		$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) +# 90);
-	};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)){$RETURN "Y";}
-$ELSE {$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsConfused</name>
    <asl>
      <script name="CanCastSpells">
        <![CDATA[$RETURN "N";
]]>
      </script>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7,"Confused");
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
]]>
      </script>
      <script name="GetAdjMaxMovement">
        <![CDATA[$RETURN "0";
]]>
      </script>
      <script name="IsCombatReady">
        <![CDATA[$RETURN "N";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsConfusedExtended</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
]]>
      </script>
      <script name="StartCombatRound">
        <![CDATA[$VAR save;
-$VAR rnd;
-$VAR opr; // once per round
-$VAR com; // combatant
-com = $IndexOf($CombatantContext());
-opr = $GET_COMBATANT_SA($CombatantContext(),"oncePerRnd");
-$IF (opr ==# 0)
-	{
-		$DELETE_COMBATANT_SA($CombatantContext(),"IsConfused");
-		save = $SkillAdj($CombatantContext(), "Save Vs SP", "", "F", "");
-		rnd = $RANDOM(20) -# 1;
-		$IF (save <# rnd){$DELETE_COMBATANT_SA($CombatantContext(),"ConfusionSA");$RETURN;};
-		rnd = $RANDOM(10) +# 1;
-		$IF (rnd ==# 1){$SetFriendly(com,1);$RETURN;};
-		$IF (rnd <=# 6){$SET_COMBATANT_SA($CombatantContext(),"IsConfused","Confused");$RETURN;};
-		$IF (rnd ==# 7){$SetFriendly(com,1);$RETURN;};
-		$IF (rnd ==# 8){$SetFriendly(com,2);$RETURN;};
-		$SetFriendly(com,2);
-		$RETURN;
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsCursed</name>
    <asl>
      <script name="CharDisplayStatus">
        $IF ($GET_PARTY_TIME() ><![CDATA[# $SA_PARAM_GET()){$RETURN $SA_REMOVE();};
-$SET_HOOK_PARAM( 7, "Cursed");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="DoesAttackSucceed">
        <![CDATA[$IF ($GET_COMBATANT_SA($AttackerContext(),"IsCursed") != "-?-?-")
-  {$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) +# 1);};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)){$RETURN "Y";}
-$ELSE {$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsDetectedEvil</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7,$SA_PARAM_GET());
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsDetectedGood</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7,$SA_PARAM_GET());
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsDetectingMagic</name>
    <asl>
      <script name="CanCastSpells">
        <![CDATA[$VAR expiration;
-expiration = $SA_PARAM_GET();
-$IF ($GET_PARTY_TIME() ># expiration){$SA_REMOVE();};
]]>
      </script>
      <script name="CanCharacterDetectMagic">
        <![CDATA[$VAR expiration;
-expiration = $SA_PARAM_GET();
-$IF ($GET_PARTY_TIME() ># expiration){$SA_REMOVE();};
-$RETURN "Y";
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsDiseased</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7,$SA_PARAM_GET());
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
]]>
      </script>
      <script name="ComputeDamage">
        <![CDATA[$VAR tgt; // target
-$VAR CHA;
-$VAR spell;
-$VAR spellCount;
-tgt = $IndexOf($CharacterContext());
-CHA = $GET_CHAR_LIMITED_CHA(tgt);
-spell = "$Cure Light Wounds$Cure Serious Wounds$Cure Critical Wounds$Cure Light Wounds|Druid$Cure Serious Wounds|Druid$Cure Critical Wounds|Druid";
-spellCount = $DelimitedStringCount(spell);
-$SET_CHARACTER_SA($TargetContext(),"diseasedCHA", CHA);
-$MODIFY_CHAR_ATTRIBUTE(tgt, "CHA", CHA -# 2, "MINUTES", 999999999, "Reduction caused by Disease", "SPELL Disease");
-$IF ($SpellContext() == $DelimitedStringSubstring(spell,spellCount)){$RETURN 0;};
-$IF ($SpellContext() == "Cure Disease")
-	{
-		$DELETE_CHARACTER_SA($TargetContext(), "IsDiseased");
-		$MODIFY_CHAR_ATTRIBUTE(tgt, CHA, $SA_CHARACTER_GET("diseasedCHA"), "MINUTES", 999999999, "reset due to Cure Diease", "SPELL Cure Disease");
-		$DELETE_CHARACTER_SA($TargetContext(), "diseasedCHA");
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsDiseasedSpell</name>
    <asl>
      <script name="CanCastSpells">
        <![CDATA[$VAR chr; // character
-$VAR t10;
-$VAR t60;
-$VAR str;
-chr = $IndexOf($CharacterContext());
-$IF ($GET_CHARACTER_SA($CharacterContext(),"IDSTimer10") == "-?-?-")
-	{
-		$SET_CHARACTER_SA($CharacterContext(),"IDSTimer10",$GET_PARTY_TIME() +# 10);
-		$SET_CHARACTER_SA($CharacterContext(),"IDSTimer60",$GET_PARTY_TIME() +# 60);
-	};
-t10 = $GET_CHARACTER_SA($CharacterContext(),"IDSTimer10");
-t60 = $GET_CHARACTER_SA($CharacterContext(),"IDSTimer60");
-$IF ($GET_CHAR_HITPOINTS(chr) ># $GET_CHARACTER_SA($CharacterContext(),"minhp"))
-	{
-		$IF ($GET_PARTY_TIME() ># t10)
-			{
-				$SET_CHARACTER_SA($CharacterContext(),"IDSTimer10",$GET_PARTY_TIME() +# 10);
-				$SET_CHAR_HITPOINTS(chr,$GET_CHAR_HITPOINTS(chr) -# 1);
-			};
-	};
-str = $GET_CHAR_LIMITED_STR(chr);
-$IF (str ># 3)
-	{
-		$IF ($GET_PARTY_TIME() ># t60)
-			{
-				$SET_CHARACTER_SA($CharacterContext(),"IDSTimer60",$GET_PARTY_TIME() +# 60);
-				$MODIFY_CHAR_ATTRIBUTE(chr,"STR",-1,"MINUTES",999999999,"Diseased STR reduction","SPELL Disease");
-				$IF (str <# 4) {$SET_CHAR_MAXMOVE(chr,2);};
-			};
-	};
]]>
      </script>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7,"Diseased ");
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
]]>
      </script>
      <script name="IsCombatReady">
        <![CDATA[$IF ($GET_CHAR_LIMITED_STR($IndexOf($CharacterContext())) <# 4){$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsDispellingEvil</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Dispelling Evil");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
]]>
      </script>
      <script name="DoesAttackSucceed">
        <![CDATA[$IF ($GET_COMBATANT_SA($TargetContext(),"IsDispellingEvil") != "-?-?-")
-	{
-		$IF ($AlignmentGood($AttackerContext()) == "" && $GET_COMBATANT_SA($AttackerContext(),"Summoned") != "-?-?-")
-			{
-				$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) +# 7);
-			};
-	}
-$ELSE
-	{
-		$IF ($AlignmentGood($TargetContext()) == "" && $GET_COMBATANT_SA($TargetContext(),"Summoned") != "-?-?-" && $GET_HOOK_PARAM(6) <# $GET_HOOK_PARAM(5) && $GET_COMBATANT_SA($AttackerContext(),"CanDispel") != "-?-?-")
-			{
-				$CastSpellOnTargetAs($TargetContext(),"Banish",$AttackerContext());
-				$DELETE_COMBATANT_SA($AttackerContext(),"CanDispel");
-				$RETURN;
-			};
-	};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)){$RETURN "Y";}
-$ELSE {$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsDispellingGood</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Dispelling Good");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
]]>
      </script>
      <script name="DoesAttackSucceed">
        <![CDATA[$IF ($GET_COMBATANT_SA($TargetContext(),"IsDispellingGood") != "-?-?-")
-	{
-		$IF ($AlignmentEvil($AttackerContext()) == "" && $GET_COMBATANT_SA($AttackerContext(),"Summoned") != "-?-?-")
-			{
-				$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) +# 7);
-			};
-	}
-$ELSE
-	{
-		$IF ($AlignmentEvil($TargetContext()) == "" && $GET_COMBATANT_SA($TargetContext(),"Summoned") != "-?-?-" && $GET_HOOK_PARAM(6) <# $GET_HOOK_PARAM(5) && $GET_COMBATANT_SA($AttackerContext(),"CanDispel") != "-?-?-")
-			{
-				$CastSpellOnTargetAs($TargetContext(),"Banish",$AttackerContext());
-				$DELETE_COMBATANT_SA($AttackerContext(),"CanDispel");
-				$RETURN;
-			};
-	};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)){$RETURN "Y";}
-$ELSE {$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsDragonAdj</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Nervous ");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="DoesAttackSucceed">
        <![CDATA[$IF ($GET_COMBATANT_SA($AttackerContext(),"IsDragonAdj") != "-?-?-")
-  {$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) +# 1);};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)){$RETURN "Y";}
-$ELSE {$RETURN "N";};
]]>
      </script>
      <script name="IsCombatReady">
        <![CDATA[$VAR me;
-$VAR sideset;
-$VAR foe;
-$VAR i;
-me = $IndexOf($CharacterContext());
-$IF ($GET_CHAR_ASL(me,"side") == 1){sideset = 3;}
-$ELSE{sideset = 5;};
-foe = 0;
-i = $NextCreatureIndex("",sideset);
-$WHILE (i != "")
-	{
-		$IF ($GET_CHAR_ASL(i,"FearAdj"))
-			{
-				foe = foe +# 1;
-			};
-		i = $NextCreatureIndex(i,sideset);
-	};
-$IF (foe == 0){$SA_REMOVE();};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsDragonFear</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7,"Paralyzed with fear");
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
]]>
      </script>
      <script name="IsCombatReady">
        <![CDATA[$VAR me;
-$VAR sideset;
-$VAR foe;
-$VAR i;
-me = $IndexOf($CharacterContext());
-$IF ($GET_CHAR_ASL(me,"side") == 1){sideset = 3;}
-$ELSE {sideset = 5;};
-foe = 0;
-i = $NextCreatureIndex("",sideset);
-$WHILE (i != "")
-	{
-		$IF ($GET_CHAR_ASL(i,"FearAdj")){foe = foe +# 1;};
-		i = $NextCreatureIndex(i,sideset);
-	};
-$IF (foe == 0)
-	{
-		$SA_REMOVE();
-		$RETURN "Y";
-	};
-$RETURN "N";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsDragonFlee</name>
    <asl>
      <script name="AutoAction">
        <![CDATA[$RETURN "F" + $SA_PARAM_GET();
]]>
      </script>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7,"Fleeing Dragon");
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
]]>
      </script>
      <script name="IsCombatReady">
        <![CDATA[$VAR me;
-$VAR sideset;
-$VAR foe;
-$VAR i;
-me = $IndexOf($CharacterContext());
-$IF ($GET_CHAR_ASL(me,"side") == 1){sideset = 3;}
-$ELSE {sideset = 5;};
-foe = 0;
-i = $NextCreatureIndex("",sideset);
-$WHILE (i != "")
-	{
-		$IF ($GET_CHAR_ASL(i,"FearAdj")){foe = foe +# 1;};
-		i = $NextCreatureIndex(i,sideset);
-	};
-$IF (foe == 0){$SA_REMOVE();};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsDrained</name>
    <asl>
      <script name="TrainingCharacter">
        <![CDATA[$SA_REMOVE();
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsDruidImmuneWoodlandCharm</name>
    <asl>
      <script name="DoesSpellAttackSucceed">
        <![CDATA[$VAR me;
-me = $IndexOf($TargetContext());
-$IF ($SA_SPELL_GET("DamageMagical") != "charm"){$RETURN;};
-$IF ($GET_COMBATANT_SA($AttackerContext(),"IsWoodlandCreature") == "-?-?-") {$RETURN;};
-$SET_HOOK_PARAM(5,$GET_CHAR_NAME(me) +" is unaffected" );
-$RETURN "N";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsDruidShapeChanger</name>
    <asl>
      <script name="CanLayOrWhatever">
        <![CDATA[$VAR prevTime;
-$VAR curTime;
-$VAR elapsedTime;
-prevTime = $GET_CHARACTER_SA($CharacterContext(),"druidChangeTime");
-curTime = $GET_PARTY_TIME();
-$IF(prevTime)  // First time fudge.
-{elapsedTime = curTime -# prevTime;}
-$ELSE{elapsedTime = 999;};
-$IF ((elapsedTime >= 0) && (elapsedTime <# 24)) {$RETURN;};
-$SET_HOOK_PARAM( 5, "SHAPE CHANGE" );
-$SET_HOOK_PARAM( 6, "0");
]]>
      </script>
      <script name="LayOrWhatever">
        <![CDATA[$VAR curTime;
-curTime = $GET_PARTY_TIME();
-$SET_CHARACTER_SA($CharacterContext(),"druidChangeTime",curTime);
-$SET_HOOK_PARAM(1,"druidShapeChange");
-$RETURN "CastSpell";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsElf</name>
    <asl>
      <script name="CreateMonsterCombatant">
        <![CDATA[$VAR chr; // character
-chr = $IndexOf($CharacterContext());
-$SET_CHARACTER_SA($CharacterContext(),"IsElf",$SA_PARAM_GET());
-$SET_CHAR_RACE(chr,"Elf");
]]>
      </script>
      <script name="DoesAttackSucceed">
        <![CDATA[$VAR wpn;
-wpn = $GET_CHAR_Ready($AttackerContext(),"WEAPON",0);
-$IF ($GET_COMBATANT_SA($AttackerContext(),"IsElf") != "-?-?-" && $GET_ITEM_SA(wpn,"item_ElfBonus") != "-?-?-")
-	{
-		$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) -# 1);
-	};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)){$RETURN "Y";}
-$ELSE {$RETURN "N";};
]]>
      </script>
      <script name="DoesSpellAttackSucceed">
        <![CDATA[$VAR atk;
-$VAR caster;
-$VAR caster1;
-$VAR caster2;
-$VAR level;
-$VAR base;
-$IF ($SA_SPELL_GET("DamageMagical") != "charm"){$RETURN;};
-atk = $IndexOf($AttackerContext());
-caster = $SA_SPELL_GET("Caster");
-caster1 = $DelimitedStringSubstring(caster,0);
-caster2 = $DelimitedStringSubstring(caster,1);
-$IF (caster1 == "monster")
-	{
-		level =  $GET_MONSTERTYPE_SA($GET_CHAR_NAME(atk),"monsterLevel");
-		base = 11;
-	}
-$ELSE
-	{
-		$IF (caster1 == "item")
-			{
-				level = caster2;
-				base = 11;
-			}
-		$ELSE
-			{
-				level = $GET_CHAR_Lvl(atk,caster1);
-				base = caster2;
-			};
-	};
-$IF ($RANDOM(100) <# 90 -# 5 *# (level -# base))
-	{
-		$SET_HOOK_PARAM(5,$GET_CHAR_NAME($IndexOf($TargetContext())) +" is unaffected" );
-		$RETURN "N";
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsEnfeebled</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Enfeebled");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="DoesAttackSucceed">
        <![CDATA[$IF ($GET_COMBATANT_SA($AttackerContext(),"IsEnfeebled") != "-?-?-")
-  {$SET_COMBATANT_SA($TargetContext(),"IsEnfeebledHit",1);};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)){$RETURN "Y";}
-$ELSE {$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsEnfeebledHit</name>
    <asl>
      <script name="ComputeDamage">
        <![CDATA[$IF ($GET_COMBATANT_SA($AttackerContext(),"IsEnfeebled") != "-?-?-")
-  {
-   $SET_HOOK_PARAM(5,($GET_HOOK_PARAM(5) *# $GET_COMBATANT_SA($AttackerContext(),"enfeebled")) /# 100);
-   $IF ($GET_HOOK_PARAM(5) == 0) {$SET_HOOK_PARAM(5,1);};
-  };
-$SA_REMOVE();
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsEnlarged</name>
    <asl>
      <script name="CanCastSpells">
        <![CDATA[$VAR me;
-me = $IndexOf($CharacterContext());
-$IF ($GET_PARTY_TIME() ># $GET_CHARACTER_SA($CharacterContext(),"enlarged"))
-	{
-		$DELETE_CHARACTER_SA($CharacterContext(),"enlarged");
-		$SET_CHAR_SIZE(me,$GET_CHARACTER_SA($CharacterContext(),"mySize"));
-		$RUN_CHAR_SE_SCRIPTS($CharacterContext(),"Dispel SE");
-		$SA_REMOVE();
-	};
]]>
      </script>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Enlarged");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$VAR me;
-me = $IndexOf($CharacterContext());
-$DELETE_CHARACTER_SA($CharacterContext(),"enlarged");
-$REMOVE_CHAR_MODIFICATION(me,"SPELL Enlarge *");
-$SET_CHAR_SIZE(me,$GET_CHARACTER_SA($CharacterContext(),"mySize"));
-$RUN_CHAR_SE_SCRIPTS($CharacterContext(),"Dispel SE");
-$SA_REMOVE();
]]>
      </script>
      <script name="Dispel enlarged">
        <![CDATA[$VAR me;
-me = $IndexOf($CharacterContext());
-$DELETE_CHARACTER_SA($CharacterContext(),"enlarged");
-$REMOVE_CHAR_MODIFICATION(me,"SPELL Enlarge *");
-$SET_CHAR_SIZE(me,$GET_CHARACTER_SA($CharacterContext(),"mySize"));
-$RUN_CHAR_SE_SCRIPTS($CharacterContext(),"Dispel SE");
-$SA_REMOVE();
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsEntangled0</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7,"Entangled by Vines");
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
]]>
      </script>
      <script name="ComputeDamage">
        <![CDATA[$RETURN $GET_CHAR_HITPOINTS($IndexOf($TargetContext())) +# 1;
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
]]>
      </script>
      <script name="GetAdjMaxMovement">
        <![CDATA[$RETURN "0";
]]>
      </script>
      <script name="IsCombatReady">
        <![CDATA[$VAR exp; // expiration time
-exp = $SA_PARAM_GET();
-$IF ($GET_PARTY_TIME() >=# exp)
-	{
-		$SA_REMOVE();
-		$RETURN "Y";
-	}
-$ELSE {$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsEntangled1</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$RUN_AREA_SE_SCRIPTS("Entangled1", $IndexOf($CharacterContext()));
-$SET_HOOK_PARAM( 7, $GET_HOOK_PARAM(8));
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
]]>
      </script>
      <script name="GetAdjMaxMovement">
        <![CDATA[$VAR chr; // character
-chr = $IndexOf($CharacterContext());
-$SET_HOOK_PARAM(6, $GET_HOOK_PARAM(5));
-$RUN_AREA_SE_SCRIPTS("MovementAdjustments", chr);
-$RETURN $GET_HOOK_PARAM(5);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsFast</name>
    <asl>
      <script name="AdjustInitiative">
        <![CDATA[$RETURN -2;
]]>
      </script>
      <script name="CharDisplayStatus">
        <![CDATA[$VAR exp; // expiration time
-exp = $SA_PARAM_GET();
-$IF ($GET_PARTY_TIME() >=# exp){$SA_REMOVE();};
-$SET_HOOK_PARAM( 7,"Hasted");
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
]]>
      </script>
      <script name="GetAdjMaxMovement">
        <![CDATA[$RETURN $GET_HOOK_PARAM(5) *# 2;
]]>
      </script>
      <script name="GetNumberOfAttacks">
        <![CDATA[$RETURN 2;
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsFastBoots</name>
    <asl>
      <script name="GetAdjMaxMovement">
        <![CDATA[$RETURN $GET_HOOK_PARAM(5) *# 2;
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsFeebleminded</name>
    <asl>
      <script name="CanCastSpells">
        <![CDATA[$RETURN "N";
]]>
      </script>
      <script name="CanKnowSpell">
        <![CDATA[$RETURN "N";
]]>
      </script>
      <script name="CanMemorizeSpells">
        <![CDATA[$RETURN "N";
]]>
      </script>
      <script name="IsCombatReady">
        <![CDATA[$RETURN "N";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsFleeing</name>
    <asl>
      <script name="AutoAction">
        <![CDATA[$RETURN "F" + $IndexOf($LEAST_DAMAGED_FRIENDLY());
]]>
      </script>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7,$SA_PARAM_GET());
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsFumbling</name>
    <asl>
      <script name="CharDisplayStatus">
        $IF ($GET_PARTY_TIME() ><![CDATA[# $SA_PARAM_GET())
-  {$RETURN $SA_REMOVE();};
-$SET_HOOK_PARAM( 7,"Fumbling ");
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
]]>
      </script>
      <script name="GetAdjMaxMovement">
        <![CDATA[$RETURN "0";
]]>
      </script>
      <script name="IsCombatReady">
        <![CDATA[$RETURN "N";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsGreenSlimed</name>
    <asl>
      <script name="StartCombatRound">
        <![CDATA[$VAR round;
-$VAR tgt;
-$VAR rnd;
-$VAR nRound;
-$IF ($GET_CHARACTER_SA($CharacterContext(),"IsGreenSlimed") != "-?-?-"){$RETURN;};
-round = $SA_PARAM_GET();
-rnd = $RANDOM(4) +# 1;
-nRound = $GetCombatRound();
-tgt = $IndexOf($TargetContext());
-$IF (nRound >=# (round +# rnd))
-	{
-		$SET_CHAR_HITPOINTS(tgt,-11);
-		$SET_CHAR_STATUS(tgt,5);
-		$AddCombatant("Green Slime",1);
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsHeld</name>
    <asl>
      <script name="CharDisplayStatus">
        $IF ($GET_PARTY_TIME() ><![CDATA[# $SA_PARAM_GET()){$RETURN $SA_REMOVE();};
-$SET_HOOK_PARAM( 7,"Held ");
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
]]>
      </script>
      <script name="DoesAttackSucceed">
        <![CDATA[$IF ($GET_COMBATANT_SA($TargetContext(),"IsHeld") != "-?-?-")
-	{$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) -# 30);};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)){$RETURN "Y";}
-$ELSE {$RETURN "N";};
]]>
      </script>
      <script name="GetItemTargetHitBonus">
        <![CDATA[$RETURN $GET_CHAR_HITPOINTS($IndexOf($TargetContext())) +# 15;
]]>
      </script>
      <script name="IsCombatReady">
        <![CDATA[$RETURN "N";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsHelpless</name>
    <asl>
      <script name="CanCastSpells">
        <![CDATA[$RETURN "N";
]]>
      </script>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7,"Helpless");
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
]]>
      </script>
      <script name="GetAdjMaxMovement">
        <![CDATA[$RETURN "0";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsHugged</name>
    <asl>
      <script name="CanCastSpells">
        <![CDATA[$VAR com;
-com = $IndexOf($CombatantContext());
-$IF ($GET_CHAR_HITPOINTS(com) <# 1) 
-	{
-		$SA_REMOVE();
-		$RETURN;
-	};
-$RETURN "N";
]]>
      </script>
      <script name="GetAdjMaxMovement">
        <![CDATA[$RETURN 0;
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsImmuneAcid</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Immune to Acid");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="ComputeDamage">
        <![CDATA[$VAR item; $VAR itmNon; $VAR monster; $VAR monNon; $VAR immune;
-item = $SA_ITEM_GET("DamageMagical");
-itmNon = $SA_ITEM_GET("DamageNonMagical");
-monster = $SA_MONSTERTYPE_GET("DamageMagical");
-monNon = $SA_MONSTERTYPE_GET("DamageNonMagical");
-$IF ((item == "-?-?-") && (itmNon == "-?-?-") && (monster == "-?-?-") && (monNon == "-?-?-")) {$RETURN;};
-$IF (item != "-?-?-") {immune = item;};
-$IF (itmNon != "-?-?-") {immune = itmNon;};
-$IF (monster != "-?-?-") {immune = monster;};
-$IF (monNon != "-?-?-") {immune = monNon;};
-$IF (immune == "acid") {$RETURN 0;};
]]>
      </script>
      <script name="ComputeSpellDamage">
        <![CDATA[$VAR spell; $VAR splNon; $VAR immune;
-spell = $SA_SPELL_GET("DamageMagical");
-splNon = $SA_SPELL_GET("DamageNonMagical");
-$IF ((spell == "-?-?-") && (splNon == "-?-?-")){$RETURN;};
-$IF (spell != "-?-?-") {immune = spell;};
-$IF (splNon != "-?-?-") {immune = splNon;};
-$IF (immune == "acid") {$RETURN 0;};
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsImmuneCold</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Immune to Cold");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="ComputeDamage">
        <![CDATA[$VAR item; $VAR itmNon; $VAR monster; $VAR monNon; $VAR immune;
-item = $SA_ITEM_GET("DamageMagical");
-itmNon = $SA_ITEM_GET("DamageNonMagical");
-monster = $SA_MONSTERTYPE_GET("DamageMagical");
-monNon = $SA_MONSTERTYPE_GET("DamageNonMagical");
-$IF ((item == "-?-?-") && (itmNon == "-?-?-") && (monster == "-?-?-") && (monNon == "-?-?-")) {$RETURN;};
-$IF (item != "-?-?-") {immune = item;};
-$IF (itmNon != "-?-?-") {immune = itmNon;};
-$IF (monster != "-?-?-") {immune = monster;};
-$IF (monNon != "-?-?-") {immune = monNon;};
-$IF (immune == "cold") {$RETURN 0;};
]]>
      </script>
      <script name="ComputeSpellDamage">
        <![CDATA[$VAR spell; $VAR splNon; $VAR immune;
-spell = $SA_SPELL_GET("DamageMagical");
-splNon = $SA_SPELL_GET("DamageNonMagical");
-$IF ((spell == "-?-?-") && (splNon == "-?-?-")){$RETURN;};
-$IF (spell != "-?-?-") {immune = spell;};
-$IF (splNon != "-?-?-") {immune = splNon;};
-$IF (immune == "cold") {$RETURN 0;};
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsImmuneDB</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
]]>
      </script>
      <script name="DoesSpellAttackSucceed">
        <![CDATA[$VAR tgt; // target
-tgt = $IndexOf($TargetContext());
-$IF ($SA_SPELL_GET("DragonBreathWeapon") != "-?-?-")
-	{
-		$SET_HOOK_PARAM(5,$GET_CHAR_NAME(tgt) +" is unaffected"); 
-		$RETURN "N";
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsImmuneDisease</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM(7,"Immune to Disease");
-$SET_HOOK_PARAM(6,"");
-$RETURN 1;
]]>
      </script>
      <script name="DoesSpellAttackSucceed">
        <![CDATA[$IF ($SA_SPELL_GET("DamageMagical") == "disease" || $SA_SPELL_GET("DamageNonMagical") == "disease"){$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsImmuneDragonBreathWeapon</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
]]>
      </script>
      <script name="DoesSpellAttackSucceed">
        <![CDATA[$VAR param;
-$VAR prm1;
-$VAR prm2;
-$VAR tgt; // target
-param = $SA_PARAM_GET();
-prm1 = $DelimitedStringSubstring(param,0);
-prm2 = $DelimitedStringSubstring(param,1);
-tgt = $IndexOf($TargetContext());
-$IF ($SA_SPELL_GET("DragonBreathWeapon") == prm1)
-	{$SET_HOOK_PARAM(5,$GET_CHAR_NAME(tgt) +" is unaffected"); $RETURN "N";};
-$IF ($SA_SPELL_GET("DragonBreathWeapon") == prm2)
-	{$SET_HOOK_PARAM(5,$GET_CHAR_NAME(tgt) +" is unaffected"); $RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsImmuneElectricity</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Immune to Electricity");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="ComputeDamage">
        <![CDATA[$VAR item; $VAR itmNon; $VAR monster; $VAR monNon; $VAR immune;
-item = $SA_ITEM_GET("DamageMagical");
-itmNon = $SA_ITEM_GET("DamageNonMagical");
-monster = $SA_MONSTERTYPE_GET("DamageMagical");
-monNon = $SA_MONSTERTYPE_GET("DamageNonMagical");
-$IF ((item == "-?-?-") && (itmNon == "-?-?-") && (monster == "-?-?-") && (monNon == "-?-?-")) {$RETURN;};
-$IF (item != "-?-?-") {immune = item;};
-$IF (itmNon != "-?-?-") {immune = itmNon;};
-$IF (monster != "-?-?-") {immune = monster;};
-$IF (monNon != "-?-?-") {immune = monNon;};
-$IF (immune == "electricity") {$RETURN 0;};
]]>
      </script>
      <script name="ComputeSpellDamage">
        <![CDATA[$VAR spell; $VAR splNon; $VAR immune;
-spell = $SA_SPELL_GET("DamageMagical");
-splNon = $SA_SPELL_GET("DamageNonMagical");
-$IF ((spell == "-?-?-") && (splNon == "-?-?-")){$RETURN;};
-$IF (spell != "-?-?-") {immune = spell;};
-$IF (splNon != "-?-?-") {immune = splNon;};
-$IF (immune == "electricity") {$RETURN 0;};
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsImmuneFire</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Immune to Fire");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="ComputeDamage">
        <![CDATA[$VAR item; $VAR itmNon; $VAR monster; $VAR monNon; $VAR immune;
-item = $SA_ITEM_GET("DamageMagical");
-itmNon = $SA_ITEM_GET("DamageNonMagical");
-monster = $SA_MONSTERTYPE_GET("DamageMagical");
-monNon = $SA_MONSTERTYPE_GET("DamageNonMagical");
-$IF ((item == "-?-?-") && (itmNon == "-?-?-") && (monster == "-?-?-") && (monNon == "-?-?-")) {$RETURN;};
-$IF (item != "-?-?-") {immune = item;};
-$IF (itmNon != "-?-?-") {immune = itmNon;};
-$IF (monster != "-?-?-") {immune = monster;};
-$IF (monNon != "-?-?-") {immune = monNon;};
-$IF (immune == "fire") {$RETURN 0;};
]]>
      </script>
      <script name="ComputeSpellDamage">
        <![CDATA[$VAR spell; $VAR splNon; $VAR immune;
-spell = $SA_SPELL_GET("DamageMagical");
-splNon = $SA_SPELL_GET("DamageNonMagical");
-$IF ((spell == "-?-?-") && (splNon == "-?-?-")){$RETURN;};
-$IF (spell != "-?-?-") {immune = spell;};
-$IF (splNon != "-?-?-") {immune = splNon;};
-$IF (immune == "fire") {$RETURN 0;};
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsImmuneNormalFire</name>
    <asl>
      <script name="DoesSpellAttackSucceed">
        <![CDATA[$IF ($SA_SPELL_GET("DamageNonMagical") == "fire"){$RETURN "N";};
-$IF ($SA_ITEM_GET("DamageNonMagical") == "fire"){$RETURN "N";};
-$IF ($SA_MONSTERTYPE_GET("DamageNonMagical") == "fire"){$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsImmuneNormalMissiles</name>
    <asl>
      <script name="CharDisplayStatus">
        $IF ($GET_PARTY_TIME() ><![CDATA[# $SA_PARAM_GET())
-	{$RETURN $SA_REMOVE();};
-$IF ($GET_HOOK_PARAM(5) == "DISPLAY")
-	{
-		$SET_HOOK_PARAM( 7,"Prot from Normal Missiles");
-		$SET_HOOK_PARAM( 6,"3");
-	};
-$RETURN 1;
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
]]>
      </script>
      <script name="DoesAttackSucceed">
        <![CDATA[$VAR tgt; // target
-tgt = $IndexOf($TargetContext());
-$IF ($GET_COMBATANT_SA($TargetContext(),"IsImmuneNormalMissiles") != "-?-?-")
-	{
-		$IF ((($SA_ITEM_GET("item_HurledWeapon") != "-?-?-" && $VisualDistance(tgt,$IndexOf($AttackerContext())) ># 1) || $SA_ITEM_GET("item_MissileWeapon") != "-?-?-") && $SA_ITEM_GET("item_MagicalWeapon") == "-?-?-")
-			{
-				$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) +# 90);
-			};
-	};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)){$RETURN "Y";}
-$ELSE {$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsImmunePoison</name>
    <asl>
      <script name="DoesSpellAttackSucceed">
        <![CDATA[$IF ($SA_SPELL_GET("DamageMagical") == "poison" || $SA_SPELL_GET("DamageNonMagical") == "poison"){$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsImmuneSpells</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
]]>
      </script>
      <script name="DoesSpellAttackSucceed">
        <![CDATA[$VAR spLvl;
-$VAR spAtk;
-spLvl = $GET_SPELL_Level($SpellContext());
-spAtk = $GET_SPELL_SA($SpellContext(),"spell_Attack");
-$IF (spLvl <=# 4){$IF (spAtk != "-?-?-"){$RETURN "N";};};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsImmuneSpellsMinor</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
]]>
      </script>
      <script name="DoesSpellAttackSucceed">
        <![CDATA[$VAR spLvl;
-$VAR spAtk;
-spLvl = $GET_SPELL_Level($SpellContext());
-spAtk = $GET_SPELL_SA($SpellContext(),"spell_Attack");
-$IF (spLvl <=# 3){$IF (spAtk != "-?-?-"){$RETURN "N";};};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsInsectFlee</name>
    <asl>
      <script name="AutoAction">
        <![CDATA[$RETURN "F" + $SA_PARAM_GET();
]]>
      </script>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7,"Fleeing insects");
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsInvisible</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
]]>
      </script>
      <script name="DoesAttackSucceed">
        <![CDATA[$IF ($GET_COMBATANT_SA($AttackerContext(),"IsInvisible") != "-?-?-")
-	{
-		$DELETE_COMBATANT_SA($AttackerContext(),"IsInvisibleSpell");
-		$DELETE_COMBATANT_SA($AttackerContext(),"IsInvisible");
-	};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)){$RETURN "Y";}
-$ELSE {$RETURN "N";};
]]>
      </script>
      <script name="IsValidTarget">
        <![CDATA[$IF ($SA_COMBATANT_GET("IsSeeingInvisible") != "-?-?-"){$RETURN "Y";};
-$IF ($GET_CHARACTER_SA($TargetContext(),"IsFaerieFire") != "-?-?-"){$RETURN;}
-$ELSE {$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsInvisiblePotion</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$IF ($GET_HOOK_PARAM(5) == "DISPLAY")
-	{
-		$SET_HOOK_PARAM(7,"Invisible, Potion");
-		$SET_HOOK_PARAM(6,"");
-		$RETURN 1;
-	};
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
]]>
      </script>
      <script name="spawn">
        <![CDATA[$SET_COMBATANT_SA($CharacterContext(),"IsInvisible",1);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsInvisibleRing</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$IF ($GET_HOOK_PARAM(5) == "DISPLAY")
-	{
-		$SET_HOOK_PARAM(7,"Invisible, Ring");
-		$SET_HOOK_PARAM(6,"");
-		$RETURN 1;
-	};
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
]]>
      </script>
      <script name="OnStartCombatantAction">
        <![CDATA[$SET_COMBATANT_SA($CharacterContext(),"IsInvisible",1);
]]>
      </script>
      <script name="spawn">
        <![CDATA[$SET_COMBATANT_SA($CharacterContext(),"IsInvisibleRing",1);
-$SET_COMBATANT_SA($CharacterContext(),"IsInvisible",1);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsInvisibleSpell</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$IF ($GET_HOOK_PARAM(5) == "DISPLAY")
-	{
-		$SET_HOOK_PARAM(7,"Invisible, spell");
-		$SET_HOOK_PARAM(6,2);
-		$RETURN 1;
-	};
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
]]>
      </script>
      <script name="spawn">
        <![CDATA[$SET_COMBATANT_SA($CharacterContext(),"IsInvisible",1);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsInvisibleStalker</name>
    <asl>
      <script name="IsValidTarget">
        <![CDATA[$IF ($SA_COMBATANT_GET("IsSeeingInvisible") != "-?-?-"){$RETURN "Y";};
-$IF ($GET_COMBATANT_SA($TargetContext(),"IsFaerieFire") != "-?-?-"){$RETURN;}
-$ELSE {$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsInvisibleToAnimals</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Invisible to Animals");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
]]>
      </script>
      <script name="IsValidTarget">
        <![CDATA[$IF ($GET_ISANIMAL($AttackerContext()) <# 0){$RETURN "Y";};
-$IF ($SA_COMBATANT_GET("IsSeeingInvisible") != "-?-?-") {$RETURN "Y";}
-$ELSE {$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsLichFear</name>
    <asl>
      <script name="CanAim">
        <![CDATA[$RETURN "N";
]]>
      </script>
      <script name="CanCastSpells">
        <![CDATA[$RETURN "N";
]]>
      </script>
      <script name="CharDisplayStatus">
        $IF ($GET_PARTY_TIME() ><![CDATA[# $SA_PARAM_GET()){$RETURN $SA_REMOVE();};
-$SET_HOOK_PARAM( 7,"Paralyzed with fear");
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
]]>
      </script>
      <script name="ComputeDamage">
        <![CDATA[$VAR dmg;
-$VAR tgt; // target
-tgt = $IndexOf($TargetContext());
-$IF ($GET_COMBATANT_SA($TargetContext(),"IsLichFear") != "-?-?-")
-	{
-		$SET_CHAR_ASL(tgt,"lichfear","");
-		$SET_HOOK_PARAM(5,$GET_CHAR_HITPOINTS(tgt) +# 10);
-		$RETURN $GET_HOOK_PARAM(5);
-	};
]]>
      </script>
      <script name="DoesAttackSucceed">
        <![CDATA[$IF ($GET_COMBATANT_SA($TargetContext(),"IsLichFear") != "-?-?-")
-  {$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) -# 30);};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)){$RETURN "Y";}
-$ELSE {$RETURN "N";};
]]>
      </script>
      <script name="DrawMoveMenu">
        <![CDATA[$SET_HOOK_PARAM(1,0);
]]>
      </script>
      <script name="GetAdjMaxMovement">
        <![CDATA[$DELETE_CHARACTER_SA($CharacterContext(),"IsFastBoots");
-$RETURN 0;
]]>
      </script>
      <script name="GetItemTargetHitBonus">
        <![CDATA[$RETURN;
]]>
      </script>
      <script name="IsCombatReady">
        $IF ($GET_PARTY_TIME() ><![CDATA[# $SA_PARAM_GET()){$RETURN $SA_REMOVE();};
-$RETURN "N";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsMindFlayed</name>
    <asl>
      <script name="StartCombatRound">
        <![CDATA[$VAR round;
-$VAR tgt;
-$VAR rnd;
-$VAR nRound;
-$IF ($GET_CHARACTER_SA($CharacterContext(),"IsMindFlayed") != "-?-?-"){$RETURN;};
-round = $SA_PARAM_GET();
-rnd = $RANDOM(4) +# 1;
-nRound = $GetCombatRound();
-tgt = $IndexOf($TargetContext());
-$IF (nRound >=# (round +# rnd)){$SET_CHAR_HITPOINTS(tgt,-11);$SET_CHAR_STATUS(tgt,5);};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsMirrored</name>
    <asl>
      <script name="CanCastSpells">
        <![CDATA[$IF ($IS_AFFECTED_BY_SPELL($CharacterContext(),"Mirror Image") == "")
-  {$SA_REMOVE();};
]]>
      </script>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7,$SA_PARAM_GET() + " mirror images");
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
]]>
      </script>
      <script name="DoesAttackSucceed">
        <![CDATA[$VAR remain;
-$IF ($GET_COMBATANT_SA($TargetContext(),"IsMirrored") != "-?-?-")
-	{
-		remain = $SA_PARAM_GET();
-		$IF ($RANDOM(remain +# 1) !=# 0)
-			{  // Image targeted
-				$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6))
-					{ // Removing image
-						$SA_PARAM_SET(remain -# 1);
-						$IF ($GET_COMBATANT_SA($TargetContext(),"IsMirrored") <# 1)
-							{ // Images depleted
-								$SA_REMOVE();
-							};
-					};
-				$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) +# 90);
-			};
-	};  // Caster targeted
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)){$RETURN "Y";}
-$ELSE {$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsMummyDiseased</name>
    <asl>
      <script name="CanCastSpells">
        <![CDATA[$VAR me;
-me = $IndexOf($CharacterContext());
-$IF ($GET_PARTY_DAYS() >=# $SA_PARAM_GET())
-	{
-		$SA_PARAM_SET($GET_PARTY_DAYS() +# 30);
-		$MODIFY_CHAR_ATTRIBUTE(me,"CHA",-2, "MINUTES", 9999999, "Mummy Disease","MONSTER Disease");
-		$SET_CHARACTER_SA($CharacterContext(),"pcCHA",$GET_CHAR_LIMITED_CHA(me));
-		$SET_CHARACTER_SA($CharacterContext(),"rot",$GET_CHARACTER_SA($CharacterContext(),"rot") +# 17);
-		$IF ($RANDOM(100) <= $GET_CHARACTER_SA($CharacterContext(),"rot"))
-			{
-				$SET_CHAR_HITPOINTS(me,0);
-				$SET_CHAR_STATUS(me,5);
-			};
-		$IF ($GET_CHAR_LIMITED_CHA(me) <# 6)
-			{
-				$SET_CHAR_STATUS(me,5);
-			};
-	};
-$IF ($GET_CHAR_STATUS(me) ==# 2 && $GET_CHARACTER_SA($CharacterContext(),"IsMummyRotting") == "-?-?-")
-	{
-		$SET_CHARACTER_SA($CharacterContext(),"IsMummyRotting",$GET_PARTY_TIME() +# 60);
-	};
]]>
      </script>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7,"Has Mummy Rot");
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
]]>
      </script>
      <script name="DoesSpellAttackSucceed">
        <![CDATA[$VAR dm;
-dm = $SA_SPELL_GET("DamageMagical");
-$IF ($SA_SOURCE_NAME() == "Heal" || dm == "cureDis"){$RETURN $SA_REMOVE();};
-$IF ((dm == "wound" && $SA_SPELL_GET("spell_Attack") == "-?-?-") || dm == "raise"){$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsMummyFear</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7,"Paralyzed with fear");
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
]]>
      </script>
      <script name="DoesAttackSucceed">
        <![CDATA[$IF ($GET_COMBATANT_SA($TargetContext(),"IsParalyzed") != "-?-?-")
-  {$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) -# 30);};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)){$RETURN "Y";}
-$ELSE {$RETURN "N";};
]]>
      </script>
      <script name="GetItemTargetHitBonus">
        <![CDATA[$RETURN $GET_CHAR_HITPOINTS($IndexOf($TargetContext())) +# 1;
]]>
      </script>
      <script name="IsCombatReady">
        $IF ($GET_PARTY_TIME() ><![CDATA[# $SA_PARAM_GET())
-	{
-		$SET_COMBATANT_SA($CombatantContext(),"IsOverMummy","");
-		$SA_REMOVE();
-		$RETURN "1";
-	};
-$RETURN "N";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsMummyRotting</name>
    <asl>
      <script name="CanCastSpells">
        <![CDATA[$VAR me;
-me = $IndexOf($CharacterContext());
-$IF ($GET_PARTY_TIME() ># $SA_PARAM_GET())
-	{
-		$DELETE_CHARACTER_SA($CharacterContext(),"IsMummyDiseased");
-		$SA_REMOVE();
-		$SET_CHAR_HITPOINTS(me,0);
-		$SET_CHAR_STATUS(me,5);
-	};
]]>
      </script>
      <script name="DoesSpellAttackSucceed">
        <![CDATA[$IF ($GET_COMBATANT_SA($TargetContext(),"IsMummyDiseased") == "-?-?-" && $SA_SPELL_GET("DamageMagical") == "raise")
-	{
-		$SA_REMOVE();
-		$RETURN "Y";
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsPaladinImmuneDisease</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM(7,"Immune to Disease");
-$SET_HOOK_PARAM(6,"");
-$RETURN 1;
]]>
      </script>
      <script name="DoesSpellAttackSucceed">
        <![CDATA[$IF ($SA_SPELL_GET("DamageMagical") == "disease" || $SA_SPELL_GET("DamageNonMagical") == "disease"){$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsPaladinProtectedFromEvil</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM(7,"Protected From Evil");
-$SET_HOOK_PARAM(6,"");
-$RETURN 1;
]]>
      </script>
      <script name="DoesAttackSucceed">
        <![CDATA[$IF ($GET_COMBATANT_SA($TargetContext(),"IsPaladinProtectedFromEvil") != "-?-?-")
-	{
-		$IF ($GET_COMBATANT_SA($AttackerContext(),"Summoned") != "-?-?-")
- 			{$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) +# 90);};
-		$IF ($AlignmentEvil($AttackerContext()))
-			{$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) +# 2);};
-	};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)){$RETURN "Y";}
-$ELSE {$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsParalyzed</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7,"Paralyzed");
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
]]>
      </script>
      <script name="DoesAttackSucceed">
        <![CDATA[$IF ($GET_COMBATANT_SA($TargetContext(),"IsParalyzed") != "-?-?-")
-  {$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) -# 30);};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)){$RETURN "Y";}
-$ELSE {$RETURN "N";};
]]>
      </script>
      <script name="GetItemTargetHitBonus">
        <![CDATA[$RETURN $GET_CHAR_HITPOINTS($IndexOf($TargetContext())) +# 1;
]]>
      </script>
      <script name="IsCombatReady">
        <![CDATA[$RETURN "N";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsPeriaptImmuneDisease</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM(7,"Immune to Disease");
-$SET_HOOK_PARAM(6,"");
-$RETURN 1;
]]>
      </script>
      <script name="DoesSpellAttackSucceed">
        <![CDATA[$VAR spell;
-$VAR periapt;
-spell = $SA_SPELL_GET("DamageMagical");
-periapt = $GET_COMBATANT_SA($TargetContext(), "IsPeriaptImmuneDisease");
-$IF (spell == "electricity") {$IF (periapt == "immune") {$RETURN "N"; };};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsPerson</name>
    ><asl>
      <script name="idk">
        <![CDATA[Parameters = "brownies, dryads, dwarves, elves, gnolls, gnomes, goblins, half-elves, halflings, half-orcs, hobgoblins, humans, kobolds, lizard men, nixies, orcs, pixies, sprites, troglodytes";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsPetrified</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7,"Petrified");
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
]]>
      </script>
      <script name="IsCombatReady">
        <![CDATA[$RETURN "N";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsPlant</name>
    ><asl>
      <script name="idk">
        <![CDATA[\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsPoisoned</name>
    <asl>
      <script name="BeginResting">
        <![CDATA[$RETURN "1";
]]>
      </script>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7,"Poisoned");
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsPraying</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7,"Praying");
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsProtectedAcidCaster</name>
    <asl>
      <script name="CanCastSpells">
        $IF ($GET_PARTY_TIME() ><![CDATA[# $SA_PARAM_GET())
-	{
-		$DELETE_CHARACTER_SA($CharacterContext(),"AcidPoints");
-		$DELETE_COMBATANT_SA($CharacterContext(),"IsProtectedAcidCaster1");
-		$RETURN $SA_REMOVE();
-	};
]]>
      </script>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Protected from Acid");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="DoesSpellAttackSucceed">
        <![CDATA[$IF ($SA_SPELL_GET("DamageNonMagical") == "acid")
-	{
-		$SET_HOOK_PARAM(5,$GET_CHAR_NAME($IndexOf($TargetContext())) +" is unaffected.");
-		$RETURN "N";
-	};
]]>
      </script>
      <script name="spawn">
        <![CDATA[$SET_COMBATANT_SA($Myself(),"IsProtectedAcidCaster1",1);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsProtectedAcidCaster1</name>
    <asl>
      <script name="ComputeSpellDamage">
        <![CDATA[$VAR points;
-$VAR adj;
-$IF ($SA_SPELL_GET("DamageMagical") == "acid")
-	{
-		adj = $GET_HOOK_PARAM(0);
-		$IF (adj == "") {adj = $GET_HOOK_PARAM(5);};
-		points = $GET_CHARACTER_SA($TargetContext(),"AcidPoints");
-		$IF (0 -# points <# adj)
-			{
-				$SET_CHARACTER_SA($TargetContext(),"AcidPoints",points +# adj);
-				$SET_HOOK_PARAM(5,0);
-			}
-		$ELSE
-			{
-				$DELETE_CHARACTER_SA($TargetContext(),"AcidPoints");
-				$DELETE_CHARACTER_SA($TargetContext(),"IsProtectedAcidCaster");
-				$SA_REMOVE();
-				$SET_HOOK_PARAM(5,(adj +# points));
-			};
-	};
-$RETURN $GET_HOOK_PARAM(5);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsProtectedAcidTarget</name>
    <asl>
      <script name="CanCastSpells">
        $IF ($GET_PARTY_TIME() ><![CDATA[# $SA_PARAM_GET())
-	{
-		$DELETE_COMBATANT_SA($CharacterContext(),"IsProtectedAcidTarget1");
-		$SA_REMOVE();
-		$SkillAdj($TargetContext(),"Save Vs BR","protectionAcid","D","");
-		$SkillAdj($TargetContext(),"Save Vs RSW","protectionAcid","D","");
-		$SkillAdj($TargetContext(),"Save Vs SP","protectionAcid","D","");
-	};
]]>
      </script>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Protected from Acid");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
-$SkillAdj($TargetContext(),"Save Vs BR","protectionAcid","D","");
-$SkillAdj($TargetContext(),"Save Vs RSW","protectionAcid","D","");
-$SkillAdj($TargetContext(),"Save Vs SP","protectionAcid","D","");
]]>
      </script>
      <script name="DoesSpellAttackSucceed">
        <![CDATA[$IF ($SA_SPELL_GET("DamageNonMagical") == "acid")
-	{
-		$SET_HOOK_PARAM(5,$GET_CHAR_NAME($IndexOf($TargetContext())) +" is unaffected.");
-		$RETURN "N";
-	};
]]>
      </script>
      <script name="spawn">
        <![CDATA[$SET_COMBATANT_SA($Myself(),"IsProtectedAcidTarget1",1);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsProtectedAcidTarget1</name>
    <asl>
      <script name="ComputeSpellDamage">
        <![CDATA[$VAR adj;
-adj = $GET_HOOK_PARAM(0);
-$IF (adj == ""){adj = $GET_HOOK_PARAM(5);};
-$IF ($SA_SPELL_GET("DamageMagical") == "acid"){$SET_HOOK_PARAM(5,(adj -# 1) /# 2);};
-$RETURN $GET_HOOK_PARAM(5);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsProtectedEvil</name>
    <asl>
      <script name="CharDisplayStatus">
        $IF ($GET_PARTY_TIME() ><![CDATA[# $SA_PARAM_GET())
-  {$RETURN $SA_REMOVE();};
-$IF ($GET_HOOK_PARAM(5) == "DISPLAY")
-	{
-		$SET_HOOK_PARAM( 7,"Protected from Evil");
-		$SET_HOOK_PARAM( 6,"");
-	};
-$RETURN 1;
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
-$SkillAdj($TargetContext(),"Save Vs BR","protectedEvil","D","");
-$SkillAdj($TargetContext(),"Save Vs PP","protectedEvil","D","");
-$SkillAdj($TargetContext(),"Save Vs PPDM","protectedEvil","D","");
-$SkillAdj($TargetContext(),"Save Vs RSW","protectedEvil","D","");
-$SkillAdj($TargetContext(),"Save Vs SP","protectedEvil","D","");
]]>
      </script>
      <script name="DoesAttackSucceed">
        <![CDATA[$IF ($GET_COMBATANT_SA($TargetContext(),"IsProtectedEvil") != "-?-?-")
-	{
-		$IF ($GET_COMBATANT_SA($AttackerContext(),"Summoned") != "-?-?-")
-			{$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) +# 90);};
-		$IF ($AlignmentEvil($AttackerContext()))
-			{$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) +# 2);};
-	};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6))
-  {$RETURN "Y";}
-$ELSE {$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsProtectedFireCaster</name>
    <asl>
      <script name="CanCastSpells">
        $IF ($GET_PARTY_TIME() ><![CDATA[# $SA_PARAM_GET())
-	{
-		$DELETE_CHARACTER_SA($CharacterContext(),"FirePoints");
-		$DELETE_COMBATANT_SA($CharacterContext(),"IsProtectedFireCaster1");
-		$RETURN $SA_REMOVE();
-	};
]]>
      </script>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Protected from Fire");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="DoesSpellAttackSucceed">
        <![CDATA[$IF ($SA_SPELL_GET("DamageNonMagical") == "fire")
-	{
-		$SET_HOOK_PARAM(5,$GET_CHAR_NAME($IndexOf($TargetContext())) +" is unaffected.");
-		$RETURN "N";
-	};
]]>
      </script>
      <script name="spawn">
        <![CDATA[$SET_COMBATANT_SA($Myself(),"IsProtectedFireCaster1",1);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsProtectedFireCaster1</name>
    <asl>
      <script name="ComputeSpellDamage">
        <![CDATA[$VAR points;
-$VAR adj;
-$IF ($SA_SPELL_GET("DamageMagical") == "fire")
-	{
-		adj = $GET_HOOK_PARAM(0);
-		$IF (adj == "") {adj = $GET_HOOK_PARAM(5);};
-		points = $GET_CHARACTER_SA($TargetContext(),"FirePoints");
-		$IF (0 -# points <# adj)
-			{
-				$SET_CHARACTER_SA($TargetContext(),"FirePoints",points +# adj);
-				$SET_HOOK_PARAM(5,0);
-			}
-		$ELSE
-			{
-				$DELETE_CHARACTER_SA($TargetContext(),"FirePoints");
-				$DELETE_CHARACTER_SA($TargetContext(),"IsProtectedFireCaster");
-				$SA_REMOVE();
-				$SET_HOOK_PARAM(5,(adj +# points));
-			};
-	};
-$RETURN $GET_HOOK_PARAM(5);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsProtectedFireTarget</name>
    <asl>
      <script name="CanCastSpells">
        $IF ($GET_PARTY_TIME() ><![CDATA[# $SA_PARAM_GET())
-	{
-		$DELETE_COMBATANT_SA($CharacterContext(),"IsProtectedFireTarget1");
-		$SA_REMOVE();
-		$SkillAdj($TargetContext(),"Save Vs BR","protectedFire","D","");
-		$SkillAdj($TargetContext(),"Save Vs RSW","protectedFire","D","");
-		$SkillAdj($TargetContext(),"Save Vs SP","protectedFire","D","");
-	};
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
-$SkillAdj($TargetContext(),"Save Vs BR","protectedFire","D","");
-$SkillAdj($TargetContext(),"Save Vs RSW","protectedFire","D","");
-$SkillAdj($TargetContext(),"Save Vs SP","protectedFire","D","");
]]>
      </script>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Protected from Fire");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="DoesSpellAttackSucceed">
        <![CDATA[$IF ($SA_SPELL_GET("DamageNonMagical") == "fire")
-	{
-		$SET_HOOK_PARAM(5,$GET_CHAR_NAME($IndexOf($TargetContext())) +" is unaffected.");
-		$RETURN "N";
-	};
]]>
      </script>
      <script name="spawn">
        <![CDATA[$SET_COMBATANT_SA($Myself(),"IsProtectedFireTarget1",1);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsProtectedFireTarget1</name>
    <asl>
      <script name="ComputeSpellDamage">
        <![CDATA[$VAR adj;
-adj = $GET_HOOK_PARAM(0);
-$IF (adj == ""){adj = $GET_HOOK_PARAM(5);};
-$IF ($SA_SPELL_GET("DamageMagical") == "fire"){$SET_HOOK_PARAM(5,(adj -# 1) /# 2);};
-$RETURN $GET_HOOK_PARAM(5);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsProtectedGood</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
-$SkillAdj($TargetContext(),"Save Vs BR","protectedGood","D","");
-$SkillAdj($TargetContext(),"Save Vs PP","protectedGood","D","");
-$SkillAdj($TargetContext(),"Save Vs PPDM","protectedGood","D","");
-$SkillAdj($TargetContext(),"Save Vs RSW","protectedGood","","");
-$SkillAdj($TargetContext(),"Save Vs SP","protectedGood","D","");
]]>
      </script>
      <script name="CharDisplayStatus">
        $IF ($GET_PARTY_TIME() ><![CDATA[# $SA_PARAM_GET()){$RETURN $SA_REMOVE();};
-$IF ($GET_HOOK_PARAM(5) == "DISPLAY")
-  {
-    $SET_HOOK_PARAM( 7,"Protected from Good");
-    $SET_HOOK_PARAM( 6,"");
-  };
-$RETURN 1;
]]>
      </script>
      <script name="DoesAttackSucceed">
        <![CDATA[$IF ($GET_COMBATANT_SA($TargetContext(),"IsProtectedGood") != "-?-?-")
-	{
-		$IF ($GET_COMBATANT_SA($AttackerContext(),"Summoned") != "-?-?-")
-			{$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) +# 90);};
-		$IF ($AlignmentGood($AttackerContext()))
-			{$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) +# 2);};
-	};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)){$RETURN "Y";}
-$ELSE {$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsProtectedLightningCaster</name>
    <asl>
      <script name="CanCastSpells">
        $IF ($GET_PARTY_TIME() ><![CDATA[# $SA_PARAM_GET())
-	{
-		$DELETE_CHARACTER_SA($CharacterContext(),"ZapPoints");
-		$DELETE_COMBATANT_SA($CharacterContext(),"IsProtectedLightningCaster1");
-		$RETURN $SA_REMOVE();
-	};
]]>
      </script>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Protected from Lightning");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="DoesSpellAttackSucceed">
        <![CDATA[$VAR tgt; // target
-tgt = $IndexOf($TargetContext());
-$IF ($SA_SPELL_GET("DamageNonMagical") == "electricity")
-	{
-		$SET_HOOK_PARAM(5,$GET_CHAR_NAME(tgt) +" is unaffected.");
-		$RETURN "N";
-	};
]]>
      </script>
      <script name="spawn">
        <![CDATA[$SET_COMBATANT_SA($Myself(),"IsProtectedLightningCaster1",1);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsProtectedLightningCaster1</name>
    <asl>
      <script name="ComputeSpellDamage">
        <![CDATA[$VAR points;
-$VAR adj;
-$IF ($SA_SPELL_GET("DamageMagical") == "electricity")
-	{
-		adj = $GET_HOOK_PARAM(0);
-		$IF (adj == "") {adj = $GET_HOOK_PARAM(5);};
-		points = $GET_CHARACTER_SA($TargetContext(),"ZapPoints");
-		$IF (0 -# points <# adj)
-			{
-				$SET_CHARACTER_SA($TargetContext(),"ZapPoints",points +# adj);
-				$SET_HOOK_PARAM(5,0);
-			}
-		$ELSE
-			{
-				$DELETE_CHARACTER_SA($TargetContext(),"ZapPoints");
-				$DELETE_CHARACTER_SA($TargetContext(),"IsProtectedLightningCaster");
-				$SA_REMOVE();
-				$SET_HOOK_PARAM(5,(adj +# points));
-			};
-	};
-$RETURN $GET_HOOK_PARAM(5);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsProtectedLightningTarget</name>
    <asl>
      <script name="CanCastSpells">
        $IF ($GET_PARTY_TIME() ><![CDATA[# $SA_PARAM_GET())
-	{
-		$DELETE_COMBATANT_SA($CharacterContext(),"IsProtectedLightningTarget1");
-		$SA_REMOVE();
-		$SkillAdj($TargetContext(),"Save Vs BR","protectedLightning","D","");
-		$SkillAdj($TargetContext(),"Save Vs RSW","protectedLightning","D","");
-		$SkillAdj($TargetContext(),"Save Vs SP","protectedLightning","D","");
-	};
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
-$SkillAdj($TargetContext(),"Save Vs BR","protectedLightning","D","");
-$SkillAdj($TargetContext(),"Save Vs RSW","protectedLightning","D","");
-$SkillAdj($TargetContext(),"Save Vs SP","protectedLightning","D","");
]]>
      </script>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Protected from Lightning");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="DoesSpellAttackSucceed">
        <![CDATA[$IF ($SA_SPELL_GET("DamageNonMagical") == "electricity")
-	{
-		$SET_HOOK_PARAM(5,$GET_CHAR_NAME($IndexOf($TargetContext())) +" is unaffected.");
-		$RETURN "N";
-	};
]]>
      </script>
      <script name="spawn">
        <![CDATA[$SET_COMBATANT_SA($Myself(),"IsProtectedLightningTarget1",1);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsProtectedLightningTarget1</name>
    <asl>
      <script name="ComputeSpellDamage">
        <![CDATA[$VAR adj;
-adj = $GET_HOOK_PARAM(0);
-$IF (adj == ""){adj = $GET_HOOK_PARAM(5);};
-$IF ($SA_SPELL_GET("DamageMagical") == "electricity"){$SET_HOOK_PARAM(5,(adj -# 1) /# 2);};
-$RETURN $GET_HOOK_PARAM(5);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsProtectedPoisonCaster</name>
    <asl>
      <script name="CanCastSpells">
        $IF ($GET_PARTY_TIME() ><![CDATA[# $SA_PARAM_GET())
-	{
-		$DELETE_CHARACTER_SA($CharacterContext(),"PoisonPoints");
-		$DELETE_COMBATANT_SA($CharacterContext(),"IsProtectedPoisonCaster1");
-		$RETURN $SA_REMOVE();
-	};
]]>
      </script>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Protected from Poison");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="DoesSpellAttackSucceed">
        <![CDATA[$IF ($SA_SPELL_GET("DamageNonMagical") == "poison")
-	{
-		$SET_HOOK_PARAM(5,$GET_CHAR_NAME($IndexOf($TargetContext())) +" is unaffected.");
-		$RETURN "N";
-	};
]]>
      </script>
      <script name="spawn">
        <![CDATA[$SET_COMBATANT_SA($Myself(),"IsProtectedPoisonCaster1",1);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsProtectedPoisonCaster1</name>
    <asl>
      <script name="ComputeSpellDamage">
        <![CDATA[$VAR points;
-$VAR adj;
-$IF ($SA_SPELL_GET("DamageMagical") == "poison")
-	{
-		adj = $GET_HOOK_PARAM(0);
-		$IF (adj == "") {adj = $GET_HOOK_PARAM(5);};
-		points = $GET_CHARACTER_SA($TargetContext(),"PoisonPoints");
-		$IF (0 -# points <# adj)
-			{
-				$SET_CHARACTER_SA($TargetContext(),"PoisonPoints",points +# adj);
-				$SET_HOOK_PARAM(5,0);
-			}
-		$ELSE
-			{
-				$DELETE_CHARACTER_SA($TargetContext(),"PoisonPoints");
-				$DELETE_CHARACTER_SA($TargetContext(),"IsProtectedPoisonCaster");
-				$SA_REMOVE();
-				$SET_HOOK_PARAM(5,(adj +# points));
-			};
-	};
-$RETURN $GET_HOOK_PARAM(5);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsProtectedPoisonTarget</name>
    <asl>
      <script name="CanCastSpells">
        $IF ($GET_PARTY_TIME() ><![CDATA[# $SA_PARAM_GET())
-	{
-		$DELETE_COMBATANT_SA($CharacterContext(),"IsProtectedPoisonTarget1");
-		$SA_REMOVE();
-	};
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
]]>
      </script>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Protected from Poison");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="DoesSpellAttackSucceed">
        <![CDATA[$VAR tgt; // target
-tgt = $IndexOf($TargetContext());
-$IF ($SA_SPELL_GET("DamageNonMagical") == "poison")
-	{
-		$SET_HOOK_PARAM(5,$GET_CHAR_NAME(tgt) +" is unaffected.");
-		$RETURN "N";
-	};
]]>
      </script>
      <script name="spawn">
        <![CDATA[$SET_COMBATANT_SA($Myself(),"IsProtectedPoisonTarget1",1);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsProtectedPoisonTarget1</name>
    <asl>
      <script name="ComputeSpellDamage">
        <![CDATA[$VAR adj;
-adj = $GET_HOOK_PARAM(0);
-$IF (adj == ""){adj = $GET_HOOK_PARAM(5);};
-$IF ($SA_SPELL_GET("DamageMagical") == "poison"){$SET_HOOK_PARAM(5,(adj -# 1) /# 2);};
-$RETURN $GET_HOOK_PARAM(5);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsReduced</name>
    <asl>
      <script name="CanCastSpells">
        <![CDATA[$VAR me;
-me = $IndexOf($CharacterContext());
-$IF ($GET_PARTY_TIME() ># $GET_CHARACTER_SA($CharacterContext(),"reduced"))
-	{
-		$DELETE_CHARACTER_SA($CharacterContext(),"reduced");
-		$SET_CHAR_SIZE(me,$GET_CHARACTER_SA($CharacterContext(),"mySize"));
-		$RUN_CHAR_SE_SCRIPTS($CharacterContext(),"Dispel SE");
-		$SA_REMOVE();
-	};
]]>
      </script>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Reduced");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$VAR me;
-me = $IndexOf($CharacterContext());
-$DELETE_CHARACTER_SA($CharacterContext(),"reduced");
-$REMOVE_CHAR_MODIFICATION(me,"SPELL Reduce *");
-$SET_CHAR_SIZE(me,$GET_CHARACTER_SA($CharacterContext(),"mySize"));
-$RUN_CHAR_SE_SCRIPTS($CharacterContext(),"Dispel SE");
-$SA_REMOVE();
]]>
      </script>
      <script name="Dispel reduced">
        <![CDATA[$VAR me;
-me = $IndexOf($CharacterContext());
-$DELETE_CHARACTER_SA($CharacterContext(),"reduced");
-$REMOVE_CHAR_MODIFICATION(me,"SPELL Reduce *");
-$SET_CHAR_SIZE(me,$GET_CHARACTER_SA($CharacterContext(),"mySize"));
-$RUN_CHAR_SE_SCRIPTS($CharacterContext(),"Dispel SE");
-$SA_REMOVE();
]]>
      </script>
      <script name="GetAdjMaxMovement">
        <![CDATA[$RETURN $GET_HOOK_PARAM(5) /# 2;
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsReflecting</name>
    <asl>
      <script name="RedirectSpell">
        <![CDATA[$VAR atk; // attacker/caster
-$VAR tgt; // target
-$VAR cName; // caster's name
-$VAR tName; // target's name
-$VAR list; // list of gaze type
-$VAR num; // number of gaze type
-$VAR reflect; // gaze being reflected
-atk = $IndexOf($AttackerContext());
-tgt = $IndexOf($TargetContext());
-cName = $GET_CHAR_NAME (atk);
-tName = $GET_CHAR_NAME (tgt);
-list = "$its gaze|monsterCharmGaze$its gaze|monsterConfusionGaze$its gaze|monsterPetrifyGaze";
-num = $DelimitedStringCount(list);
-$WHILE (num ># 0)
-	{
-		num = num -# 1;
-		reflect = $DelimitedStringSubstring(list,num);
-		$IF ($SpellContext() == reflect)
-			{
-				$SET_HOOK_PARAM(5,$IndexOf($AttackerContext()));
-				$SET_HOOK_PARAM(6, tName + " reflects " + reflect  + " back at " + cName);
-			};
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsResistantAcid</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Acid Resistant");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="ComputeDamage">
        <![CDATA[$VAR item; $VAR itmNon; $VAR monster; $VAR monNon; $VAR resist; $VAR par5;
-item = $SA_ITEM_GET("DamageMagical");
-itmNon = $SA_ITEM_GET("DamageNonMagical");
-monster = $SA_MONSTERTYPE_GET("DamageMagical");
-monNon = $SA_MONSTERTYPE_GET("DamageNonMagical");
-$IF ((item == "-?-?-") && (itmNon == "-?-?-") && (monster == "-?-?-") && (monNon == "-?-?-")) {$RETURN;};
-$IF (item != "-?-?-") {resist = item;};
-$IF (itmNon != "-?-?-") {resist = itmNon;};
-$IF (monster != "-?-?-") {resist = monster;};
-$IF (monNon != "-?-?-") {resist = monNon;};
-par5 = $GET_HOOK_PARAM(5);
-$IF (resist == "acid") {$RETURN par5 /# 2;};
]]>
      </script>
      <script name="ComputeSpellDamage">
        <![CDATA[$VAR spell; $VAR splNon; $VAR resist; $VAR par5;
-spell = $SA_SPELL_GET("DamageMagical");
-splNon = $SA_SPELL_GET("DamageNonMagical");
-$IF ((spell == "-?-?-") && (splNon == "-?-?-")){$RETURN;};
-$IF (spell != "-?-?-") {resist = spell;};
-$IF (splNon != "-?-?-") {resist = splNon;};
-par5 = $GET_HOOK_PARAM(5);
-$IF (resist == "acid") {$RETURN par5 /# 2;};
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsResistantCold</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Cold Resistant");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="ComputeDamage">
        <![CDATA[$VAR item; $VAR itmNon; $VAR monster; $VAR monNon; $VAR resist; $VAR par5;
-item = $SA_ITEM_GET("DamageMagical");
-itmNon = $SA_ITEM_GET("DamageNonMagical");
-monster = $SA_MONSTERTYPE_GET("DamageMagical");
-monNon = $SA_MONSTERTYPE_GET("DamageNonMagical");
-$IF ((item == "-?-?-") && (itmNon == "-?-?-") && (monster == "-?-?-") && (monNon == "-?-?-")) {$RETURN;};
-$IF (item != "-?-?-") {resist = item;};
-$IF (itmNon != "-?-?-") {resist = itmNon;};
-$IF (monster != "-?-?-") {resist = monster;};
-$IF (monNon != "-?-?-") {resist = monNon;};
-par5 = $GET_HOOK_PARAM(5);
-$IF (resist == "cold") {$RETURN par5 /# 2;};
]]>
      </script>
      <script name="ComputeSpellDamage">
        <![CDATA[$VAR spell; $VAR splNon; $VAR resist; $VAR par5;
-spell = $SA_SPELL_GET("DamageMagical");
-splNon = $SA_SPELL_GET("DamageNonMagical");
-$IF ((spell == "-?-?-") && (splNon == "-?-?-")){$RETURN;};
-$IF (spell != "-?-?-") {resist = spell;};
-$IF (splNon != "-?-?-") {resist = splNon;};
-par5 = $GET_HOOK_PARAM(5);
-$IF (resist == "cold") {$RETURN par5 /# 2;};
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsResistantElectricity</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Electricity Resistant");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="ComputeDamage">
        <![CDATA[$VAR item; $VAR itmNon; $VAR monster; $VAR monNon; $VAR resist; $VAR par5;
-item = $SA_ITEM_GET("DamageMagical");
-itmNon = $SA_ITEM_GET("DamageNonMagical");
-monster = $SA_MONSTERTYPE_GET("DamageMagical");
-monNon = $SA_MONSTERTYPE_GET("DamageNonMagical");
-$IF ((item == "-?-?-") && (itmNon == "-?-?-") && (monster == "-?-?-") && (monNon == "-?-?-")) {$RETURN;};
-$IF (item != "-?-?-") {resist = item;};
-$IF (itmNon != "-?-?-") {resist = itmNon;};
-$IF (monster != "-?-?-") {resist = monster;};
-$IF (monNon != "-?-?-") {resist = monNon;};
-par5 = $GET_HOOK_PARAM(5);
-$IF (resist == "electricity") {$RETURN par5 /# 2;};
]]>
      </script>
      <script name="ComputeSpellDamage">
        <![CDATA[$VAR spell; $VAR splNon; $VAR resist; $VAR par5;
-spell = $SA_SPELL_GET("DamageMagical");
-splNon = $SA_SPELL_GET("DamageNonMagical");
-$IF ((spell == "-?-?-") && (splNon == "-?-?-")){$RETURN;};
-$IF (spell != "-?-?-") {resist = spell;};
-$IF (splNon != "-?-?-") {resist = splNon;};
-par5 = $GET_HOOK_PARAM(5);
-$IF (resist == "electricity") {$RETURN par5 /# 2;};
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsResistantFire</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Fire Resistant");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="ComputeDamage">
        <![CDATA[$VAR item; $VAR itmNon; $VAR monster; $VAR monNon; $VAR resist; $VAR par5;
-item = $SA_ITEM_GET("DamageMagical");
-itmNon = $SA_ITEM_GET("DamageNonMagical");
-monster = $SA_MONSTERTYPE_GET("DamageMagical");
-monNon = $SA_MONSTERTYPE_GET("DamageNonMagical");
-$IF ((item == "-?-?-") && (itmNon == "-?-?-") && (monster == "-?-?-") && (monNon == "-?-?-")) {$RETURN;};
-$IF (item != "-?-?-") {resist = item;};
-$IF (itmNon != "-?-?-") {resist = itmNon;};
-$IF (monster != "-?-?-") {resist = monster;};
-$IF (monNon != "-?-?-") {resist = monNon;};
-par5 = $GET_HOOK_PARAM(5);
-$IF (resist == "fire") {$RETURN par5 /# 2;};
]]>
      </script>
      <script name="ComputeSpellDamage">
        <![CDATA[$VAR spell; $VAR splNon; $VAR resist; $VAR par5;
-spell = $SA_SPELL_GET("DamageMagical");
-splNon = $SA_SPELL_GET("DamageNonMagical");
-$IF ((spell == "-?-?-") && (splNon == "-?-?-")){$RETURN;};
-$IF (spell != "-?-?-") {resist = spell;};
-$IF (splNon != "-?-?-") {resist = splNon;};
-par5 = $GET_HOOK_PARAM(5);
-$IF (resist == "fire") {$RETURN par5 /# 2;};
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsRingWizardry</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Wearing Wizard Ring");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsShielded</name>
    <asl>
      <script name="CharDisplayStatus">
        $IF ($GET_PARTY_TIME() ><![CDATA[# $SA_PARAM_GET()){$SA_REMOVE();};
-$IF ($GET_HOOK_PARAM(5) == "DISPLAY")
-	{
-		$SET_HOOK_PARAM( 7,"Shield");
-		$SET_HOOK_PARAM( 6,"1");
-	};
-$RETURN 1;
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
]]>
      </script>
      <script name="DoesAttackSucceed">
        <![CDATA[$VAR atk; // attacker/caster
-$VAR tgt; // target
-$VAR par5; // Hook parameter 5
-$IF ($GET_COMBATANT_SA($TargetContext(),"IsShielded") == "-?-?-"){$RETURN;};
-atk = $IndexOf($AttackerContext());
-tgt = $IndexOf($TargetContext());
-par5 = $GET_HOOK_PARAM(5);
-$IF ($SA_ITEM_GET("item_HurledWeapon") != "-?-?-" && $VisualDistance(atk,tgt) ># 1)
-	{$SET_HOOK_PARAM(5,par5 -# 8);}
-$ELSE
-	{
-		$IF ($SA_ITEM_GET("item_MissileWeapon") != "-?-?-"){$SET_HOOK_PARAM(5,$GET_HOOK_PARAM(5) -# 7);}
-		$ELSE {$SET_HOOK_PARAM(5,par5 -# 6);};
-	};
-$IF ($GET_HOOK_PARAM(5) <# $GET_HOOK_PARAM(6)){$RETURN "N";};
]]>
      </script>
      <script name="DoesSpellAttackSucceed">
        <![CDATA[$IF ($SA_SOURCE_NAME() == ("Magic Missile" || "Magic Missile|Ranger")){$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsSilenced</name>
    <asl>
      <script name="CanCastSpells">
        <![CDATA[$VAR exp; // expiration time
-exp = $SA_PARAM_GET();
-$IF ($GET_PARTY_TIME() >=# exp){$SA_REMOVE();};
-$RETURN "N";
]]>
      </script>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7,"Silenced");
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsSleepResistant</name>
    ><asl>
      <script name="idk">
        <![CDATA[\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsSleepResistantMin</name>
    ><asl>
      <script name="idk">
        <![CDATA[\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsSleeping</name>
    <asl>
      <script name="CanCastSpells">
        <![CDATA[$RETURN "N";
]]>
      </script>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7,$SA_PARAM_GET());
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
]]>
      </script>
      <script name="DoesAttackSucceed">
        <![CDATA[$RETURN "Y";
]]>
      </script>
      <script name="GetAdjMaxMovement">
        <![CDATA[$RETURN 0;
]]>
      </script>
      <script name="GetItemTargetHitBonus">
        <![CDATA[$RETURN $GET_CHAR_HITPOINTS($IndexOf($TargetContext())) +# 15;
]]>
      </script>
      <script name="IsCombatReady">
        <![CDATA[$RETURN "N";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsSlow</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
]]>
      </script>
      <script name="GetAdjMaxMovement">
        <![CDATA[$VAR expiration;
-expiration = $SA_PARAM_GET();
-$IF ($GET_PARTY_TIME() >=# expiration){$SA_REMOVE();};
-$RETURN $GET_HOOK_PARAM(5) /# 2;
]]>
      </script>
      <script name="GetNumberOfAttacks">
        <![CDATA[$VAR attackNum;
-attackNum = $GET_HOOK_PARAM(5);
-$IF ((attackNum %# 2) ==# 0){$RETURN attackNum /# 2;}
-$ELSE
-	{
-		$IF (($GetCombatRound() %# 2) ==# 0){$RETURN (attackNum +# 1) /# 2;}
-		$ELSE{$RETURN (attackNum -# 1) /# 2;};
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsSlowedPoison</name>
    <asl>
      <script name="CanCastSpells">
        <![CDATA[$VAR exp; // expiratoin time
-$VAR time;
-$VAR chr; // character
-$VAR hp;
-exp = $SA_PARAM_GET();
-time = $GET_PARTY_TIME();
-chr = $IndexOf($CharacterContext());
-hp = $GET_CHAR_HITPOINTS(chr);
-$IF (time ># exp)
-	{
-		$SA_REMOVE();
-		$SET_CHAR_STATUS(chr,2);
-		$SET_CHAR_HITPOINTS(chr,-11);
-		$RETURN;
-	};
-$SET_CHAR_STATUS(chr,1);
-$IF  (hp <# 1){$SET_CHAR_HITPOINTS(chr,1);};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsSnake</name>
    ><asl>
      <script name="idk">
        <![CDATA[\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsSnakeCharmed</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7,"Charmed");
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
]]>
      </script>
      <script name="GetAdjMaxMovement">
        <![CDATA[$RETURN "0";
]]>
      </script>
      <script name="GetItemTargetHitBonus">
        <![CDATA[$RETURN $GET_CHAR_HITPOINTS($IndexOf($TargetContext())) +# 15;
]]>
      </script>
      <script name="IsCombatReady">
        <![CDATA[$VAR exp;
-exp = $SA_PARAM_GET();
-$IF ($GET_PARTY_TIME() >=# exp){$SA_REMOVE();};
-$RETURN "N";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsStinkingCloudy</name>
    <asl>
      <script name="CanCastSpells">
        <![CDATA[$RUN_AREA_SE_SCRIPTS("StinkAdjust", $IndexOf($CharacterContext()));
-$RETURN $GET_HOOK_PARAM(6);
]]>
      </script>
      <script name="CharDisplayStatus">
        <![CDATA[$RUN_AREA_SE_SCRIPTS("StinkingCloudy", $IndexOf($CharacterContext()));
-$SET_HOOK_PARAM( 7, $GET_HOOK_PARAM(8));
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsStinkingStuck</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$RUN_AREA_SE_SCRIPTS("StinkingStuck", $IndexOf($CharacterContext()));
-$SET_HOOK_PARAM( 7, $GET_HOOK_PARAM(8));
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
]]>
      </script>
      <script name="ComputeDamage">
        <![CDATA[$IF ($GET_COMBATANT_SA($TargetContext(),"IsStinkingStuck") != "-?-?-")
-  {$RETURN $GET_CHAR_HITPOINTS($IndexOf($TargetContext()));};
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
]]>
      </script>
      <script name="DoesAttackSucceed">
        <![CDATA[$IF ($GET_COMBATANT_SA($TargetContext(),"IsStinkingStuck") != "-?-?-")
-  {$RETURN "Y";};
]]>
      </script>
      <script name="IsCombatReady">
        <![CDATA[$RUN_AREA_SE_SCRIPTS("StinkAdjust", $IndexOf($CharacterContext()));
-$RETURN $GET_HOOK_PARAM(6);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsStunned</name>
    <asl>
      <script name="CanCastSpells">
        <![CDATA[$RETURN "N";
]]>
      </script>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7,"Stunned");
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
]]>
      </script>
      <script name="GetAdjMaxMovement">
        <![CDATA[$VAR exp; // expiration time
-$VAR rnd; // round
-exp = $SA_PARAM_GET();
-rnd = $GetCombatRound();
-$IF (rnd >=# exp){$SA_REMOVE();$RETURN;};
-$RETURN "0";
]]>
      </script>
      <script name="IsCombatReady">
        <![CDATA[$VAR exp; // expiration time
-$VAR rnd; // round
-exp = $SA_PARAM_GET();
-rnd = $GetCombatRound();
-$IF (rnd >=# exp){$SA_REMOVE();$RETURN;};
-$RETURN "N";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsSweeping</name>
    <asl>
      <script name="CombatSpecialAction">
        <![CDATA[$VAR damage;
-$VAR distance;
-$VAR atk; // attacker
-$VAR tgt; // target
-atk = $IndexOf($AttackerContext());
-tgt = $IndexOf($TargetContext());
-$IF ($GET_COMBATANT_SA($AttackerContext(),"IsInvisible") != "-?-?-")
-	{
-		$DELETE_COMBATANT_SA($AttackerContext(),"IsInvisibleSpell");
-		$DELETE_COMBATANT_SA($AttackerContext(),"IsInvisible");
-	};
-$IF (tgt ==# -#2){$SET_HOOK_PARAM(5,"Sweeps");$RETURN;}; // first call
-$IF (tgt ==# -#1){$SET_HOOK_PARAM(5,"Sweeps");$RETURN;}; // last call
-distance = $VisualDistance(atk, tgt);
-damage = $ComputeAttackDamage(atk, tgt);
-$IF(distance ># 1) {$RETURN;};
-$IF ($GET_MONSTERTYPE_SA($GET_CHAR_NAME(tgt),"monster_Swept") != "-?-?-" && $GET_COMBATANT_SA($TargetContext(),"side") != 1)
-	{
-		$SET_CHAR_HITPOINTS(tgt, $GET_CHAR_HITPOINTS(tgt) -# damage);
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>IsStuckInMud</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7,"Stuck in Mud");
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
]]>
      </script>
      <script name="ComputeDamage">
        <![CDATA[$RETURN $GET_CHAR_HITPOINTS($IndexOf($TargetContext())) +# 1;
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
]]>
      </script>
      <script name="GetAdjMaxMovement">
        <![CDATA[$RETURN "0";
]]>
      </script>
      <script name="IsCombatReady">
        <![CDATA[$RETURN "N";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>itemSlot_Fingers</name>
    <asl>
      <script name="CanReady">
        <![CDATA[$IF ($GET_HOOK_PARAM( 5 ) <# 2){$RETURN "Y";}
-$ELSE {$SET_HOOK_PARAM(6, "Sorry, you can't do that.");$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>itemSlot_Pack</name>
    <asl>
      <script name="CanReady">
        <![CDATA[$RETURN "Y";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_Antidote</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR tgt;
-tgt = $IndexOf($TargetContext());
-$IF ($GET_CHARACTER_SA($TargetContext(), "IsPoisoned") == "-?-?-"){$RETURN;};
-$DELETE_CHARACTER_SA($TargetContext(),"IsPoisoned");
-$IF ($GET_CHAR_HITPOINTS(tgt) <=# 0)
-	{
-		$SET_CHAR_HITPOINTS(tgt, "1");
-		$SET_CHAR_STATUS(tgt, "0");
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_BootsOfSpeed</name>
    <asl>
      <script name="OnReady">
        <![CDATA[$SET_CHARACTER_SA($CharacterContext(),"IsFastBoots","1");
]]>
      </script>
      <script name="OnUnReady">
        <![CDATA[$DELETE_CHARACTER_SA($CharacterContext(),"IsFastBoots");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_CloakOfDisplacement</name>
    <asl>
      <script name="OnReady">
        <![CDATA[$SET_CHARACTER_SA($CharacterContext(),"IsCloakDisplaced",1);
-$SkillAdj($CharacterContext(),"Save Vs BR","cloak","-","2");
-$SkillAdj($CharacterContext(),"Save Vs PP","cloak","-","2");
-$SkillAdj($CharacterContext(),"Save Vs PPDM","cloak","-","2");
-$SkillAdj($CharacterContext(),"Save Vs RSW","cloak","-","2");
-$SkillAdj($CharacterContext(),"Save Vs SP","cloak","-","2");
]]>
      </script>
      <script name="OnUnReady">
        <![CDATA[$DELETE_CHARACTER_SA($CharacterContext(),"IsCloakDisplaced");
-$SkillAdj($CharacterContext(),"Save Vs BR","cloak","D","");
-$SkillAdj($CharacterContext(),"Save Vs PP","cloak","D","");
-$SkillAdj($CharacterContext(),"Save Vs PPDM","cloak","D","");
-$SkillAdj($CharacterContext(),"Save Vs RSW","cloak","D","");
-$SkillAdj($CharacterContext(),"Save Vs SP","cloak","D","");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_CombatAim</name>
    <asl>
      <script name="CanAim">
        <![CDATA[$VAR p5;
-$IF ($GET_HOOK_PARAM(6))
-	{
-		p5 = $GET_HOOK_PARAM(5);
-		$IF(p5 == "Bow" || p5 ==  "Crossbow" || p5 ==  "Sling (no ammo needed)"){$RETURN "N";};
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_DrowEquipment</name>
    <asl>
      <script name="item_DrowEquipment">
        <![CDATA[$TAKE_CHAR_ITEM($CharacterContext(), $ItemContext());
-$RETURN "2";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_FineLongBow</name>
    <asl>
      <script name="DoesAttackSucceed">
        <![CDATA[$VAR par6;
-$VAR param;
-par6 = $GET_HOOK_PARAM(6);
-param = $SA_PARAM_GET();
-$SET_HOOK_PARAM(6, par6 -# param);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_GAuntletsDexterity</name>
    <asl>
      <script name="OnReady">
        <![CDATA[$VAR tgt; $VAR dex; $VAR num;
-tgt = $IndexOf($CharacterContext());
-dex = $GET_CHAR_LIMITED_DEX(tgt);
-$IF (dex >=# 1) {num = 4;};
-$IF (dex >=# 7) {num = 2;};
-$IF (dex >=# 14) {num = 1;};
-$MODIFY_CHAR_ATTRIBUTE(tgt,"DEX",num, "MINUTES", 999999999, "gauntlets","ITEM Gauntlets Dexterity");
-$IF ($SkillAdj($CharacterContext(),"PickPockets","","F","") ># 0)
-	{$SkillAdj($CharacterContext(),"PickPockets","ITEM Gauntlets Dexterity","%","110");}
-$ELSE {$SkillAdj($CharacterContext(),"PickPockets","ITEM Gauntlets Dexterity","+","45");};
]]>
      </script>
      <script name="OnUnReady">
        <![CDATA[$VAR tgt;
-tgt = $IndexOf($CharacterContext());
-$REMOVE_CHAR_MODIFICATION(tgt,"ITEM Gauntlets Dexterity");
-$SkillAdj($CharacterContext(),"PickPockets","ITEM Gauntlets Dexterity","D","");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_GauntletsOgrePower</name>
    <asl>
      <script name="OnReady">
        <![CDATA[$VAR tgt; // target
-$VAR str;
-$VAR strMod;
-tgt = $IndexOf($CharacterContext());
-str = $GET_CHAR_LIMITED_STR(tgt);
-strMod = $GET_CHAR_LIMITED_STRMOD(tgt);
-$MODIFY_CHAR_ATTRIBUTE(tgt,"STR",18 -# str, "MINUTES", 999999999, "Ogre Strength","ITEM Ogre Strength");
-$IF (strMod ># 0)
-	{
-		$MODIFY_CHAR_ATTRIBUTE(tgt,"STRMOD",100 -# strMod, "MINUTES", 999999999, "","ITEM Ogre Strength");
-	};
]]>
      </script>
      <script name="OnUnReady">
        <![CDATA[$VAR tgt; // target
-tgt = $IndexOf($CharacterContext());
-$REMOVE_CHAR_MODIFICATION(tgt,"ITEM Ogre Strength");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_GirdleGiantStrength</name>
    <asl>
      <script name="OnReady">
        <![CDATA[$VAR tgt; // target
-$VAR str;
-$VAR strMod;
-tgt = $IndexOf($CharacterContext());
-str = $GET_CHAR_LIMITED_STR(tgt);
-strMod = $GET_CHAR_LIMITED_STRMOD(tgt);
-$MODIFY_CHAR_ATTRIBUTE(tgt,"STR",$SA_PARAM_GET() -# str,"MINUTES",999999999,"Giant Strength","ITEM Giant Strength");
-$IF (strMod ># 0)
-	{
-		$MODIFY_CHAR_ATTRIBUTE(tgt,"STRMOD",100 -# strMod,"MINUTES",999999999,"","ITEM Giant Strength");
-	};
]]>
      </script>
      <script name="OnUnReady">
        <![CDATA[$VAR tgt; // target
-tgt = $IndexOf($Myself());
-$REMOVE_CHAR_MODIFICATION(tgt,"ITEM Giant Strength");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_HolyWater</name>
    ><asl>
      <script name="idk">
        <![CDATA[\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_HurledWeapon</name>
    <asl>
      <script name="ComputeDamage">
        <![CDATA[$VAR par0;
-$VAR par5;
-$VAR dmg;
-$VAR atk; // attacker
-$VAR tgt; // target
-par0 = $GET_HOOK_PARAM(0);
-par5 = $GET_HOOK_PARAM(5);
-dmg = par0;
-$IF (dmg == ""){dmg = par5;};
-atk = $IndexOf($AttackerContext());
-tgt = $IndexOf($TargetContext());
-$IF ($VisualDistance(atk,tgt) <# 2)
-  {
-    dmg = dmg +# $GET_CHAR_DAMAGEBONUS(atk);
-  };
-$RETURN dmg;
]]>
      </script>
      <script name="DoesAttackSucceed">
        <![CDATA[$VAR atk; // attacker
-$VAR par5; // Hook parameter 5
-$VAR par6; // Hook parameter 6
-$VAR bonus; // hit bonus
-atk = $IndexOf($AttackerContext());
-par5 = $GET_HOOK_PARAM(5);
-par6 = $GET_HOOK_PARAM(6);
-bonus = $GET_CHAR_HITBONUS(atk);
-$IF ($VisualDistance(atk,$IndexOf($TargetContext())) <# 2)
-  {$SET_HOOK_PARAM(6,par6 +# bonus);};
-$IF (par5 >=# par6){$RETURN "Y";}
-$ELSE {$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_LongSwordVsGiants</name>
    <asl>
      <script name="ComputeDamage">
        <![CDATA[$VAR tgt; // target
-$VAR par5; // Hook parameter 5
-$VAR name;
-tgt = $IndexOf($TargetContext());
-par5 = $GET_HOOK_PARAM(5);
-name = $GET_CHAR_NAME(tgt);
-$IF ($GET_ISGIANT($TargetContext())){$SET_HOOK_PARAM(5,(par5 *# 2) +# 1);};
-$IF ($GET_MONSTERTYPE_SA(name,"subGiant") != "-?-?-"){$SET_HOOK_PARAM(5,par5 +# 1);};
]]>
      </script>
      <script name="DoesAttackSucceed">
        <![CDATA[$VAR tgt; // target
-$VAR name;
-$VAR par5; // Hook parameter 5
-$VAR par6; // Hook parameter 6
-tgt = $IndexOf($TargetContext());
-name = $GET_CHAR_NAME(tgt);
-par5 = $GET_HOOK_PARAM(5);
-par6 = $GET_HOOK_PARAM(6);
-$SET_HOOK_PARAM(7,2);
-$IF ($GET_MONSTERTYPE_SA(name,"subGiant") != "-?-?-" || $GET_ISGIANT($TargetContext()))
-	{
-		$SET_HOOK_PARAM(6,par6 -# 1);
-		$SET_HOOK_PARAM(7,3);
-	};
-$IF (par5 >=# par6){$RETURN "Y";}
-$ELSE {$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_MagicalWeapon</name>
    <asl>
      <script name="ComputeDamage">
        <![CDATA[$VAR wpn;
-$VAR adj;
-wpn = $GET_CHAR_Ready($AttackerContext(), "WEAPON", 0);
-$IF ($GET_ITEM_SA(wpn,"item_FineWeapon") != "-?-?-")
-	{adj = $GET_CHAR_DAMAGEBONUS($IndexOf($AttackerContext()));};
-$SET_HOOK_PARAM(5,$GET_HOOK_PARAM(5) +# adj);
]]>
      </script>
      <script name="DoesAttackSucceed">
        <![CDATA[$VAR atk; // attacker
-$VAR adj;
-$VAR list;
-$VAR wpn;
-atk = $IndexOf($AttackerContext());
-list = "$-3$-3$-3$-3$-2$-1$0$0$0$0$0$0$0$0$0$0$1$2$3$3$3$4$4$4$5$5";
-adj = $DelimitedStringSubstring(list, $GET_CHAR_LIMITED_DEX(atk));
-wpn = $GET_CHAR_Ready($AttackerContext(), "WEAPON", 0);
-$IF ($GET_ITEM_SA(wpn,"item_FineWeapon") != "-?-?-")
-  {adj = adj +# $GET_CHAR_HITBONUS(atk);};
-$SET_HOOK_PARAM(6, $GET_HOOK_PARAM(6) -# adj);
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)){$RETURN "Y";}
-$ELSE {$RETURN "N";};
Parameters = "1 - arrow, 2 - bolt, 3 - dart, 4 - javelin/spear, 5 - other";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_MissileWeapon</name>
    <asl>
      <script name="ComputeDamage">
        <![CDATA[$VAR atk; // attacker
-$VAR wpn;
-$VAR adj;
-atk = $IndexOf($AttackerContext());
-wpn = $GET_CHAR_Ready($AttackerContext(), "WEAPON", 0);
-$IF ($GET_ITEM_SA(wpn,"item_FineWeapon") != "-?-?-")
-	{adj = $GET_CHAR_DAMAGEBONUS(atk);};
-$SET_HOOK_PARAM(5,$GET_HOOK_PARAM(5) +# adj);
]]>
      </script>
      <script name="DoesAttackSucceed">
        <![CDATA[$VAR atk; // attacker
-$VAR adj;
-$VAR list;
-$VAR wpn;
-atk = $IndexOf($AttackerContext());
-list = "$-3$-3$-3$-3$-2$-1$0$0$0$0$0$0$0$0$0$0$1$2$3$3$3$4$4$4$5$5";
-adj = $DelimitedStringSubstring(list, $GET_CHAR_LIMITED_DEX(atk));
-wpn = $GET_CHAR_Ready($AttackerContext(), "WEAPON", 0);
-$IF ($GET_ITEM_SA(wpn,"item_FineWeapon") != "-?-?-"){adj = adj +# $GET_CHAR_HITBONUS(atk);};
-$SET_HOOK_PARAM(6, $GET_HOOK_PARAM(6) -# adj);
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)){$RETURN "Y";};
Parameters = "1 - arrow, 2 - bolt, 3 - dart, 4 - javelin/spear, 5 - other";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_Noisy</name>
    <asl>
      <script name="CanReady">
        <![CDATA[$IF ($GET_COMBATANT_SA($CharacterContext(),"IsSilenced") != "-?-?-"){$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_Periapt</name>
    <asl>
      <script name="OnReady">
        <![CDATA[$SET_CHARACTER_SA($CharacterContext(), "IsPeriaptImmuneDisease", "1");
]]>
      </script>
      <script name="OnUnReady">
        <![CDATA[$DELETE_CHARACTER_SA($CharacterContext(),"IsPeriaptImmuneDisease");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_Poison</name>
    ><asl>
      <script name="idk">
        <![CDATA[DoesAttackSucceed = $VAR tgt; // target
-$VAR time;
-$VAR par5; // Hook parameter 5
-$VAR par6; // Hook parameter 6
-tgt = $IndexOf($TargetContext());
-time = $GET_PARTY_TIME();
-par5 = $GET_HOOK_PARAM(5);
-par6 = $GET_HOOK_PARAM(6);
-$IF ($GET_COMBATANT_SA($TargetContext(),"IsImmunePoison") != "-?-?-"){$RETURN;};
-$IF ($GET_COMBATANT_SA($TargetContext(),"IsProtectedPoisonCaster") != "-?-?-"){$RETURN;};
-$IF ($GET_COMBATANT_SA($TargetContext(),"IsProtectedPoisonTarget") != "-?-?-"){$RETURN;};
-$IF (par5 ># par6)
-	{
-		$SET_COMBATANT_SA($TargetContext(),"IsPoisoned",time);
-		$SET_CHAR_STATUS(tgt,2);
-		$SET_CHAR_HITPOINTS(tgt,"-11");
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_Potion</name>
    <asl>
      <script name="CanExamineOrWhatever">
        <![CDATA[$SET_HOOK_PARAM( 5, "DRINK" );
-$SET_HOOK_PARAM( 6, 0 );
-$RETURN "Y";
]]>
      </script>
      <script name="ExamineOrWhatever">
        <![CDATA[$VAR char;
-$VAR item;
-$VAR newItem;
-$VAR rndm;
-char = $IndexOf($CharacterContext());
-item = "Potion";
-newItem = "Empty Bottle";
-rndm = $RANDOM(4) +# $RANDOM(4) +# 4;
-$IF ($GET_CHAR_Ready($CharacterContext(), "WEAPON", 0) == item)
-	{
-		$TAKE_CHAR_ITEM($CharacterContext(),item);
-		$GIVE_CHAR_ITEM($CharacterContext(),newItem);
-		$SET_CHAR_HITPOINTS(char, $GET_CHAR_HITPOINTS(char) +# rndm);
-		$IF ($GET_CHAR_HITPOINTS(char) ># $GET_CHAR_MAXHITPOINTS(char))
-			{
-				$SET_CHAR_HITPOINTS(char,$GET_CHAR_MAXHITPOINTS(char));
-			};
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_Potion1</name>
    <asl>
      <script name="CanExamineOrWhatever">
        <![CDATA[$SET_HOOK_PARAM( 5, "DRINK" );
-$SET_HOOK_PARAM( 6, 0 );
-$RETURN "Y";
]]>
      </script>
      <script name="ExamineOrWhatever">
        <![CDATA[$VAR char;
-$VAR item;
-$VAR newItem;
-$VAR rndm;
-char = $IndexOf($CharacterContext());
-item = "Potion|1";
-newItem = "Potion|1a";
-rndm = $RANDOM(4) +# $RANDOM(4) +# 4;
-$IF ($GET_CHAR_Ready($CharacterContext(), "WEAPON", 0) == item)
-	{
-		$TAKE_CHAR_ITEM($CharacterContext(),item);
-		$GIVE_CHAR_ITEM($CharacterContext(),newItem);
-		$SET_CHAR_HITPOINTS(char, $GET_CHAR_HITPOINTS(char) +# rndm);
-		$IF ($GET_CHAR_HITPOINTS(char) ># $GET_CHAR_MAXHITPOINTS(char))
-			{
-				$SET_CHAR_HITPOINTS(char,$GET_CHAR_MAXHITPOINTS(char));
-			};
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_Potion1a</name>
    <asl>
      <script name="CanExamineOrWhatever">
        <![CDATA[$SET_HOOK_PARAM( 5, "DRINK" );
-$SET_HOOK_PARAM( 6, 0 );
-$RETURN "Y";
]]>
      </script>
      <script name="ExamineOrWhatever">
        <![CDATA[$VAR char;
-$VAR item;
-$VAR newItem;
-$VAR rndm;
-char = $IndexOf($CharacterContext());
-item = "Potion|1a";
-newItem = "Potion|1b";
-rndm = $RANDOM(4) +# $RANDOM(4) +# 4;
-$IF ($GET_CHAR_Ready($CharacterContext(), "WEAPON", 0) == item)
-	{
-		$TAKE_CHAR_ITEM($CharacterContext(),item);
-		$GIVE_CHAR_ITEM($CharacterContext(),newItem);
-		$SET_CHAR_HITPOINTS(char, $GET_CHAR_HITPOINTS(char) +# rndm);
-		$IF ($GET_CHAR_HITPOINTS(char) ># $GET_CHAR_MAXHITPOINTS(char))
-			{
-				$SET_CHAR_HITPOINTS(char,$GET_CHAR_MAXHITPOINTS(char));
-			};
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_Potion1b</name>
    <asl>
      <script name="CanExamineOrWhatever">
        <![CDATA[$SET_HOOK_PARAM( 5, "DRINK" );
-$SET_HOOK_PARAM( 6, 0 );
-$RETURN "Y";
]]>
      </script>
      <script name="ExamineOrWhatever">
        <![CDATA[$VAR char;
-$VAR item;
-$VAR newItem;
-$VAR rndm;
-char = $IndexOf($CharacterContext());
-item = "Potion|1b";
-newItem = "Empty Bottle";
-rndm = $RANDOM(4) +# $RANDOM(4) +# 4;
-$IF ($GET_CHAR_Ready($CharacterContext(), "WEAPON", 0) == item)
-	{
-		$TAKE_CHAR_ITEM($CharacterContext(),item);
-		$GIVE_CHAR_ITEM($CharacterContext(),newItem);
-		$SET_CHAR_HITPOINTS(char, $GET_CHAR_HITPOINTS(char) +# rndm);
-		$IF ($GET_CHAR_HITPOINTS(char) ># $GET_CHAR_MAXHITPOINTS(char))
-			{
-				$SET_CHAR_HITPOINTS(char, $GET_CHAR_MAXHITPOINTS(char));
-			};
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_Potion2</name>
    <asl>
      <script name="CanExamineOrWhatever">
        <![CDATA[$SET_HOOK_PARAM( 5, "DRINK" );
-$SET_HOOK_PARAM( 6, 0 );
-$RETURN "Y";
]]>
      </script>
      <script name="ExamineOrWhatever">
        <![CDATA[$VAR item;
-$VAR newItem;
-item = "Potion|2";
-newItem = "Empty Bottle";
-$IF ($GET_CHAR_Ready($CharacterContext(), "WEAPON", 0) == item)
-	{
-		$TAKE_CHAR_ITEM($CharacterContext(),item);
-		$GIVE_CHAR_ITEM($CharacterContext(),newItem);
-		$CastSpellOnTarget($Myself(),"itemPotionInvisibility");
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_Potion3</name>
    <asl>
      <script name="CanExamineOrWhatever">
        <![CDATA[$SET_HOOK_PARAM( 5, "DRINK" );
-$SET_HOOK_PARAM( 6, 0 );
-$RETURN "Y";
]]>
      </script>
      <script name="ExamineOrWhatever">
        <![CDATA[$VAR char;
-$VAR item;
-$VAR newItem;
-char = $IndexOf($CharacterContext());
-item = "Potion|3";
-newItem = "Empty Bottle";
-$IF ($GET_CHAR_Ready($CharacterContext(), "WEAPON", 0) == item)
-	{
-		$TAKE_CHAR_ITEM($CharacterContext(),item);
-		$GIVE_CHAR_ITEM($CharacterContext(),newItem);
-		$SET_CHAR_AGE(char, $GET_CHAR_AGE(char) +# 1);
-		$CastSpellOnTarget($CharacterContext(),"itemPotionSpeed");
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_Potion4</name>
    <asl>
      <script name="CanExamineOrWhatever">
        <![CDATA[$SET_HOOK_PARAM( 5, "DRINK" );
-$SET_HOOK_PARAM( 6, 0 );
-$RETURN "Y";
]]>
      </script>
      <script name="ExamineOrWhatever">
        <![CDATA[$VAR item;
-$VAR newItem;
-item = "Potion|4";
-newItem = "Empty Bottle";
-$IF ($GET_CHAR_Ready($CharacterContext(), "WEAPON", 0) == item)
-	{
-		$TAKE_CHAR_ITEM($CharacterContext(),item);
-		$GIVE_CHAR_ITEM($CharacterContext(),newItem);
-		$CastSpellOnTarget($CharacterContext(),"itemPotionGiantStrength");
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_Potion5</name>
    <asl>
      <script name="CanExamineOrWhatever">
        <![CDATA[$SET_HOOK_PARAM( 5, "DRINK" );
-$SET_HOOK_PARAM( 6, 0 );
-$RETURN "Y";
]]>
      </script>
      <script name="ExamineOrWhatever">
        <![CDATA[$VAR char;
-$VAR item;
-$VAR newItem;
-char = $IndexOf($CharacterContext());
-item = "Potion|5";
-newItem = "Empty Bottle";
-$IF ($GET_CHAR_Ready($CharacterContext(), "WEAPON", 0) == item)
-	{
-		$TAKE_CHAR_ITEM($CharacterContext(),item);
-		$GIVE_CHAR_ITEM($CharacterContext(),newItem);
-		$IF ($GET_CHARACTER_SA($CharacterContext(), "IsPoisoned") == "-?-?-"){$RETURN;};
-		$DELETE_CHARACTER_SA($CharacterContext(),"IsPoisoned");
-		$IF ($GET_CHAR_HITPOINTS(char) <=# 0)
-			{
-				$SET_CHAR_HITPOINTS(char, "1");
-				$SET_CHAR_STATUS(char, "0");
-			};
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_Potion6</name>
    <asl>
      <script name="CanExamineOrWhatever">
        <![CDATA[$SET_HOOK_PARAM( 5, "DRINK" );
-$SET_HOOK_PARAM( 6, 0 );
-$RETURN "Y";
]]>
      </script>
      <script name="ExamineOrWhatever">
        <![CDATA[$VAR me;
-$VAR item;
-$VAR newItem;
-$VAR age;
-$VAR rnd;
-$VAR result;
-me = $IndexOf($CharacterContext());
-item = "Potion|6";
-newItem = "Empty Bottle";
-rnd = $RANDOM(12) +# 1;
-age = $GET_CHAR_AGE(me);
-result = age -# rnd;
-$IF ($GET_CHAR_Ready($CharacterContext(), "WEAPON", 0) == item)
-	{
-		$TAKE_CHAR_ITEM($CharacterContext(),item);
-		$GIVE_CHAR_ITEM($CharacterContext(),newItem);
-		$IF (result <# 18){$RETURN $SET_CHAR_AGE(me, 18);}
-		$ELSE {$RETURN $SET_CHAR_AGE(me, result);};
-		};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_PotionInvisibility</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
]]>
      </script>
      <script name="Dispel SE">
        <![CDATA[$REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
]]>
      </script>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$SET_CHARACTER_SA($TargetContext(),"IsInvisiblePotion",2);
]]>
      </script>
      <script name="RemoveLinger">
        <![CDATA[$RETURN "TARGETS";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_RangedWeapon</name>
    <asl>
      <script name="DoesAttackSucceed">
        <![CDATA[$VAR par5;
-$VAR par6;
-$VAR parM; // short range number
-$VAR parL; // medium range number
-$VAR tgt;
-$VAR atk;
-$VAR dist;
-$VAR hit;
-par5 = $GET_HOOK_PARAM(5);
-par6 = $GET_HOOK_PARAM(6);
-parM = $DelimitedStringSubstring($SA_PARAM_GET(),0);
-parL = $DelimitedStringSubstring($SA_PARAM_GET(),1);
-tgt = $IndexOf($TargetContext());
-atk = $IndexOf($AttackerContext());
-dist = $VisualDistance(atk,tgt);
-$IF (dist ># parM){hit = par5 -# 2;};
-$IF (dist ># parL){hit = par5 -# 5;};
-$IF (hit ># par6){$RETURN "Y";}
-$ELSE {$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_Reflect</name>
    <asl>
      <script name="OnReady">
        <![CDATA[$SET_CHARACTER_SA($CharacterContext(), "IsReflecting", "1");
]]>
      </script>
      <script name="OnUnReady">
        <![CDATA[$DELETE_CHARACTER_SA($CharacterContext(),"IsReflecting");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_RingOfAcidImmunity</name>
    <asl>
      <script name="OnReady">
        <![CDATA[$SET_CHARACTER_SA($CharacterContext(),"elemental_ImmuneAcid", "");
-$SET_CHARACTER_SA($CharacterContext(),"DispelLevelItem","12");
]]>
      </script>
      <script name="OnUnReady">
        <![CDATA[$DELETE_CHARACTER_SA($CharacterContext(), "elemental_ImmuneAcid");
-$DELETE_CHARACTER_SA($CharacterContext(),"DispelLevelItem");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_RingOfAcidResistance</name>
    <asl>
      <script name="OnReady">
        <![CDATA[$SET_CHARACTER_SA($CharacterContext(),"elemental_ResistantAcid", "");
-$SET_CHARACTER_SA($CharacterContext(),"DispelLevelItem","12");
]]>
      </script>
      <script name="OnUnReady">
        <![CDATA[$DELETE_CHARACTER_SA($CharacterContext(), "elemental_ResistantAcid");
-$DELETE_CHARACTER_SA($CharacterContext(),"DispelLevelItem");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_RingOfAcidVulnerability</name>
    <asl>
      <script name="OnReady">
        <![CDATA[$SET_CHARACTER_SA($CharacterContext(),"elemental_VulnerableAcid", "");
-$SET_CHARACTER_SA($CharacterContext(),"DispelLevelItem","12");
]]>
      </script>
      <script name="OnUnReady">
        <![CDATA[$DELETE_CHARACTER_SA($CharacterContext(), "elemental_VulnerableAcid");
-$DELETE_CHARACTER_SA($CharacterContext(),"DispelLevelItem");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_RingOfBlinking</name>
    <asl>
      <script name="OnReady">
        <![CDATA[$SET_CHARACTER_SA($CharacterContext(),"IsBlinkingRing","1");
-$SET_CHARACTER_SA($CharacterContext(),"DispelLevelItem","12");
-$IF ($GET_CHARACTER_SA($CharacterContext(),"side") != "-?-?-")
-	{
-		$SET_CHARACTER_SA($CharacterContext(),"IsBlinking1",1);
-		$SET_CHARACTER_SA($CharacterContext(),"IsBlinking2",1);
-	};
]]>
      </script>
      <script name="OnUnReady">
        <![CDATA[$DELETE_CHARACTER_SA($CharacterContext(),"IsBlinkingRing");
-$DELETE_CHARACTER_SA($CharacterContext(),"IsBlinking1");
-$DELETE_CHARACTER_SA($CharacterContext(),"DispelLevelItem");
-$DELETE_CHARACTER_SA($CharacterContext(),"IsBlinking2");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_RingOfColdImmunity</name>
    <asl>
      <script name="OnReady">
        <![CDATA[$SET_CHARACTER_SA($CharacterContext(),"elemental_ImmuneCold", "");
-$SET_CHARACTER_SA($CharacterContext(),"DispelLevelItem","12");
]]>
      </script>
      <script name="OnUnReady">
        <![CDATA[$DELETE_CHARACTER_SA($CharacterContext(), "elemental_ImmuneCold");
-$DELETE_CHARACTER_SA($CharacterContext(),"DispelLevelItem");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_RingOfColdResistance</name>
    <asl>
      <script name="OnReady">
        <![CDATA[$SET_CHARACTER_SA($CharacterContext(),"elemental_ResistantCold", "");
-$SET_CHARACTER_SA($CharacterContext(),"DispelLevelItem","12");
]]>
      </script>
      <script name="OnUnReady">
        <![CDATA[$DELETE_CHARACTER_SA($CharacterContext(), "elemental_ResistantCold");
-$DELETE_CHARACTER_SA($CharacterContext(),"DispelLevelItem");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_RingOfColdVulnerability</name>
    <asl>
      <script name="OnReady">
        <![CDATA[$SET_CHARACTER_SA($CharacterContext(),"elemental_VulnerableCold", "");
-$SET_CHARACTER_SA($CharacterContext(),"DispelLevelItem","12");
]]>
      </script>
      <script name="OnUnReady">
        <![CDATA[$DELETE_CHARACTER_SA($CharacterContext(), "elemental_VulnerableCold");
-$DELETE_CHARACTER_SA($CharacterContext(),"DispelLevelItem");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_RingOfElectricalImmunity</name>
    <asl>
      <script name="OnReady">
        <![CDATA[$SET_CHARACTER_SA($CharacterContext(),"elemental_ImmuneElectricity", "");
-$SET_CHARACTER_SA($CharacterContext(),"DispelLevelItem","12");
]]>
      </script>
      <script name="OnUnReady">
        <![CDATA[$DELETE_CHARACTER_SA($CharacterContext(), "elemental_ImmuneElectricity");
-$DELETE_CHARACTER_SA($CharacterContext(),"DispelLevelItem");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_RingOfElectricalResistance</name>
    <asl>
      <script name="OnReady">
        <![CDATA[$SET_CHARACTER_SA($CharacterContext(),"elemental_ResistantElectricity", "");
-$SET_CHARACTER_SA($CharacterContext(),"DispelLevelItem","12");
]]>
      </script>
      <script name="OnUnReady">
        <![CDATA[$DELETE_CHARACTER_SA($CharacterContext(), "elemental_ResistantElectricity");
-$DELETE_CHARACTER_SA($CharacterContext(),"DispelLevelItem");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_RingOfelectricalVulnerability</name>
    <asl>
      <script name="OnReady">
        <![CDATA[$SET_CHARACTER_SA($CharacterContext(),"elemental_VulnerableElectricity", "");
-$SET_CHARACTER_SA($CharacterContext(),"DispelLevelItem","12");
]]>
      </script>
      <script name="OnUnReady">
        <![CDATA[$DELETE_CHARACTER_SA($CharacterContext(), "elemental_VulnerableElectricity");
-$DELETE_CHARACTER_SA($CharacterContext(),"DispelLevelItem");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_RingOfFireImmunity</name>
    <asl>
      <script name="OnReady">
        <![CDATA[$SET_CHARACTER_SA($CharacterContext(),"elemental_ImmuneFire", "");
-$SET_CHARACTER_SA($CharacterContext(),"DispelLevelItem","12");
]]>
      </script>
      <script name="OnUnReady">
        <![CDATA[$DELETE_CHARACTER_SA($CharacterContext(), "elemental_ImmuneFire");
-$DELETE_CHARACTER_SA($CharacterContext(),"DispelLevelItem");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_RingOfFireResistance</name>
    <asl>
      <script name="OnReady">
        <![CDATA[$SET_CHARACTER_SA($CharacterContext(),"elemental_ResistntFire", "");
-$SET_CHARACTER_SA($CharacterContext(),"DispelLevelItem","12");
]]>
      </script>
      <script name="OnUnReady">
        <![CDATA[$DELETE_CHARACTER_SA($CharacterContext(), "elemental_ResistntFire");
-$DELETE_CHARACTER_SA($CharacterContext(),"DispelLevelItem");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_RingOfFireVulnerability</name>
    <asl>
      <script name="OnReady">
        <![CDATA[$SET_CHARACTER_SA($CharacterContext(),"elemental_VulnerableFire", "");
-$SET_CHARACTER_SA($CharacterContext(),"DispelLevelItem","12");
]]>
      </script>
      <script name="OnUnReady">
        <![CDATA[$DELETE_CHARACTER_SA($CharacterContext(), "elemental_VulnerableFire");
-$DELETE_CHARACTER_SA($CharacterContext(),"DispelLevelItem");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_RingOfInvisibility</name>
    <asl>
      <script name="OnReady">
        <![CDATA[$SET_CHARACTER_SA($CharacterContext(),"IsInvisibleRing",1);
-$SET_COMBATANT_SA($CharacterContext(),"IsInvisibleRing",1);
-$SET_COMBATANT_SA($CharacterContext(),"IsInvisible",1);
-$SET_CHARACTER_SA($CharacterContext(),"DispelLevelItem","12");
]]>
      </script>
      <script name="OnUnReady">
        <![CDATA[$DELETE_CHARACTER_SA($CharacterContext(),"IsInvisibleRing");
-$DELETE_COMBATANT_SA($CharacterContext(),"IsInvisibleRing");
-$DELETE_COMBATANT_SA($CharacterContext(),"IsInvisible");
-$DELETE_CHARACTER_SA($CharacterContext(),"DispelLevelItem");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_RingOfProtectionFromEvil</name>
    <asl>
      <script name="OnReady">
        <![CDATA[$SET_CHARACTER_SA($CharacterContext(),"IsProtectedEvil","1");
-$SET_CHARACTER_SA($CharacterContext(),"DispelLevelItem","12");
]]>
      </script>
      <script name="OnUnReady">
        <![CDATA[$DELETE_CHARACTER_SA($CharacterContext(),"IsProtectedEvil");
-$DELETE_CHARACTER_SA($CharacterContext(),"DispelLevelItem");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_RingOfWizardry</name>
    <asl>
      <script name="OnReady">
        <![CDATA[$VAR lvl;
-$VAR actor;
-lvl = $SA_PARAM_GET();
-$SpellAdj($CharacterContext(),"Magic User","ring",lvl,lvl,200,0);
-$SET_CHARACTER_SA($CharacterContext(),"IsRingWizardry", lvl);
]]>
      </script>
      <script name="OnUnReady">
        <![CDATA[$VAR lvl;
-$VAR actor;
-lvl = $SA_PARAM_GET();
-$SpellAdj($CharacterContext(),"Magic User","ring",lvl,lvl,50,0);
-$DELETE_CHARACTER_SA($CharacterContext(),"IsRingWizardry");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_Scroll</name>
    <asl>
      <script name="CanReady">
        <![CDATA[$VAR me; $VAR cls;
-me = $MyIndex(); cls = $SA_PARAM_GET();
-$IF (($GET_CHAR_Lvl(me,cls) <# 1) || ($GET_CHAR_Lvl(me,"thief")) <# 10){$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_VorpalLongSword</name>
    <asl>
      <script name="ComputeDamage">
        <![CDATA[$VAR roll;
-$VAR tgt; // target
-$VAR name;
-$VAR dmg;
-$IF ($GET_HASVORPALIMMUNITY($TargetContext()) != "-?-?-"){$RETURN;};
-roll = $GET_COMBATANT_SA($TargetContext(),"vorp");
-tgt = $IndexOf($TargetContext());
-name = $GET_CHAR_NAME(tgt);
-$IF ($GET_MONSTERTYPE_SA(name,"MetalOrStone") != "-?-?-"){roll = roll -# 2;}
-$ELSE {$IF ($GET_CHAR_SIZE(tgt) == 2){roll = roll -# 1;};};
-$IF (roll ># 16)
-	{
-		$SET_HOOK_PARAM(7,name +" is beheaded");
-		$SET_HOOK_PARAM(5,$GET_CHAR_HITPOINTS(tgt) +# 11);
-		$RETURN $GET_HOOK_PARAM(5);
-	};
]]>
      </script>
      <script name="DoesAttackSucceed">
        <![CDATA[$VAR par5; $VAR par6;
-par5 = $GET_HOOK_PARAM(5);
-par6 = $GET_HOOK_PARAM(6);
-$SET_COMBATANT_SA($TargetContext(),"vorp",par5);
-$IF (par5 >=# par6){$RETURN "Y";}
-$ELSE {$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_WeaponType</name>
    ><asl>
      <script name="idk">
        <![CDATA[Parameters = "blunt, piercing, slashing, piercing/slashing";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>item_Whip</name>
    <asl>
      <script name="OnReady">
        <![CDATA[$VAR chr; // character
-chr = $IndexOf($CharacterContext());
-$IF ($GET_CHAR_Lvl(chr,"druid") <# 1 && $GET_CHAR_Lvl(chr,"fighter") <# 1 && $GET_CHAR_Lvl(chr,"paladin") <# 1 && $GET_CHAR_Lvl(chr,"ranger") <# 1 && $GET_CHAR_RACE(chr) != "Drow")
-	{
-		$SET_CHAR_Ready($CharacterContext(),0,"");
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>JoinParty</name>
    <asl>
      <script name="JoinParty">
        <![CDATA[$VAR spellbook; $VAR schoolBook;
-$FUNC MemorizeLevel(levelBook)
-	{
-		$VAR spellName;
-		levelBook = $DelimitedStringTail(levelBook);
-		$WHILE (levelBook)
-			{
-				spellName = $DelimitedStringHead(levelBook);
-				levelBook = $DelimitedStringTail(levelBook);
-				spellName = $DelimitedStringHead(spellName);
-				$SelectSpell($CharacterContext(),spellName);
-			};
-	} MemorizeLevel;
-$FUNC MemorizeSchool(schoolBook)
-	{
-		$VAR levelBook;
-		$DEBUG("school spells = " + schoolBook);
-		// Discard the school ID
-		schoolBook = $DelimitedStringTail(schoolBook);
-		$WHILE (schoolBook)
-			{
-				levelBook = $DelimitedStringHead(schoolBook);
-				MemorizeLevel(levelBook);
-				schoolBook = $DelimitedStringTail(schoolBook);
-			};
-	} MemorizeSchool;
-spellbook = $GET_SPELLBOOK($CharacterContext(),"%@#&");
-$WHILE (spellbook)
-	{
-		schoolBook = $DelimitedStringHead(spellbook);
-		MemorizeSchool(schoolBook);
-		spellbook = $DelimitedStringTail(spellbook);
-	};
-$Memorize($CharacterContext());
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_AuraDragon</name>
    <asl>
      <script name="AURA_Create">
        <![CDATA[$VAR chr; // character
-chr = $IndexOf($CharacterContext());
-$AURA_Attach("Combatant");
-$AURA_Combatant(chr);
-$AURA_Size(0,10,0,360);
-$AURA_Shape("AnnularSector");
-$AURA_Wavelength("Xray");
]]>
      </script>
      <script name="AURA_Enter">
        <![CDATA[$VAR com; // comabtant
-$VAR race; // combatant's race
-$VAR cLvl; // combatant's level
-$VAR mLvl; // monster level
-$VAR rndm;
-$VAR prm; // sa's parameter
-com = $IndexOf($CombatantContext());
-race = $GET_CHAR_NAME(com);
-cLvl = $GetHighestLevelBaseclass(com);
-mLvl = $GET_COMBATANT_SA($CombatantContext(),"monsterLevel");
-rndm = $RANDOM(2);
-prm = $SA_PARAM_GET();
-$IF (race == "Dragon"){$RETURN;};
-$IF (cLvl >=# 6){$RETURN;};
-$IF (mLvl >=# 6){$RETURN;};
-$IF (cLvl >=# 3){$RETURN $SET_COMBATANT_SA($CombatantContext(),"IsDragonAdj","");};
-$IF (rndm ==# 0){$SET_COMBATANT_SA($CombatantContext(),"IsDragonFear","");};
-$IF (rndm ==# 1){$SET_COMBATANT_SA($CombatantContext(),"IsDragonFlee",prm);};
]]>
      </script>
      <script name="CreateMonsterCombatant">
        <![CDATA[$VAR prm; // sa's parameter
-prm = $SA_PARAM_GET();
-$AURA_Create("monster_AuraDragon",prm,0,0,0);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_AuraGhast</name>
    <asl>
      <script name="AURA_Create">
        <![CDATA[$VAR chr; // character
-chr = $IndexOf($CharacterContext());
-$AURA_Attach("Combatant");
-$AURA_Combatant(chr);
-$AURA_Size(0,1,0,360);
-$AURA_Shape("AnnularSector");
-$AURA_Wavelength("Xray");
]]>
      </script>
      <script name="AURA_Enter">
        <![CDATA[$VAR save; // save vs poison
-$VAR rndm;
-save = $SkillAdj($CombatantContext(),"Save Vs PP","ghast","F",0);
-rndm = $RANDOM(20) +# 1;
-$IF (rndm <# save){$RETURN $SET_COMBATANT_SA($CombatantContext(),"IsCarrionStenched","");};
]]>
      </script>
      <script name="AURA_Exit">
        <![CDATA[$DELETE_COMBATANT_SA($CombatantContext(),"IsCarrionStenched");
]]>
      </script>
      <script name="CreateMonsterCombatant">
        <![CDATA[$VAR prm; // sa's parameter
-prm = $SA_PARAM_GET();
-$AURA_Create("monster_AuraGhast",prm,0,0,0);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_AuraMummy</name>
    <asl>
      <script name="AURA_Create">
        <![CDATA[$VAR chr; // character
-chr = $IndexOf($CharacterContext());
-$AURA_Attach("Combatant");
-$AURA_Combatant(chr);
-$AURA_Size(0,6,0,360);
-$AURA_Shape("AnnularSector");
-$AURA_Wavelength("Xray");
]]>
      </script>
      <script name="AURA_Enter">
        <![CDATA[$VAR com; // comabtant
-$VAR race;
-$VAR save;
-$VAR rndm;
-$VAR time;
-$IF ($GET_COMBATANT_SA($CombatantContext(),"IsOverMummy") != "-?-?-"){$RETURN;};
-com = $IndexOf($CombatantContext());
-race = $GET_CHAR_NAME(com);
-save = $SkillAdj($CombatantContext(),"Save Vs PPDM","mummy","F",0);
-rndm = $RANDOM(20) +# 1;
-time = $GET_PARTY_TIME();
-$IF (race == "Human"){save = save +# 2;};
-$IF (rndm >=# save){$RETURN $SET_COMBATANT_SA($CombatantContext(),"IsOverMummy","");}
-$ELSE {$RETURN $SET_COMBATANT_SA($CombatantContext(),"IsMummyFear",time);};
]]>
      </script>
      <script name="CreateMonsterCombatant">
        <![CDATA[$VAR prm; // sa's parameter
-prm = $GET_PARTY_TIME() +# $RANDOM(4) +# 1;
-$AURA_Create("monster_AuraMummy",prm,0,0,0);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_BearHug1</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$SET_COMBATANT_SA($AttackerContext(),"CombatRoundStart",1);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_BearHug2</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR tgt; // target
-atk = $IndexOf($AttackerContext());
-tgt = $IndexOf($TargetContext());
-$IF ($GET_COMBATANT_SA($AttackerContext(),"CombatRoundStart") ==# 1)
-	{
-		$IF ($GET_COMBATANT_SA($TargetContext(),"IsHugged") == "-?-?-")
-			{
-				$SET_COMBATANT_SA($AttackerContext(),"HugLink",tgt);
-				$SET_COMBATANT_SA($AttackerContext(),"monster_BearHugging",tgt);
-				$SET_COMBATANT_SA($TargetContext(),"monster_BearHugged",atk);
-				$SET_COMBATANT_SA($TargetContext(),"HugLink",atk);
-				$SET_COMBATANT_SA($TargetContext(),"IsHugged",1);
-			};
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_BearHugged</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7,"Hugged by Bear");
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
]]>
      </script>
      <script name="OnStartCombatantAction">
        <![CDATA[$VAR atk;
-atk = $SA_PARAM_GET();
-$IF ($GET_CHAR_HITPOINTS(atk) <# 1)
-	{
-		$DELETE_COMBATANT_SA($CombatantContext(),"HugLink");
-		$DELETE_COMBATANT_SA($CharacterContext(),"IsHugged");
-		$SA_REMOVE();
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_BearHugging</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7,"Hugging");
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
]]>
      </script>
      <script name="GetAdjMaxMovement">
        <![CDATA[$RETURN 0;
]]>
      </script>
      <script name="GetNumberOfAttacks">
        <![CDATA[$RETURN 0;
]]>
      </script>
      <script name="OnStartCombatantAction">
        <![CDATA[$VAR Tgt;
-$VAR name;
-$VAR dmg;
-Tgt = $SA_PARAM_GET();
-$IF ($GET_CHAR_HITPOINTS(Tgt) ># 0)
-	{
-		name = $GET_CHAR_NAME($IndexOf($CombatantContext()));
-		$IF (name == "Black Bear"){dmg = ($RANDOM(4) +# $RANDOM(4) +# 2);};
-		$IF (name == "Brown Bear"||name == "Grizzly Bear"){dmg = ($RANDOM(6) +# $RANDOM(6) +# 2);};
-		$IF (name == "Cave Bear"||name == "Owlbear"||name == "Werebear" ){dmg = ($RANDOM(8) +# $RANDOM(8) +# 2);};
-		$IF (name == "Northern Bear"){dmg = ($RANDOM(6) +# $RANDOM(6) +# $RANDOM(6) +# 3);};
-		$SET_CHAR_HITPOINTS(Tgt,$GET_CHAR_HITPOINTS(Tgt) -# dmg);
-	};
-$IF ($GET_CHAR_HITPOINTS(Tgt) <# 1) 
-	{
-		$IF ($GET_CHAR_HITPOINTS(Tgt) <# "-9")  {$SET_CHAR_STATUS(Tgt,2);}
-		$ELSE {$SET_CHAR_STATUS(Tgt,9);};
-		$DELETE_COMBATANT_SA($CombatantContext(),"monster_BearHugging");
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_BeholderAttacks</name>
    <asl>
      <script name="StartCombatRound">
        <![CDATA[$GIVE_CHAR_ITEM( $CombatantContext(), "monsterBeholderCharm" );
-$GIVE_CHAR_ITEM( $CombatantContext(), "monsterBeholderSleep" );
-$GIVE_CHAR_ITEM( $CombatantContext(), "monsterBeholderFleshToStone" );
-$GIVE_CHAR_ITEM( $CombatantContext(), "monsterBeholderFear" );
-$GIVE_CHAR_ITEM( $CombatantContext(), "monsterBeholderSlow" );
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_CheetahNotSurprised</name>
    <asl>
      <script name="AdjustInitiative">
        <![CDATA[$RETURN "-2";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_CombatantAlignment</name>
    <asl>
      <script name="CreateMonsterCombatant">
        <![CDATA[$VAR param;
-$VAR char;
-param = $SA_PARAM_GET();
-char = $IndexOf($CharacterContext());
-$IF (param == "good"){$SET_CHAR_ALIGNMENT(char,1);};
-$IF (param == "neutral"){$SET_CHAR_ALIGNMENT(char,4);};
-$IF (param == "evil"){$SET_CHAR_ALIGNMENT(char,7);};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_CrysmalBluntWeapon</name>
    <asl>
      <script name="DoesAttackSucceed">
        <![CDATA[$VAR par5; $VAR par6;
-par5 = $GET_HOOK_PARAM(5); par6 = $GET_HOOK_PARAM(6);
-$IF ($SA_ITEM_GET("item_WeaponType") == "blunt"){$SET_HOOK_PARAM(6,par6 -# 4);};
-$IF (par5 >=# par6){$RETURN "Y";}
-$ELSE {$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_CrysmalElectricalResistance</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Electricity Resistant");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="ComputeDamage">
        <![CDATA[$VAR item; $VAR itmNon; $VAR monster; $VAR monNon; $VAR resist; $VAR par5;
-item = $SA_ITEM_GET("DamageMagical");
-itmNon = $SA_ITEM_GET("DamageNonMagical");
-monster = $SA_MONSTERTYPE_GET("DamageMagical");
-monNon = $SA_MONSTERTYPE_GET("DamageNonMagical");
-$IF ((item == "-?-?-") && (itmNon == "-?-?-") && (monster == "-?-?-") && (monNon == "-?-?-")) {$RETURN;};
-$IF (item != "-?-?-") {resist = item;};
-$IF (itmNon != "-?-?-") {resist = itmNon;};
-$IF (monster != "-?-?-") {resist = monster;};
-$IF (monNon != "-?-?-") {resist = monNon;};
-par5 = $GET_HOOK_PARAM(5);
-$IF (resist == "electricity") {$RETURN par5 /# 4;};
]]>
      </script>
      <script name="ComputeSpellDamage">
        <![CDATA[$VAR spell; $VAR splNon; $VAR resist; $VAR par5;
-spell = $SA_SPELL_GET("DamageMagical");
-splNon = $SA_SPELL_GET("DamageNonMagical");
-$IF ((spell == "-?-?-") && (splNon == "-?-?-")){$RETURN;};
-$IF (spell != "-?-?-") {resist = spell;};
-$IF (splNon != "-?-?-") {resist = splNon;};
-par5 = $GET_HOOK_PARAM(5);
-$IF (resist == "electricity") {$RETURN par5 /# 4;};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_DaoDoubleHolyWater</name>
    <asl>
      <script name="ComputeDamage">
        <![CDATA[$VAR hW;
-hW = $SA_ITEM_GET("item_HolyWater");
-$IF (hW >=# 0){$RETURN $RANDOM(4) +# $RANDOM(4) +# $RANDOM(4) +# $RANDOM(4) +# 4;};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_Displacement</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$SET_COMBATANT_SA($TargetContext(),"IsDisplaced","");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_DjinniAirResistance</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Air Resistant");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="GetAdjMaxMovement">
        <![CDATA[$VAR item; $VAR itmNon; $VAR monster; $VAR monNon; $VAR resist; $VAR par5;
-item = $SA_ITEM_GET("DamageMagical");
-itmNon = $SA_ITEM_GET("DamageNonMagical");
-monster = $SA_MONSTERTYPE_GET("DamageMagical");
-monNon = $SA_MONSTERTYPE_GET("DamageNonMagical");
-$IF (item == "-?-?-") && (itmNon == "-?-?-") && (monster == "-?-?-") && (monNon == "-?-?-")) {$RETURN;};
-$IF (item != "-?-?-") {resist = item;};
-$IF (itmNon != "-?-?-") {resist = itmNon;};
-$IF (monster != "-?-?-") {resist = monster;};
-$IF (monNon != "-?-?-") {resist = monNon;};
-par5 = $GET_HOOK_PARAM(5);
-$IF (immune == "air") {$RETURN par5 +# 1;};
]]>
      </script>
      <script name="ComputeSpellDamage">
        <![CDATA[$VAR spell; $VAR splNon; $VAR resist; $VAR par5;
-spell = $SA_SPELL_GET("DamageMagical");
-splNon = $SA_SPELL_GET("DamageNonMagical");
-$IF ((spell == "-?-?-") && (splNon == "-?-?-")){$RETURN;};
-$IF (spell != "-?-?-") {resist = spell;};
-$IF (splNon != "-?-?-") {resist = splNon;};
-par5 = $GET_HOOK_PARAM(5);
-$IF (resist == "air") {$RETURN par5 +# 1;};
]]>
      </script>
      <script name="DoesAttackSucceed">
        <![CDATA[$IF (($GET_HOOK_PARAM(5) +# 1) <=# $GET_HOOK_PARAM(6)) {$RETURN "N";};
]]>
      </script>
      <script name="DoesSpellAttackSucceed">
        <![CDATA[$IF (($GET_HOOK_PARAM(5) +# 1) <=# $GET_HOOK_PARAM(6)) {$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_DragonSavingThrow</name>
    <asl>
      <script name="CreateMonsterCombatant">
        <![CDATA[$VAR param;
-param = $SA_PARAM_GET();
-$IF (param == "second")
-	{
-		$SkillAdj($CharacterContext(), "Save Vs BR", "", "F", "13");
-		$SkillAdj($CharacterContext(), "Save Vs PP", "", "F", "11");
-		$SkillAdj($CharacterContext(), "Save Vs PPDM", "", "F", "13");
-		$SkillAdj($CharacterContext(), "Save Vs RSW", "", "F", "9");
-		$SkillAdj($CharacterContext(), "Save Vs SP", "", "F", "10");
-	};
-$IF (param == "rhitd")
-	{
-		$SkillAdj($CharacterContext(), "Save Vs BR", "", "F", "11");
-		$SkillAdj($CharacterContext(), "Save Vs PP", "", "F", "9");
-		$SkillAdj($CharacterContext(), "Save Vs PPDM", "", "F", "11");
-		$SkillAdj($CharacterContext(), "Save Vs RSW", "", "F", "7");
-		$SkillAdj($CharacterContext(), "Save Vs SP", "", "F", "8");
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_DrainStrength</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR tgt; // target
-$VAR dur;
-$VAR time;
-$VAR str; // strength
-$VAR strMod;
-tgt = $IndexOf($TargetContext());
-dur = ($RANDOM(4) +# $RANDOM(4) +# 2) *# 10;
-time = $GET_PARTY_TIME();
-str = $GET_CHAR_LIMITED_STR(tgt);
-strMod = $GET_CHAR_LIMITED_STRMOD(tgt);
-// SA lowStr used to circumvent Min/Max
-$IF (str <# 4 && $GET_COMBATANT_SA($TargetContext(),"lowStr") != "-?-?-")
-	{
-		$SET_COMBATANT_SA($TargetContext(),"lowStr", $GET_COMBATANT_SA($TargetContext(),"lowStr") -# 1);
-	}; 
-$IF (str <# 4 && $GET_COMBATANT_SA($TargetContext(),"lowStr") == "-?-?-")
-	{
-		$SET_COMBATANT_SA($TargetContext(),"lowStr",2);
-	};
-$MODIFY_CHAR_ATTRIBUTE(tgt, "STR", -1, "MINUTES", dur, "Weakened", "MONSTER Drain Strength");
-$IF (strMod ># 0) {$MODIFY_CHAR_ATTRIBUTE(tgt, "STRMOD", 100 -# strMod, "MINUTES", dur, "" , "MONSTER Drain Strength");};
-$IF ($GET_COMBATANT_SA($TargetContext(),"lowStr") ==# 0 || $GET_CHAR_HITPOINTS(tgt) <# 1)
-	{
-		$SET_CHAR_HITPOINTS(tgt,"-10");
-		$RETURN $SET_CHAR_STATUS(tgt,5);
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_EfreetiFireResistance</name>
    <asl>
      <script name="DoesAttackSucceed">
        <![CDATA[$IF ($GET_ITEM_SA($ItemContext(),"DamageNonMagical") == "fire"){$RETURN "N";};
-$IF ($GET_ITEM_SA($ItemContext(),"DamageMagical") == "fire")
-	{$RETURN $SET_HOOK_PARAM(5, $GET_HOOK_PARAM(5) -# 1);};
]]>
      </script>
      <script name="DoesSpellAttackSucceed">
        <![CDATA[$IF ($GET_SPELL_SA($ItemContext(),"DamageMagical") == "fire")
-	{$RETURN $SET_HOOK_PARAM(5, $GET_HOOK_PARAM(5) -# 1);};
]]>
      </script>
      <script name="ComputeDamage">
        <![CDATA[$IF ($GET_ITEM_SA($ItemContext(),"DamageMagical") == "fire")
-	{$RETURN $GET_HOOK_PARAM(5) /# 6 *# 5;};
]]>
      </script>
      <script name="ComputeDamage">
        <![CDATA[$IF ($GET_SPELL_SA($ItemContext(),"DamageMagical") == "fire")
-	{$RETURN $GET_HOOK_PARAM(5) /# 6 *# 5;};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_Engulf1</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$SET_COMBATANT_SA($AttackerContext(),"CombatRoundStart",1);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_Engulf2</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR tgt; // target
-atk = $IndexOf($AttackerContext());
-tgt = $IndexOf($TargetContext());
-$IF ($GET_COMBATANT_SA($AttackerContext(),"CombatRoundStart") ==# 1)
-	{
-		$IF ($GET_COMBATANT_SA($TargetContext(),"IsHugged") == "-?-?-")
-			{
-				$SET_COMBATANT_SA($AttackerContext(),"HugLink",tgt);
-				$SET_COMBATANT_SA($AttackerContext(),"monster_Engulfing",tgt);
-				$SET_COMBATANT_SA($AttackerContext(),"IsHosed",$RANDOM(4) +# $RANDOM(4) +# 2);
-				$SET_COMBATANT_SA($TargetContext(),"monster_Engulfed",atk);
-				$SET_COMBATANT_SA($TargetContext(),"HugLink",atk);
-				$SET_COMBATANT_SA($TargetContext(),"IsHugged",1);
-			};
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_Engulfed</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7,"Engulfed");
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
]]>
      </script>
      <script name="OnStartCombatantAction">
        <![CDATA[$VAR atk; // attacker
-atk = $SA_PARAM_GET();
-$IF ($GET_CHAR_HITPOINTS(atk) <# 1)
-	{
-		$DELETE_COMBATANT_SA($CombatantContext(),"HugLink");
-		$DELETE_COMBATANT_SA($CombatantContext(),"IsHugged");
-		$SA_REMOVE();
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_Engulfing</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7,"Engulfing");
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
]]>
      </script>
      <script name="GetAdjMaxMovement">
        <![CDATA[$RETURN 0;
]]>
      </script>
      <script name="GetNumberOfAttacks">
        <![CDATA[$RETURN 0;
]]>
      </script>
      <script name="OnStartCombatantAction">
        <![CDATA[$VAR tgt; // target
-$VAR name;
-$VAR count;
-tgt = $SA_PARAM_GET();
-$IF ($GET_CHAR_HITPOINTS(tgt) ># 0)
-	{
-		count = $GET_COMBATANT_SA($CombatantContext(),"IsHosed") -#1;
-		$SET_COMBATANT_SA($CombatantContext(),"IsHosed",count);
-		$IF (count <=# 0)
-			{
-				$SET_CHAR_STATUS(tgt,2);
-				$SET_CHAR_HITPOINTS(tgt,0);
-			};
-	};
-$IF ($GET_CHAR_HITPOINTS(tgt) <# 1)
-	{
-		$DELETE_COMBATANT_SA($CombatantContext(),"monster_Engulfing");
-		$DELETE_COMBATANT_SA($CombatantContext(),"IsHosed");
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_FireBatAttack</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR tgt; // target
-$VAR link;
-atk = $IndexOf($AttackerContext());
-tgt = $IndexOf($TargetContext());
-$SET_COMBATANT_SA($AttackerContext(),"monster_FireBatDrain","");
-$IF ($GET_COMBATANT_SA($AttackerContext(),"monster_FireBatBloodCap") == "-?-?-")
-	{
-		$SET_COMBATANT_SA($AttackerContext(),"monster_FireBatBloodCap",3);
-	};
-$SET_COMBATANT_SA($AttackerContext(),"monster_FireBatLink",tgt);
-$SET_COMBATANT_SA($TargetContext(),"monster_FireBatDrainee","");
-$SET_COMBATANT_SA($TargetContext(),"IsHugged",1);
-link = $GET_COMBATANT_SA($TargetContext(),"monster_FireBatLink");
-$IF (link == "-?-?-")
-	{
-		$SET_COMBATANT_SA($TargetContext(),"monster_FireBatLink","$255$" + atk);
-	}
-$ELSE
-	{
-		link = link + "$" + atk;
-		$SET_COMBATANT_SA($TargetContext(),"monster_FireBatLink",link);
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_FireBatDrain</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7,$SA_PARAM_GET());
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
]]>
      </script>
      <script name="GetAdjMaxMovement">
        <![CDATA[$RETURN 0;
]]>
      </script>
      <script name="GetNumberOfAttacks">
        <![CDATA[$RETURN 0;
]]>
      </script>
      <script name="OnStartCombatantAction">
        <![CDATA[$VAR tgt; // target
-$VAR name; $VAR cap; $VAR dmg;
-// Test Target and Compute & Apply Drain
-tgt = $GET_COMBATANT_SA($CombatantContext(),"monster_FireBatLink");
-name = $GET_CHAR_NAME(tgt);
-$IF ($GET_CHAR_STATUS(tgt) ==# 0) 
-	{
-		cap = $GET_COMBATANT_SA($CombatantContext(),"monster_FireBatBloodCap");
-		dmg = $RANDOM(4) +# 1;
-		cap = cap -# 1;
-		$SET_COMBATANT_SA($CombatantContext(),"monster_FireBatBloodCap",cap);
-		$SET_CHAR_HITPOINTS(tgt, $GET_CHAR_HITPOINTS(tgt) -# dmg);
-// Is Target Dead?
-		$IF ($GET_CHAR_HITPOINTS(tgt) <# 1)
-			{
-				$SET_CHAR_STATUS(tgt,1);
-				$DELETE_COMBATANT_SA($CombatantContext(),"monster_FireBatDrain");
-				$DELETE_COMBATANT_SA($CombatantContext(),"monster_FireBatLink");
-			};
-// Am I Full?
-		$IF (cap <# 1)
-			{
-				$SET_CHAR_STATUS($MyIndex(),8);
-				$DELETE_COMBATANT_SA($CombatantContext(),"monster_FireBatDrain");
-				$DELETE_COMBATANT_SA($CombatantContext(),"monster_FireBatLink");
-				$SET_COMBATANT_SA($CombatantContext(),"IsFleeing","Fleeing Fire Bat");
-				$DELETE_CHARACTER_SA($Name(name),"IsHugged");
-			};
-	}
-$ELSE
-	{
-// Someone Else Killed It
-		$DELETE_COMBATANT_SA($CombatantContext(),"monster_FireBatDrain");
-		$DELETE_COMBATANT_SA($CombatantContext(),"monster_FireBatLink");
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_FireBatDrainee</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7,$SA_PARAM_GET());
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
]]>
      </script>
      <script name="OnStartCombatantAction">
        <![CDATA[$VAR atk; // attacker
-$VAR i; $VAR foes; $VAR alive;
-foes = $GET_COMBATANT_SA($CombatantContext(),"monster_FireBatLink");
-i = $DelimitedStringCount(foes);
-alive = "0";
-$WHILE (i >=# 0)
-	{
-		atk = $DelimitedStringSubstring(foes,i);
-		$IF ($GET_CHAR_STATUS(atk) ==# 0){alive = alive +# 1;};
-		i = i -# 1;
-	};
-$IF (alive <# 1)
-	{
-		$DELETE_COMBATANT_SA($CombatantContext(),"monster_FireBatDrainee");
-		$DELETE_COMBATANT_SA($CombatantContext(),"monster_FireBatLink");
-		$DELETE_CHARACTER_SA($CombatantContext(),"IsHugged");
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_GiantSlugSpit</name>
    <asl>
      <script name="CheckProximity">
        <![CDATA[$VAR tgt; // target
-$VAR myself;
-$VAR range;
-$VAR distance;
-tgt = $GET_HOOK_PARAM(6);
-myself = $GET_HOOK_PARAM(5);
-range = $SA_PARAM_GET();
-distance = $VisualDistance(tgt, myself);
-$SA_PARAM_SET(distance);
]]>
      </script>
      <script name="DAS bak">
        <![CDATA[$VAR random;
-$VAR distance;
-random = $RANDOM(100);
-distance = $SA_PARAM_GET();
-$IF ($GetCombatRound() ==# 1)
-	{
-		$IF (random <# 10){$RETURN "Y";}
-		$ELSE{$RETURN "N";};
-	};
-$IF (random <# 110 -# (10 *# distance)){$RETURN "Y";}
-$ELSE{$RETURN "N";};
]]>
      </script>
      <script name="DoesSpellAttackSucceed">
        <![CDATA[
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_GiantWeaselAttack</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR tgt; // target
-$VAR link;
-atk = $IndexOf($AttackerContext());
-tgt = $IndexOf($TargetContext());
-$SET_COMBATANT_SA($AttackerContext(),"monster_GiantWeaselDrain","");
-$SET_COMBATANT_SA($AttackerContext(),"monster_GiantWeaselLink",tgt);
-$SET_COMBATANT_SA($TargetContext(),"monster_GiantWeaselDrainee","");
-$SET_COMBATANT_SA($TargetContext(),"IsHugged",1);
-link = $GET_COMBATANT_SA($TargetContext(),"monster_GiantWeaselLink");
-$IF (link == "-?-?-")
-	{
-		$SET_COMBATANT_SA($TargetContext(),"monster_GiantWeaselLink","$255$" + atk);
-	}
-$ELSE
-	{
-		link = link + "$" + atk;
-		$SET_COMBATANT_SA($TargetContext(),"monster_GiantWeaselLink",link);
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_GiantWeaselDrain</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7,$SA_PARAM_GET());
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
]]>
      </script>
      <script name="GetAdjMaxMovement">
        <![CDATA[$RETURN 0;
]]>
      </script>
      <script name="GetNumberOfAttacks">
        <![CDATA[$RETURN 0;
]]>
      </script>
      <script name="OnStartCombatantAction">
        <![CDATA[$VAR tgt; // target
-$VAR name;
-$VAR dmg;
-$VAR HP; // hit points
-// Test Target and Compute & Apply Drain
-tgt = $GET_COMBATANT_SA($CombatantContext(),"monster_GiantWeaselLink");
-name = $GET_CHAR_NAME(tgt);
-HP = $GET_CHAR_HITPOINTS(tgt);
-$IF ($GET_CHAR_STATUS(tgt) ==# 0) 
-	{
-		dmg = ($RANDOM(6) +# 1) +# ($RANDOM(6) +# 1);
-		$SET_CHAR_HITPOINTS(tgt,HP -# dmg);
-// Is Target Dead?
-		$IF (HP <# 1)
-			{
-// Target
-				$SET_CHAR_STATUS(tgt,1);
-// Attacker
-				$DELETE_COMBATANT_SA($CombatantContext(),"monster_GiantWeaselDrain");
-				$DELETE_COMBATANT_SA($CombatantContext(),"monster_GiantWeaselLink");
-			};
-	}
-$ELSE
-	{
-// Someone Else Killed It
-// Attacker
-		$DELETE_COMBATANT_SA($CombatantContext(),"monster_GiantWeaselDrain");
-		$DELETE_COMBATANT_SA($CombatantContext(),"monster_GiantWeaselLink");
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_GiantWeaselDrainee</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7,$SA_PARAM_GET());
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
]]>
      </script>
      <script name="OnStartCombatantAction">
        <![CDATA[$VAR atk; // attacker
-$VAR i;
-$VAR foes;
-$VAR alive;
-foes = $GET_COMBATANT_SA($Myself(),"monster_GiantWeaselLink");
-i = 1;
-alive = "-1";
-atk = $DelimitedStringSubstring(foes, i);
-$WHILE (atk != "")
-	{
-		atk = $DelimitedStringSubstring(foes, i);
-		$IF ($GET_CHAR_STATUS(atk) ==# 0){alive = alive +# 1;};
-		i = i +# 1;
-	};
-// alive = alive -# 1;
-$IF (alive <# 1)
-	{
-		$DELETE_COMBATANT_SA($CombatantContext(),"monster_GiantWeaselDrainee");
-		$DELETE_COMBATANT_SA($CombatantContext(),"monster_GiantWeaselLink");
-		$DELETE_CHARACTER_SA($Myself(),"IsHugged");
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_GorgonBreath</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$SET_CHARACTER_SA($TargetContext(),"IsPetrified","Petrified");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_HellHoundAttack</name>
    <asl>
      <script name="StartCombatRound">
        <![CDATA[$GIVE_CHAR_ITEM( $CombatantContext(), "monsterHellHoundBreath" );
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_ImmuneCharm</name>
    ><asl>
      <script name="idk">
        <![CDATA[\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_ImmuneCold</name>
    ><asl>
      <script name="idk">
        <![CDATA[\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_ImmuneElectricity</name>
    ><asl>
      <script name="idk">
        <![CDATA[\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_ImmuneFear</name>
    ><asl>
      <script name="idk">
        <![CDATA[\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_ImmuneFire</name>
    ><asl>
      <script name="idk">
        <![CDATA[\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_ImmuneHold</name>
    ><asl>
      <script name="idk">
        <![CDATA[\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_ImmunePoison</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$SET_CHARACTER_SA($TargetContext(),"IsImmunePoison","");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_ImmuneSleep</name>
    ><asl>
      <script name="idk">
        <![CDATA[\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_ImmuneSpellsGreenSlime</name>
    <asl>
      <script name="ComputeDamage">
        <![CDATA[$IF (($SA_SPELL_GET("DamageMagical") != "cold") || ($SA_SPELL_GET("DamageMagical") != "fire")){ $RETURN "0";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_ImmuneSpellsIronGolem</name>
    <asl>
      <script name="DoesSpellAttackSucceed">
        <![CDATA[$IF ($SA_SPELL_GET("DamageMagical") == "electricity")
-  {$SET_COMBATANT_SA($TargetContext(),"IsSlow",$GET_PARTY_TIME() +# 3);}
-$ELSE {$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_KuoToaFireSave</name>
    <asl>
      <script name="DoesSpellAttackSucceed">
        <![CDATA[$IF ($GET_SPELL_SA($SpellContext(), "DamageMagical") == "fire")
-	{$SkillAdj($CombatantContext(), "Save Vs SP", "", "+", "2");};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_KuoToaMagicMissile</name>
    <asl>
      <script name="ComputeSpellDamage">
        <![CDATA[$IF ($SpellContext() == "Magic Missile"){$RETURN "1";};
-$IF ($SpellContext() == "Magic Missile|Ranger"){$RETURN "1";};
-$IF ($SpellContext() == "monsterMageMagicMissile"){$RETURN "1";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_LichFear</name>
    <asl>
      <script name="CheckProximity">
        <![CDATA[$VAR me;
-$VAR it;
-$VAR nameMe;
-$VAR nameIt;
-me = $IndexOf($CombatantContext());
-it = $GET_HOOK_PARAM(5);
-nameMe = $GET_CHAR_NAME(me);
-nameIt = $GET_CHAR_NAME(it);
-$IF ($GET_CHAR_ASL(me,"side") == $GET_CHAR_ASL(it,"side")){$RETURN;};
-$IF (nameMe != "Lich" && nameIt == "Lich")
-	{
-		$IF ($VisualDistance(me,it) <# 7 || $GET_CHAR_ASL(me,"lichfear") == 1)
-			{
-				$SET_COMBATANT_SA($CombatantContext(),"IsLichFear",$GET_PARTY_TIME() +# $RANDOM(4) +# 1);
-				$SET_CHAR_ASL(me,"lichfear","");
-				$RETURN $SA_REMOVE();
-			};
-	};
-$IF (nameMe == "Lich" && nameIt != "Lich")
-	{
-		$IF ($VisualDistance(me,it) <# 7 && $GET_CHAR_NAME(it) != "Lich"){$SET_CHAR_ASL(it,"lichfear",1);};
-	};
]]>
      </script>
      <script name="ComputeDamage">
        <![CDATA[$VAR tgt; // target
-tgt = $IndexOf($TargetContext());
-$IF ($GET_CHAR_ASL(tgt,"lichfear") == 1 && $GET_COMBATANT_SA($TargetContext(),"monster_LichFear") != "-?-?-")
-	{
-		$SET_CHAR_ASL(tgt,"lichfear","");
-		$RETURN $GET_HOOK_PARAM(5) +# ($GET_CHAR_HITPOINTS(tgt));
-	};
]]>
      </script>
      <script name="DoesAttackSucceed">
        <![CDATA[$VAR tgt; // target
-tgt = $IndexOf($TargetContext());
-$IF ($GET_CHAR_ASL(tgt,"lichfear") == 1 && $GET_COMBATANT_SA($TargetContext(),"monster_LichFear") != "-?-?-")
-	{$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) +# 30);};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)){$RETURN "Y";}
-$ELSE {$RETURN "N";};
]]>
      </script>
      <script name="IsCombatReady">
        <![CDATA[$VAR me;
-$VAR i;
-$VAR sideset;
-$VAR set;
-me = $IndexOf($CombatantContext());
-set = $GET_CHAR_ASL(me,"lichfear");
-$IF ($GET_CHAR_ASL(me,"side") == 1){sideset = 3;}
-$ELSE{sideset = 5;};
-i = $NextCreatureIndex("",sideset);
-$WHILE (i != "")
-	{
-		$IF ($GET_CHAR_NAME(i) == "Lich" && $VisualDistance(me,i) <# 7){set = 1;};
-		$IF (set == 1)
-			{
-				$SET_COMBATANT_SA($CombatantContext(),"IsLichFear",$GET_PARTY_TIME() +# $RANDOM(4) +# 1);
-				$SET_CHAR_ASL(me,"lichfear","");
-				$RETURN $SA_REMOVE();
-			};
-		i = $NextCreatureIndex(i,sideset);
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_LightSusceptible</name>
    <asl>
      <script name="DoesAttackSucceed">
        <![CDATA[$VAR par5;
-par5 = $GET_HOOK_PARAM(5);
-$IF ($GET_CHARACTER_SA($Myself(), "light") != "-?-?-"){$SET_HOOK_PARAM(5, par5 -# 1);};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_MaridColdResistance</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Cold Resistant");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="GetAdjMaxMovement">
        <![CDATA[$VAR item; $VAR itmNon; $VAR monster; $VAR monNon; $VAR resist; $VAR par5;
-item = $SA_ITEM_GET("DamageMagical");
-itmNon = $SA_ITEM_GET("DamageNonMagical");
-monster = $SA_MONSTERTYPE_GET("DamageMagical");
-monNon = $SA_MONSTERTYPE_GET("DamageNonMagical");
-$IF (item == "-?-?-") && (itmNon == "-?-?-") && (monster == "-?-?-") && (monNon == "-?-?-")) {$RETURN;};
-$IF (item != "-?-?-") {resist = item;};
-$IF (itmNon != "-?-?-") {resist = itmNon;};
-$IF (monster != "-?-?-") {resist = monster;};
-$IF (monNon != "-?-?-") {resist = monNon;};
-par5 = $GET_HOOK_PARAM(5);
-$IF (immune == "cold") {$RETURN par5 /# 4 *# 3;};
]]>
      </script>
      <script name="ComputeSpellDamage">
        <![CDATA[$VAR spell; $VAR splNon; $VAR resist; $VAR par5;
-spell = $SA_SPELL_GET("DamageMagical");
-splNon = $SA_SPELL_GET("DamageNonMagical");
-$IF ((spell == "-?-?-") && (splNon == "-?-?-")){$RETURN;};
-$IF (spell != "-?-?-") {resist = spell;};
-$IF (splNon != "-?-?-") {resist = splNon;};
-par5 = $GET_HOOK_PARAM(5);
-$IF (resist == "cold") {$RETURN par5 /# 4 *# 3;};
]]>
      </script>
      <script name="DoesAttackSucceed">
        <![CDATA[$IF (($GET_HOOK_PARAM(5) +# 2) <=# $GET_HOOK_PARAM(6)) {$RETURN "N";};
]]>
      </script>
      <script name="DoesSpellAttackSucceed">
        <![CDATA[$IF (($GET_HOOK_PARAM(5) +# 2) <=# $GET_HOOK_PARAM(6)) {$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_MaridFireVulnerability</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, "Vulnerable to Fire");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="GetAdjMaxMovement">
        <![CDATA[$VAR item; $VAR itmNon; $VAR monster; $VAR monNon; $VAR vuln; $VAR par5;
-item = $SA_ITEM_GET("DamageMagical");
-itmNon = $SA_ITEM_GET("DamageNonMagical");
-monster = $SA_MONSTERTYPE_GET("DamageMagical");
-monNon = $SA_MONSTERTYPE_GET("DamageNonMagical");
-$IF (item == "-?-?-") && (itmNon == "-?-?-") && (monster == "-?-?-") && (monNon == "-?-?-")) {$RETURN;};
-$IF (item != "-?-?-") {vuln = item;};
-$IF (itmNon != "-?-?-") {vuln = itmNon;};
-$IF (monster != "-?-?-") {vuln = monster;};
-$IF (monNon != "-?-?-") {vuln = monNon;};
-par5 = $GET_HOOK_PARAM(5);
-$IF (vuln == "fire") {$RETURN par5 /# 4 *# 5;};
]]>
      </script>
      <script name="ComputeSpellDamage">
        <![CDATA[$VAR spell; $VAR splNon; $VAR vuln; $VAR par5;
-spell = $SA_SPELL_GET("DamageMagical");
-splNon = $SA_SPELL_GET("DamageNonMagical");
-$IF ((spell == "-?-?-") && (splNon == "-?-?-")){$RETURN;};
-$IF (spell != "-?-?-") {vuln = spell;};
-$IF (splNon != "-?-?-") {vuln = splNon;};
-par5 = $GET_HOOK_PARAM(5);
-$IF (vuln == "fire") {$RETURN par5 /# 4 *# 5;};
]]>
      </script>
      <script name="DoesAttackSucceed">
        <![CDATA[$IF (($GET_HOOK_PARAM(5) -# 1) <=# $GET_HOOK_PARAM(6)) {$RETURN "N";};
]]>
      </script>
      <script name="DoesSpellAttackSucceed">
        <![CDATA[$IF (($GET_HOOK_PARAM(5) -# 1) <=# $GET_HOOK_PARAM(6)) {$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_ModronElementalResistance</name>
    <asl>
      <script name="ComputeDamage">
        <![CDATA[$VAR element;
-element = $SA_ITEM_GET("DamageMagical");
-$IF (element == ("acid" || "cold" || "fire")){$RETURN $GET_HOOK_PARAM(5) /# 6 *# 5;};
]]>
      </script>
      <script name="ComputeSpellDamage">
        <![CDATA[$VAR element;
-element = $SA_SPELL_GET("DamageMagical");
-$IF (element == ("acid" || "cold" || "fire")){$RETURN $GET_HOOK_PARAM(5) /# 6 *# 5;};
]]>
      </script>
      <script name="DoesAttackSucceed">
        <![CDATA[$VAR par5;
-$VAR ele;
-par5 = $GET_HOOK_PARAM(5);
-ele = $SA_SPELL_GET("DamageMagical");
-$IF (ele == ("acid" || "cold" || "fire")){$SET_HOOK_PARAM(5,par5 -# 1);};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_MummyFear</name>
    <asl>
      <script name="CheckProximity">
        <![CDATA[$VAR me;
-$VAR it;
-$VAR nameMe;
-$VAR nameIt;
-me = $IndexOf($CombatantContext());
-it = $GET_HOOK_PARAM(5);
-nameMe = $GET_CHAR_NAME(me);
-nameIt = $GET_CHAR_NAME(it);
-$IF ($GET_CHAR_ASL(me,"side") == $GET_CHAR_ASL(it,"side")){$RETURN;};
-$IF (nameMe != "Mummy" && nameIt == "Mummy")
-	{
-		$IF ($VisualDistance(me,it) <# 7 || $GET_CHAR_ASL(me,"mummyfear") == 1)
-			{
-				$SET_COMBATANT_SA($CombatantContext(),"IsMummyFear",$GET_PARTY_TIME() +# $RANDOM(4) +# 1);
-				$SET_CHAR_ASL(me,"mummyfear","");
-				$RETURN $SA_REMOVE();
-			};
-	};
-$IF (nameMe == "Mummy" && nameIt != "Mummy")
-	{
-		$IF ($VisualDistance(me,it) <# 7 && $GET_CHAR_NAME(it) != "Mummy"){$SET_CHAR_ASL(it,"mummyfear",1);};
-	};
]]>
      </script>
      <script name="ComputeDamage">
        <![CDATA[$VAR tgt; // target
-tgt = $IndexOf($TargetContext());
-$IF ($GET_CHAR_ASL(tgt,"mummyfear") == 1 && $GET_COMBATANT_SA($TargetContext(),"monster_MummyFear") != "-?-?-")
-	{
-		$SET_CHAR_ASL(tgt,"mummyfear","");
-		$RETURN $GET_HOOK_PARAM(5) +# ($GET_CHAR_HITPOINTS(tgt));
-	};
]]>
      </script>
      <script name="DoesAttackSucceed">
        <![CDATA[$VAR tgt; // target
-tgt = $IndexOf($TargetContext());
-$IF ($GET_CHAR_ASL(tgt,"mummyfear") == 1 && $GET_COMBATANT_SA($TargetContext(),"monster_MummyFear") != "-?-?-")
-  {$SET_HOOK_PARAM(6,$GET_HOOK_PARAM(6) +# 30);};
-$IF ($GET_HOOK_PARAM(5) >=# $GET_HOOK_PARAM(6)){$RETURN "Y";}
-$ELSE {$RETURN "N";};
]]>
      </script>
      <script name="IsCombatReady">
        <![CDATA[$VAR me;
-$VAR i;
-$VAR sideset;
-$VAR set;
-me = $IndexOf($CombatantContext());
-set = $GET_CHAR_ASL(me,"mummyfear");
-$IF ($GET_CHAR_ASL(me,"side") == 1){sideset = 3;}
-$ELSE{sideset = 5;};
-i = $NextCreatureIndex("",sideset);
-$WHILE (i != "")
-	{
-		$IF ($GET_CHAR_NAME(i) == "Mummy" && $VisualDistance(me,i) <# 7){set = 1;};
-		$IF (set == 1)
-			{
-				$SET_COMBATANT_SA($CombatantContext(),"IsMummyFear",$GET_PARTY_TIME() +# $RANDOM(4) +# 1);
-				$SET_CHAR_ASL(me,"mummyfear","");
-				$RETURN $SA_REMOVE();
-			};
-		i = $NextCreatureIndex(i,sideset);
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_PlayerControl</name>
    <asl>
      <script name="AutoAction">
        <![CDATA[$RETURN "CP";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_Poison</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR time;
-$VAR tgt; // target
-time = $GET_PARTY_TIME();
-tgt = $IndexOf($TargetContext());
-$IF ($GET_CHARACTER_SA($TargetContext(),"IsImmunePoison") != "-?-?-"){$RETURN;};
-$IF ($GET_CHARACTER_SA($TargetContext(),"IsProtectedPoisonCaster") != "-?-?-"){$RETURN;};
-$IF ($GET_CHARACTER_SA($TargetContext(),"IsProtectedPoisonTarget") != "-?-?-"){$RETURN;};
-$SET_CHARACTER_SA($TargetContext(),"IsPoisoned",time);
-$SET_CHAR_STATUS(tgt,9);
-$SET_CHAR_HITPOINTS(tgt,"-1");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_RakshasaSpellImmunity</name>
    <asl>
      <script name="DoesSpellAttackSucceed">
        <![CDATA[$IF ($GET_SPELL_Level($SpellContext()) <# 9){$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_RakshasaVulnerability</name>
    <asl>
      <script name="ComputeDamage">
        <![CDATA[$VAR tgt;
-tgt = $IndexOf($TargetContext());
-$IF ($ItemContext() == "Bolt|1"){$SET_CHAR_HITPOINTS(tgt,-11);$SET_CHAR_STATUS(tgt,2);};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_RearClawRake1</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$SET_COMBATANT_SA($AttackerContext(),"CombatRoundStart",1);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_RearClawRake2</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR tgt; // target
-$VAR HP; // hit points
-$VAR name;
-$VAR dmg;
-$VAR i;
-$VAR AC;
-$VAR TH;
-atk = $IndexOf($AttackerContext());
-tgt = $IndexOf($TargetContext());
-HP = $GET_CHAR_HITPOINTS(tgt);
-$IF (HP <# 1) {$RETURN;};
-$IF ($GET_COMBATANT_SA($AttackerContext(),"CombatRoundStart") ==# 1)
-	{
- 		i = 0;
-		AC = $GET_CHAR_AC(tgt);
-		TH = $GET_CHAR_THAC0(atk);
-		$WHILE (i <# 2)
-			{
-				$IF($RANDOM(20) +# 1 >=# TH -# AC)
-					{
-						name = $GET_CHAR_NAME(atk);
-						$IF (name == "Giant Lynx"){dmg = ($RANDOM(3) +# 1);};
-						$IF (name == "Leopard"||name == "Mountain Lion"){dmg = ($RANDOM(4) +# 1);};
-						$IF (name == "Jaguar"||name == "Weretiger"){dmg = ($RANDOM(4) +# 2);};
-						$IF (name == "Lion"){dmg = ($RANDOM(6) +# 2);};
-						$IF (name == "Spotted Lion"||name == "Tiger"||name == "Sabre-tooth Tiger"){dmg = ($RANDOM(4) +# $RANDOM(4) +# 2);};
-						$SET_CHAR_HITPOINTS(tgt,HP -# dmg);
-					};
-				i = i +# 1;
-			};
-		$IF (HP<# 1)
-			{
-				$IF (HP <# "-9"){$SET_CHAR_STATUS(tgt,2);}
-				$ELSE{$SET_CHAR_STATUS(tgt,9);};
-			};
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_RearClawRakeCat1</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$SET_COMBATANT_SA($AttackerContext(),"CombatRoundStart",1);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_RearClawRakeCat2</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR tgt; // target
-$VAR HP; // hit points
-$VAR nom;
-$VAR dmg;
-$VAR i;
-$VAR AC;
-$VAR TH;
-atk = $IndexOf($AttackerContext());
-tgt = $IndexOf($TargetContext());
-HP = $GET_CHAR_HITPOINTS(tgt);
-$IF (HP <# 1) {$RETURN;};
-$IF ($GET_COMBATANT_SA($AttackerContext(),"CombatRoundStart") ==# 1)
-	{
- 		i = 0;
-		AC = $GET_CHAR_AC(tgt);
-		TH = $GET_CHAR_THAC0(atk);
-		$IF($RANDOM(20) +# 1 >=# TH -# AC)
-			{
-				nom = $GET_CHAR_NAME(atk);
-				$IF (nom == "Cat"){dmg = ($RANDOM(2) +# 1);};
-				$IF (nom == "Wild Cat"){dmg = ($RANDOM(2) +# $RANDOM(2) +# 2);};
-				$IF (nom == "Cheetah"){dmg = ($RANDOM(2) +# $RANDOM(2) +# 2);};
-				$SET_CHAR_HITPOINTS(tgt,HP -# dmg);
-			};
-		$IF (HP<# 1)
-			{
-				$IF (HP <# "-9"){$SET_CHAR_STATUS(tgt,2);}
-				$ELSE{$SET_CHAR_STATUS(tgt,9);};
-			};
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_Regeneration</name>
    <asl>
      <script name="StartCombatRound">
        <![CDATA[$VAR chr; // character
-$VAR hp; // hit points
-chr = $IndexOf($CharacterContext());
-hp = $GET_CHAR_HITPOINTS(chr);
-$IF (hp >=# $GET_CHAR_MAXHITPOINTS(chr)){$RETURN;};
-$SET_CHAR_HITPOINTS(chr, hp +# $SA_PARAM_GET());
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_Revulsion</name>
    <asl>
      <script name="CheckProximity">
        <![CDATA[$VAR tgt; // target
-$VAR myself;
-$VAR range;
-$VAR distance;
-$VAR saveVsPoison;
-$VAR roll;
-$IF ($GET_CHAR_NAME($MyIndex()) == "Troglodyte"){$RETURN;};
-$IF ($SA_COMBATANT_GET("ImmuneRevulsion") != "-?-?-"){$RETURN;};
-tgt = $GET_HOOK_PARAM(5);
-myself = $GET_HOOK_PARAM(6);
-range = $SA_PARAM_GET();
-distance = $VisualDistance(tgt, myself);
-$IF (range <# distance) {$RETURN;};
-saveVsPoison = $SkillAdj($CombatantContext(), "Save Vs PPDM", "monster", "F", "");
-roll = $RANDOM(20) +# 1;
-$IF (saveVsPoison ># roll){$SET_CHAR_THAC0(tgt,($GET_CHAR_THAC0(tgt) +# 2));}
-$ELSE{$SET_COMBATANT_SA($CombatantContext(), "ImmuneRevulsion", 4);};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_SlimeWeakness</name>
    ><asl>
      <script name="idk">
        <![CDATA[\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_SpellImmunity</name>
    ><asl>
      <script name="idk">
        <![CDATA[Parameters = "parameter is delimited string";
]]>
      </script>
      <script name="DoesSpellAttackSucceed">
        <![CDATA[$VAR splList;
-$VAR sNum;
-$VAR spl;
-$VAR count;
-splList = $SA_PARAM_GET();
-sNum = $DelimitedStringCount(splList);
-$WHILE (count <=# sNum)
-	{
-		spl = $DelimitedStringSubstring(splList,count);
-		$IF ($SpellContext() == spl){$RETURN "N";};
-		count = count +# 1;
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_StirgeAttack</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR tgt; // target
-$VAR link;
-atk = $IndexOf($AttackerContext());
-tgt = $IndexOf($TargetContext());
-// Attacker
-$SET_COMBATANT_SA($AttackerContext(),"monster_StirgeDrain","");
-$IF ($GET_COMBATANT_SA($AttackerContext(),"monster_StirgeBloodCap") == "-?-?-")
-	{
-		$SET_COMBATANT_SA($AttackerContext(),"monster_StirgeBloodCap",12);
-	};
-$SET_COMBATANT_SA($AttackerContext(),"monster_StirgeLink",tgt);
-// Target
-$SET_COMBATANT_SA($TargetContext(),"monster_StirgeDrainee","");
-$SET_COMBATANT_SA($TargetContext(),"IsHugged",1);
-// Link
-link = $GET_COMBATANT_SA($TargetContext(),"monster_StirgeLink");
-$IF (link == "-?-?-"){$SET_COMBATANT_SA($TargetContext(),"monster_StirgeLink","$255$" + atk);}
-$ELSE
-	{
-		link = link + "$" + atk;
-		$SET_COMBATANT_SA($TargetContext(),"monster_StirgeLink",link);
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_StirgeDrain</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7,$SA_PARAM_GET());
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
]]>
      </script>
      <script name="GetAdjMaxMovement">
        <![CDATA[$RETURN 0;
]]>
      </script>
      <script name="GetNumberOfAttacks">
        <![CDATA[$RETURN 0;
]]>
      </script>
      <script name="OnStartCombatantAction">
        <![CDATA[$VAR tgt; // target
-$VAR name;
-$VAR cap;
-$VAR dmg;
-// Test Target and Compute & Apply Drain
-tgt = $GET_COMBATANT_SA($CombatantContext(),"monster_StirgeLink");
-name = $GET_CHAR_NAME(tgt);
-$IF ($GET_CHAR_STATUS(tgt) ==# 0) 
-  {
-    cap = $GET_COMBATANT_SA($CombatantContext(),"monster_StirgeBloodCap");
-    dmg = $RANDOM(4) +# 1;
-    $IF (cap <# dmg) {dmg = cap;};
-    cap = cap -# dmg;
-    $SET_COMBATANT_SA($CombatantContext(),"monster_StirgeBloodCap",cap);
-    $SET_CHAR_HITPOINTS(tgt, $GET_CHAR_HITPOINTS(tgt) -# dmg);
-// Is Target Dead?
-    $IF ($GET_CHAR_HITPOINTS(tgt) <# 1)
-      {
-// Target
-        $SET_CHAR_STATUS(tgt,1);
-// Attacker
-        $DELETE_COMBATANT_SA($CombatantContext(),"monster_StirgeDrain");
-        $DELETE_COMBATANT_SA($CombatantContext(),"monster_StirgeLink");
-      };
-// Am I Full?
-    $IF (cap <# 1)
-      {
-        $SET_CHAR_STATUS($MyIndex(),8);
-        $DELETE_COMBATANT_SA($CombatantContext(),"monster_StirgeDrain");
-        $DELETE_COMBATANT_SA($CombatantContext(),"monster_StirgeLink");
-        $SET_COMBATANT_SA($CombatantContext(),"IsFleeing","Fleeing Stirge");
-// Target
-        $DELETE_COMBATANT_SA($Name(name),"IsHugged");
-      };
-  }
-$ELSE
-  {
-// Someone Else Killed It
-// Attacker
-    $DELETE_COMBATANT_SA($CombatantContext(),"monster_StirgeDrain");
-    $DELETE_COMBATANT_SA($CombatantContext(),"monster_StirgeLink");
-  };
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_StirgeDrainee</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7,$SA_PARAM_GET());
-$SET_HOOK_PARAM( 6,"");
-$RETURN 1;
]]>
      </script>
      <script name="OnStartCombatantAction">
        <![CDATA[$VAR atk; // attacker
-$VAR i;
-$VAR foes;
-$VAR alive;
-foes = $GET_COMBATANT_SA($Myself(),"monster_StirgeLink");
-i = 1;
-alive = "-1";
-atk = $DelimitedStringSubstring(foes, i);
-$WHILE (atk != "")
-	{
-		atk = $DelimitedStringSubstring(foes, i);
-		$IF ($GET_CHAR_STATUS(atk) ==# 0){alive = alive +# 1;};
-		i = i +# 1;
-	};
-// alive = alive -# 1;
-$IF (alive <# 1)
-	{
-		$DELETE_COMBATANT_SA($CombatantContext(),"monster_StirgeDrainee");
-		$DELETE_COMBATANT_SA($CombatantContext(),"monster_StirgeLink");
-		$DELETE_COMBATANT_SA($Myself(),"IsHugged");
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_SummonSlaad</name>
    <asl>
      <script name="StartCombatRound">
        <![CDATA[$VAR round;
-round = $GetCombatRound();
-$IF (round ==# 3) {$AddCombatant("Red Slaad","1");};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_TrollGetUp</name>
    <asl>
      <script name="StartCombatRound">
        <![CDATA[$VAR cbt; // combatant
-$VAR hp; // hit points
-$VAR round;
-$VAR getUp;
-$VAR name;
-$VAR nt;
-$VAR x;
-$VAR y;
-$VAR mhp; // max hit point
-$VAR i;
-$VAR n;
-cbt = $SA_PARAM_GET();
-hp = $GET_CHAR_HITPOINTS(cbt);
-$IF (hp <=# 0)
-	{
-		name = $GET_CHAR_NAME(cbt);
-		round = $GetCombatRound();
-		$IF ($GET_COMBATANT_SA($CombatantContext(),"timeToRise") == "-?-?-")
-			{
-				getUp = ($RANDOM(6) +# $RANDOM(6) +# $RANDOM(6) +# 3);
-				$SET_COMBATANT_SA($CombatantContext(),"timeToRise", round +# getUp);
-			};
-		$IF (round ==# ($SA_COMBATANT_GET("timeToRise")))
-			{
-				i = $NextCreatureIndex("",0);
-				$WHILE (i != "")
-					{
-						n = i;
-						i = $NextCreatureIndex(i,0);
-					};
-				nt = n +# 1;
-				x = $CombatantLocation(cbt,"X");
-				y = $CombatantLocation(cbt,"Y");
-				mhp = $GET_CHAR_MAXHITPOINTS(cbt);
-				$AddCombatant(name,0);
-				$TeleportCombatant(nt,x,y);
-				$SET_CHAR_MAXHITPOINTS(nt,mhp); 
-				$SET_CHAR_HITPOINTS(nt,mhp);
-			};
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_TrollRegeneration</name>
    <asl>
      <script name="StartCombatRound">
        <![CDATA[$VAR tgt;
-$VAR currHP;
-$VAR round;
-tgt = $IndexOf($CombatantContext());
-currHP = $GET_CHAR_HITPOINTS(tgt);
-round = $GetCombatRound();
-$IF (currHP <# 42)
-	{
-		$IF ($SA_COMBATANT_GET("timeToRegen") == "-?-?-")
-		{
-			$SET_COMBATANT_SA($CombatantContext(),"timeToRegen",round +# 3);
-		};
-	};
-$IF (round ==# $SA_COMBATANT_GET("timeToRegen"))
-	{
-		$RETURN $SET_COMBATANT_SA($CombatantContext(),"monster_Regeneration",$SA_PARAM_GET());
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_UnicornSavingThrows</name>
    <asl>
      <script name="CreateMonsterCombatant">
        <![CDATA[$SkillAdj($CharacterContext(), "Save Vs BR", "", "F", "11");
-$SkillAdj($CharacterContext(), "Save Vs PP", "", "F", "9");
-$SkillAdj($CharacterContext(), "Save Vs PPDM", "", "F", "11");
-$SkillAdj($CharacterContext(), "Save Vs RSW", "", "F", "7");
-$SkillAdj($CharacterContext(), "Save Vs SP", "", "F", "8");
\(END)
// saving throw matrices DMG p79

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_VulnerableToHolyWater</name>
    <asl>
      <script name="ComputeDamage">
        <![CDATA[$VAR vulnHolyWater;
-vulnHolyWater = $SA_ITEM_GET("item_HolyWater");
-$IF (vulnHolyWater >=# 0){$RETURN $RANDOM(4) +# $RANDOM(4) +# 2;};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_WeaponDamageOnlyOne</name>
    <asl>
      <script name="ComputeDamage">
        <![CDATA[$VAR oneDamage;
-oneDamage = $SA_ITEM_GET("item_MagicalWespon");
-$IF (oneDamage >=# 3){$RETURN "1";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_WeaponImmunity</name>
    <asl>
      <script name="ComputeDamage">
        <![CDATA[$VAR par5;
-$VAR immun;
-$VAR item;
-$VAR mlev;
-$VAR list;
-par5 = $GET_HOOK_PARAM(5);
-immun = $GET_COMBATANT_SA($TargetContext(),"monster_WeaponImmunity");
-item = $SA_ITEM_GET("item_MagicalWeapon");
-$IF (item == "-?-?-"){item = 0;};
-$IF (immun != "-?-?-")
-	{
-		$IF (item == "-?-?-")
-			{
-				mlev = $GET_COMBATANT_SA($AttackerContext(),"monsterLevel");
-				$IF (mlev != "-?-?-")
-					{
-						list = "$0$0$0$0$0$1$1$2$2$3$3";
-						$IF (mlev <# 11){item = $DelimitedStringSubstring(list,mlev);}
-						$ELSE {item = 4;};
-					};
-			};
-	};
-$IF (item <# immun){$SET_HOOK_PARAM(5,"0");};
DoesAttackSucceed = $VAR atk; // attacker
-$VAR item;
-$VAR mlev;
-$VAR list;
-$VAR name;
-$VAR par5; // Hook parameter 5
-$VAR par6; // Hook parameter 6
-par5 = $GET_HOOK_PARAM(5);
-par6 = $GET_HOOK_PARAM(6);
-name = $GET_CHAR_NAME($IndexOf($TargetContext()));
-$IF ($GET_MONSTERTYPE_SA(name,"monster_WeaponImmunity") != "-?-?-")
-	{
-		atk = $IndexOf($AttackerContext());
-		item = $SA_ITEM_GET("item_MagicalWeapon");
-		$IF ($SA_ITEM_GET("AdjustBonus") != "-?-?-"){item = $GET_HOOK_PARAM(7);};
-		$IF ($GET_MONSTERTYPE_SA(name,"vulnSilver") != "-?-?-" && $SA_ITEM_GET("item_SilverWeapon") != "-?-?-")
-			{item = 5;};
- 		$IF (item == "-?-?-")
-			{
-				mlev = $GET_MONSTERTYPE_SA($GET_CHAR_NAME(atk),"monsterLevel");
-				$IF (mlev != "-?-?-")
-					{
-						list = "$0$0$0$0$0$1$1$2$2$3$3";
-						$IF (mlev <# 11)
-							{item = $DelimitedStringSubstring(list,mlev);}
-						$ELSE {item = 4;};
- 					};
-			};
-		$IF (item <# $SA_PARAM_GET()){$SET_HOOK_PARAM(6,par6 +# 90);};
-	};
-$IF (par5 >=# par6){$RETURN "Y";}
-$ELSE {$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_WeaponImmunityType</name>
    <asl>
      <script name="DoesAttackSucceed">
        <![CDATA[$VAR tgt; $VAR par5; $VAR par6;
-tgt = $IndexOf($TargetContext());
-par5 = $GET_HOOK_PARAM(5);
-par6 = $GET_HOOK_PARAM(6);
-$IF ($GET_MONSTERTYPE_SA($GET_CHAR_NAME(tgt),$SA_NAME()) != "-?-?-" && $SA_ITEM_GET("item_WeaponType") == $SA_PARAM_GET())
-	{$SET_HOOK_PARAM(6,par6 +# 90);};
-$IF (par5 >=# par6){$RETURN "Y";}
-$ELSE {$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_WeaponResistance</name>
    <asl>
      <script name="ComputeDamage">
        <![CDATA[$VAR atk; // attacker
-$VAR item;
-atk = $IndexOf($AttackerContext());
-item = $SA_ITEM_GET("item_MagicalWeapon");
-$IF ($GET_CHAR_TYPE(atk) != "@PC@" && $GET_CHAR_TYPE(atk) != "@NPC@") {$RETURN;};
-$IF (item == "-?-?-")
-	{
-		$IF (item <# $SA_PARAM_GET()){$RETURN $GET_HOOK_PARAM(5) /# 2;};
-	};
]]>
      </script>
      <script name="CreateMonsterCombatant">
        <![CDATA[$SET_COMBATANT_SA($CombatantContext(),"monster_WeaponResistance", $SA_PARAM_GET());
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>monster_WeaponResistanceType</name>
    <asl>
      <script name="ComputeDamage">
        <![CDATA[$VAR weapon;
-$VAR resist;
-weapon = $GET_ITEM_SA($ItemContext(),"item_WeaponType");
-resist = $SA_PARAM_GET();
-$IF (weapon == resist){$RETURN $GET_HOOK_PARAM(5) /# 2;};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>race_Elf</name>
    <asl>
      <script name="PostCreateCharacter">
        <![CDATA[$SET_CHARACTER_SA($CharacterContext(),"IsElf",1);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>race_HalfElf</name>
    <asl>
      <script name="PostCreateCharacter">
        <![CDATA[$SET_CHARACTER_SA($CharacterContext(),"IsCharmResistantMin","Half-Elf");
-$SET_CHARACTER_SA($CharacterContext(),"IsSleepResistantMin","Half-Elf");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>race_RaceSuppress</name>
    <asl>
      <script name="SelectCharacterRace">
        <![CDATA[$RETURN "Y";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>race_ShortSaveBonus</name>
    <asl>
      <script name="CreateMonsterCombatant">
        <![CDATA[$VAR chr; // character
-$VAR adj;
-chr = $IndexOf($CharacterContext());
-adj = $GET_CHAR_LIMITED_CON(chr) *# 2 /# 7;
-$SkillAdj($CharacterContext(),"Save Vs BR","shortSaveBonus","-",adj);
-$SkillAdj($CharacterContext(),"Save Vs PP","shortSaveBonus","-",adj);
-$SkillAdj($CharacterContext(),"Save Vs PPDM","shortSaveBonus","-",adj);
-$SkillAdj($CharacterContext(),"Save Vs RSW","shortSaveBonus","-",adj);
-$SkillAdj($CharacterContext(),"Save Vs SP","shortSaveBonus","-",adj);
]]>
      </script>
      <script name="PostCreateCharacter">
        <![CDATA[$VAR chr; // character
-$VAR adj;
-chr = $IndexOf($CharacterContext());
-adj = $GET_CHAR_LIMITED_CON(chr) *# 2 /# 7;
-$SkillAdj($CharacterContext(),"Save Vs BR","shortSaveBonus","-",adj);
-$SkillAdj($CharacterContext(),"Save Vs PP","shortSaveBonus","-",adj);
-$SkillAdj($CharacterContext(),"Save Vs PPDM","shortSaveBonus","-",adj);
-$SkillAdj($CharacterContext(),"Save Vs RSW","shortSaveBonus","-",adj);
-$SkillAdj($CharacterContext(),"Save Vs SP","shortSaveBonus","-",adj);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>SpecialGraphics</name>
    <asl>
      <script name="ABCD$CompassDisplay">
        <![CDATA[
-$IF ($GET_EVENT_Attribute(0,"NoCompass") != "-?-?-") {$RETURN;};
-$IF ($GET_PARTY_FACING() ==# 0)
-	{
-		$SET_HOOK_PARAM( 3, "border_Compass.png" );
-		$SET_HOOK_PARAM( 4, 272 );
-		$SET_HOOK_PARAM( 5, 263 );
-		$SET_HOOK_PARAM( 6, 0 );
-		$SET_HOOK_PARAM( 7, 0 );
-		$SET_HOOK_PARAM( 8, 78 );
-		$SET_HOOK_PARAM( 9, 46 );
-	};
-$IF ($GET_PARTY_FACING() ==# 1)
-	{
-		$SET_HOOK_PARAM( 3, "border_Compass.png" );
-		$SET_HOOK_PARAM( 4, 272 );
-		$SET_HOOK_PARAM( 5, 263 );
-		$SET_HOOK_PARAM( 6, 78 );
-		$SET_HOOK_PARAM( 7, 0 );
-		$SET_HOOK_PARAM( 8, 78 );
-		$SET_HOOK_PARAM( 9, 46 );
-	};
-$IF ($GET_PARTY_FACING() ==# 2)
-	{
-		$SET_HOOK_PARAM( 3, "border_Compass.png" );
-		$SET_HOOK_PARAM( 4, 272 );
-		$SET_HOOK_PARAM( 5, 263 );
-		$SET_HOOK_PARAM( 6, 156 );
-		$SET_HOOK_PARAM( 7, 0 );
-		$SET_HOOK_PARAM( 8, 78 );
-		$SET_HOOK_PARAM( 9, 46 );
-	};
-$IF ($GET_PARTY_FACING() ==# 3)
-	{
-		$SET_HOOK_PARAM( 3, "border_Compass.png" );
-		$SET_HOOK_PARAM( 4, 272 );
-		$SET_HOOK_PARAM( 5, 263 );
-		$SET_HOOK_PARAM( 6, 234 );
-		$SET_HOOK_PARAM( 7, 0 );
-		$SET_HOOK_PARAM( 8, 78 );
-		$SET_HOOK_PARAM( 9, 46 );
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_Attack</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$IF ($GET_CHARACTER_SA($AttackerContext(),"IsInvisible"))
-  {
-   $DELETE_CHARACTER_SA($AttackerContext(),"IsInvisibleSpell");
-   $DELETE_CHARACTER_SA($AttackerContext(),"IsInvisiblePotion");
-   $DELETE_COMBATANT_SA($AttackerContext(),"IsInvisible");
-  };
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_Barkskin</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR cls;
-$VAR atk; // attacker
-$VAR lvl;
-cls = $SA_PARAM_GET();
-atk = $IndexOf($AttackerContext());
-lvl = $GET_CHAR_Lvl(atk,cls);
-$IF (cls == "ranger") {lvl = lvl -# 7;};
-$SET_CHARACTER_SA($TargetContext(),"IsBarkskinned",$GET_PARTY_TIME() +# lvl +# 4);
-$SkillAdj($TargetContext(),"Save Vs BR","Barkskin","-","1");
-$SkillAdj($TargetContext(),"Save Vs PP","Barkskin","-","1");
-$SkillAdj($TargetContext(),"Save Vs PPDM","Barkskin","-","1");
-$SkillAdj($TargetContext(),"Save Vs RSW","Barkskin","-","1");
-$SkillAdj($TargetContext(),"Save Vs SP","Barkskin","-","1");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_Bless</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
]]>
      </script>
      <script name="Dispel SE">
        <![CDATA[$REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
]]>
      </script>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR mySide;
-$VAR tgt; // target
-mySide = $GET_CHARACTER_SA($AttackerContext(),"side");
-tgt = $IndexOf($TargetContext());
-$IF (mySide != "-?-?-")
-	{
-		$IF (mySide !=# $GET_CHARACTER_SA($TargetContext(),"side")){$RETURN;};
-		$IF ($VisualDistance(tgt, $IndexOf($NEAREST_ENEMY_TO($TargetContext()))) <# 2){$RETURN;};
-		$SET_CHARACTER_SA($TargetContext(),"IsBlessed",$GET_PARTY_TIME() +# 6);
-		$SET_COMBATANT_SA($TargetContext(),"IsBlessed1",1);
-	}
-$ELSE {$SET_CHARACTER_SA($TargetContext(),"IsBlessed",$GET_PARTY_TIME() +# 6);};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_Blind</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR tgt; // target
-atk = $IndexOf($AttackerContext());
-tgt = $IndexOf($TargetContext());
-$IF ($GET_CHARACTER_SA($TargetContext(),"saved")){$RETURN;};
-$IF ($RANDOM(20) +# 1 <# $GET_CHAR_THAC0(atk) -# $GET_CHAR_AC(tgt)){$RETURN;};
-$SET_CHARACTER_SA($TargetContext(),"IsBlind","Blind");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_Blink</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR lvl;
-atk = $IndexOf($AttackerContext());
-lvl = $GET_CHAR_Lvl(atk,"magicUser");
-$SET_CHARACTER_SA($AttackerContext(),"IsBlinking",$GET_PARTY_TIME() +# lvl);
-$IF ($GET_CHARACTER_SA($AttackerContext(),"side") != "-?-?-")
-	{
-		$SET_CHARACTER_SA($AttackerContext(),"IsBlinking1",1);
-		$SET_CHARACTER_SA($AttackerContext(),"IsBlinking2",1);
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_CauseDisease</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR tgt; // target
-$VAR minhp;
-atk = $IndexOf($AttackerContext());
-tgt = $IndexOf($TargetContext());
-$IF ($GET_CHARACTER_SA($TargetContext(),"saved") == 1){$RETURN;};
-$IF ($RANDOM(20) +# 1 <# $GET_CHAR_THAC0(atk) -# $GET_CHAR_AC(tgt)){$RETURN;};
-// Need a better To-Hit check;
-$IF ($GET_CHARACTER_SA($TargetContext(),"pcSTR") == "-?-?-")
-	{
-		$SET_CHARACTER_SA($TargetContext(),"pcSTR", $GET_CHAR_LIMITED_STR(tgt));
-		$SET_CHARACTER_SA($TargetContext(),"pcSTRMOD", $GET_CHAR_LIMITED_STRMOD(tgt));
-	};
-minhp = $GET_CHAR_MAXHITPOINTS(tgt) /# 10;
-$IF (minhp <# 1){minhp = 1;};
-$SET_CHARACTER_SA($TargetContext(),"minhp",minhp);
-$SET_CHARACTER_SA($TargetContext(),"IsDiseasedSpell",$GET_PARTY_TIME() +# (($RANDOM(6) +# 1) *# 10));
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_Charm</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$IF ($GET_CHARACTER_SA($TargetContext(),"saved")) {$RETURN;};
-$IF ($GET_CANBEHELDORCHARMED($TargetContext()) !=# 1){$RETURN;};
-$SetFriendly($IndexOf($TargetContext()), $GET_COMBATANT_SA($Myself(),"side"));
-$SET_COMBATANT_SA($TargetContext(),"IsCharmed","11");
-$SET_CHARACTER_SA($TargetContext(),"DispelLevel","11");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_CharmMonster</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR side;  // caster's side
-$VAR atk; // attacker/caster
-$VAR tgt; // target
-$VAR cLvl;  // caster level
-$VAR tNom;  // target name
-$VAR tLvl;   // target level
-$VAR mLvl;  // temporary target level
-$VAR cls; // caster baseclass
-$VAR tcls; // target baseclass
-$VAR opr;   // once per round
-$VAR rnd; // value of point pool
-$VAR tgtnum;// target number
-$IF ($GET_CANBEHELDORCHARMED($TargetContext()) !=# 1){$RETURN;};
-$IF ($GET_CHARACTER_SA($TargetContext(),"saved")){$RETURN;};
-atk = $IndexOf($AttackerContext());
-tgt = $IndexOf($TargetContext());
-opr = $GET_COMBATANT_SA($AttackerContext(),"CombatRoundStart");
-$IF (opr == "-?-?-" || opr == 0)
-	{
-		$SET_CHARACTER_SA($AttackerContext(),"CombatRoundStart",5);
-		$SET_CHARACTER_SA($AttackerContext(),"tgtnum",0);
-		$SET_CHARACTER_SA($AttackerContext(),"PointPool",$RANDOM(4) +# $RANDOM(4) +# 2);
-	};
-rnd = $GET_CHARACTER_SA($AttackerContext(), "PointPool");
-$IF (rnd <# 1){$RETURN;};
-cls = $SA_PARAM_GET();
-cLvl = $GET_CHAR_Lvl(atk,cls);
-side = $GET_CHARACTER_SA($AttackerContext(), "side");
-tNom = $GET_CHAR_NAME(tgt);
-mLvl = $GET_MONSTERTYPE_SA(tNom,"monsterLevel");
-$IF (mLvl != "-?-?-"){tLvl = mLvl;}
-$ELSE
-	{
-		tcls = $GetHighestLevelBaseclass(tgt);
-		tLvl = $GetBaseclassLevel(tgt, tcls);
-	};
-$SET_CHARACTER_SA($AttackerContext(), "tgtnum",$GET_COMBATANT_SA($AttackerContext(),"tgtnum") +# 1);
-tgtnum = $GET_CHARACTER_SA($AttackerContext(),"tgtnum");
-$IF (tgtnum != "-?-?-")
-	{
-		$IF (tLvl ># 3)
-			{
-				$SET_CHARACTER_SA($AttackerContext(),"PointPool",0);
-				$SetFriendly(tgt,side);
-				$SET_CHARACTER_SA($TargetContext(),"IsCharmed",cLvl);
-				$RETURN;
-			};
-	};
-$IF (tLvl ># rnd){$RETURN;}
-$ELSE
-	{
-		$SET_CHARACTER_SA($AttackerContext(),"PointPool",rnd -# tLvl);
-		$SetFriendly(tgt,side);
-		$SET_CHARACTER_SA($TargetContext(),"IsCharmed",cLvl);
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_CharmPerson</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR tgt; // target
-$VAR cls;
-$VAR lvl;
-tgt = $IndexOf($TargetContext());
-atk = $IndexOf($AttackerContext());
-$IF ($GET_CHARACTER_SA($TargetContext(),"saved")){$RETURN;};
-$IF ($GET_CANBEHELDORCHARMED($TargetContext()) != 1){$RETURN;};
-$IF ($GET_CHARACTER_SA($TargetContext(),"IsPerson") == "-?-?-"){$RETURN;};
-cls = $SA_PARAM_GET();
-lvl = $GET_CHAR_Lvl(atk,cls);
-$SetFriendly(tgt,$GET_COMBATANT_SA($Myself(),"side"));
-$SET_CHARACTER_SA($TargetContext(),"IsCharmed",lvl);
-$SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_CharmPersonOrMammal</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR tgt; // target
-$VAR tNom; // target name
-$VAR cls;
-$VAR lvl;
-tgt = $IndexOf($TargetContext());
-atk = $IndexOf($AttackerContext());
-tNom = $GET_CHAR_NAME(tgt);
-$IF ($GET_CHARACTER_SA($TargetContext(),"saved" )) {$RETURN;};
-$IF ($GET_CANBEHELDORCHARMED($TargetContext()) != 1){$RETURN;};
-$IF ($GET_MONSTERTYPE_SA(tNom,"monsterLevel") != "-?-?-")
-	{  //  MONSTERTYPE_SA checks go here
-		$IF ($GET_MONSTERTYPE_SA(tNom,"IsPerson") == "-?-?-" && $GET_ISMAMMAL($TargetContext()) != 1){$RETURN;};
-	};
-cls = $SA_PARAM_GET();
-lvl = $GET_CHAR_Lvl(atk,cls);
-$SetFriendly(tgt,$GET_COMBATANT_SA($Myself(),"side"));
-$SET_CHARACTER_SA($TargetContext(),"IsCharmed",lvl);
-$SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_CharmPlant</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR tgt; // target
-$VAR tNom; // target name
-$VAR cls;
-$VAR lvl;
-tgt = $IndexOf($TargetContext());
-atk = $IndexOf($AttackerContext());
-tNom = $GET_CHAR_NAME(tgt);
-$IF ($GET_CHARACTER_SA($TargetContext(),"saved" )) {$RETURN;};
-$IF ($GET_CANBEHELDORCHARMED($TargetContext()) != 1){$RETURN;};
-$IF ($GET_MONSTERTYPE_SA(tNom,"monsterLevel") != "-?-?-")
-	{  //  MONSTERTYPE_SA checks go here
-		$IF ($GET_MONSTERTYPE_SA(tNom,"IsPlant") == "-?-?-"){$RETURN;};
-	};
-cls = $SA_PARAM_GET();
-lvl = $GET_CHAR_Lvl(atk,cls);
-$SetFriendly(tgt,$GET_COMBATANT_SA($Myself(),"side"));
-$SET_CHARACTER_SA($TargetContext(),"IsCharmed",lvl);
-$SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_Cloudkill</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
]]>
      </script>
      <script name="Dispel SE">
        <![CDATA[$REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
]]>
      </script>
      <script name="SpellLingerBlockage">
        <![CDATA[$IF ($GET_HASPOISONIMMUNITY($CombatantContext()))
-  {$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_ColdResistant</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
]]>
      </script>
      <script name="Dispel SE">
        <![CDATA[$REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
]]>
      </script>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR cls;
-$VAR adj;
-$VAR lvl;
-$VAR exp; // expiration time
-atk = $IndexOf($AttackerContext());
-cls = $SA_PARAM_GET();
-adj = $GET_MONSTERTYPE_SA($AttackerContext(),"casterLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj;
-$SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-exp = $GET_PARTY_TIME() +# lvl;
-$SET_CHARACTER_SA($TargetContext(),"IsResistantCold",exp);
]]>
      </script>
      <script name="SpellDuration">
        <![CDATA[$SA_PARAM_SET($GET_HOOK_PARAM(5));
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_Confusion</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
]]>
      </script>
      <script name="Dispel SE">
        <![CDATA[$REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
]]>
      </script>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR tgt; // target
-$VAR monName;
-$VAR monLvl;
-$VAR opr; // once per round
-$VAR rnd;
-$VAR rnd2;
-$VAR cls;
-atk = $IndexOf($AttackerContext());
-tgt = $IndexOf($TargetContext());
-cls = $SA_PARAM_GET();
-$SET_CHARACTER_SA($TargetContext(),"DispelLevel", $GET_CHAR_Lvl(atk,cls));
-$IF ($GET_CHAR_STATUS(tgt) != 0){$RETURN;};
-monName = $GET_CHAR_NAME(tgt);
-$IF ($GET_MONSTERTYPE_SA(monName,"IsConfused") != "-?-?-" ||
-$GET_CHARACTER_SA($TargetContext(),"IsConfused") != "-?-?-"){$RETURN;};
-monLvl = $GET_MONSTERTYPE_SA(monName,"monsterLevel");
-$IF (monLvl != "-?-?-")
-	{
-		$IF (monLvl >=# 1){$SkillAdj($TargetContext(), "Save Vs SP", "spell", "B", 17 );};
-		$IF (monLvl >=# 3){$SkillAdj($TargetContext(), "Save Vs SP", "spell", "B", 16 );};
-		$IF (monLvl >=# 5){$SkillAdj($TargetContext(), "Save Vs SP", "spell", "B", 14 );};
-		$IF (monLvl >=# 7){$SkillAdj($TargetContext(), "Save Vs SP", "spell", "B", 13 );};
-		$IF (monLvl >=# 9){$SkillAdj($TargetContext(), "Save Vs SP", "spell", "B", 11 );};
-		$IF (monLvl >=# 11){$SkillAdj($TargetContext(), "Save Vs SP", "spell", "B", 10 );};
-		$IF (monLvl >=# 13){$SkillAdj($TargetContext(), "Save Vs SP", "spell", "B", 8 );};
-		$IF (monLvl >=# 15){$SkillAdj($TargetContext(), "Save Vs SP", "spell", "B", 7 );};
-		$IF (monLvl >=# 17){$SkillAdj($TargetContext(), "Save Vs SP", "spell", "B", 6 );};
-	};
-opr = $GET_CHARACTER_SA($AttackerContext(), "CombatRoundStart");
-$IF (opr  == "-?-?-")
-	{
-		$SET_CHARACTER_SA( $AttackerContext(), "CombatRoundStart",5);
-		rnd = (($RANDOM(4) +# 1) +# ($RANDOM(4) +# 1));
-		$SET_CHARACTER_SA( $AttackerContext(), "PointPool", rnd);
-	};
-opr = $GET_COMBATANT_SA($AttackerContext(), "CombatRoundStart");
-$IF (opr  <# 2)
-	{
-		$SET_CHARACTER_SA( $AttackerContext(), "CombatRoundStart", 3);
-		rnd = (($RANDOM(4) +# 1) +# ($RANDOM(4) +# 1));
-		$SET_CHARACTER_SA( $AttackerContext(), "PointPool", rnd);
-	};
-rnd = $GET_COMBATANT_SA( $AttackerContext(), "PointPool");
-$IF (rnd <# 1) {$RETURN;};
-rnd2 = ($RANDOM(20) +# 1);
-$IF ($SkillAdj($TargetContext(), "Save Vs SP", "spell", "F", "") ># rnd2)
-	{
-		$SET_CHARACTER_SA($TargetContext(),"IsConfusedExtended",1);
-		$SET_CHARACTER_SA($TargetContext(),"CombatRoundStart",1);
-	};
-rnd = $RANDOM(10) +# 1;
-$IF (rnd ==# 1){$SetFriendly(tgt,1);$RETURN;};
-$IF (rnd <=# 6){$SET_CHARACTER_SA($TargetContext(),"IsConfused","Confused");$RETURN;};
-$IF (rnd ==# 7){$SetFriendly(tgt,1);$RETURN;};
-$IF (rnd ==# 8){$SetFriendly(tgt,2);$RETURN;};
-$SetFriendly(tgt,2);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_Curse</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR tgt; // target
-$VAR cls;
-$VAR adj;
-$VAR lvl;
-$VAR exp; // expiration time
-$IF ($GET_CHARACTER_SA($TargetContext(),"saved")){$RETURN;};
-atk = $IndexOf($AttackerContext());
-tgt = $IndexOf($TargetContext());
-$IF ($RANDOM(20) +# 1 <# $GET_CHAR_THAC0(atk) -# $GET_CHAR_AC(tgt)){$RETURN;};
-cls = $SA_PARAM_GET();
-adj = $GET_CHARACTER_SA($AttackerContext(),"casterLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj;
-exp = $GET_PARTY_TIME() +# (10 *# lvl);
-$SET_CHARACTER_SA($TargetContext(),"IsBestowedCurse",exp);
-$SkillAdj($TargetContext(),"Save Vs BW","BestowCurse","+","4");
-$SkillAdj($TargetContext(),"Save Vs PPDM","BestowCurse","+","4");
-$SkillAdj($TargetContext(),"Save Vs SP","BestowCurse","+","4");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_CurseMinor</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
]]>
      </script>
      <script name="Dispel SE">
        <![CDATA[$REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
]]>
      </script>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR mySide;
-mySide = $GET_CHARACTER_SA($AttackerContext(),"side");
-$IF (mySide ==# $GET_CHARACTER_SA($TargetContext(),"side")){$RETURN;};
-$SET_CHARACTER_SA($TargetContext(),"IsCursed",$GET_PARTY_TIME() +# 6);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_DeathSpell</name>
    ><asl>
      <script name="idk">
        <![CDATA[\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_DetectMagic</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
]]>
      </script>
      <script name="Dispel SE">
        <![CDATA[$REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
]]>
      </script>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$SET_CHARACTER_SA($TargetContext(),"IsDetectingMagic",$GET_PARTY_TIME() +# $SA_SPELL_GET("time"));
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_DetectMagicMage</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker/caster
-$VAR cls;
-$VAR lvl;
-$VAR adj;
-atk = $IndexOf($AttackerContext());
-cls = $SA_PARAM_GET();
-adj = 0;
-$IF (cls == "ranger"){adj = 8;};
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj;
-$SET_CHARACTER_SA($TargetContext(),"IsDetectingMagic",$GET_PARTY_TIME() +# (lvl *# 2));
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_DimensionDoor</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-atk = $IndexOf($AttackerContext());
-$TeleportCombatant(atk,$GET_HOOK_PARAM(5),$GET_HOOK_PARAM(6));
]]>
      </script>
      <script name="IsValidTarget">
        <![CDATA[$VAR me;
-$VAR x0;
-$VAR y0;
-$VAR x1;
-$VAR y1;
-me = $IndexOf($Myself());
-x1 = $GET_HOOK_PARAM(5);
-y1 = $GET_HOOK_PARAM(6);
-x0 = $CombatantLocation(me,"X");
-y0 = $CombatantLocation(me,"Y");
-$IF ($IsLineOfSight(x0,y0,x1,y1,1) != "1"){$RETURN "N";}
-$ELSE{$RETURN "";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_Disease</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR tgt; // target
-tgt = $IndexOf($TargetContext());
-$IF ($GET_CHAR_Lvl(tgt,"paladin") >=# 1){$RETURN;};
-$IF($GET_CHARACTER_SA($TargetContext(),"IsImmuneDisease") != "-?-?-"){$RETURN;};
-$SET_CHARACTER_SA($TargetContext(),"IsDiseased","Diseased");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_Dispel</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker/caster
-$VAR tgt; // target
-$VAR cls; // caster's class (creator)
-$VAR cLvl; // caster's level (creator)
-$VAR iLvl; // caster's level (item)
-$VAR dLvl; // caster's level (destroyer)
-$VAR percent;
-$VAR rndm;
-atk = $IndexOf($AttackerContext());
-tgt = $IndexOf($TargetContext());
-cls = $SA_PARAM_GET();
-cLvl = $GET_CHARACTER_SA($TargetContext(),"DispelLevel");
-iLvl = $GET_CHARACTER_SA($TargetContext(),"DispelLevelItem");
-dLvl = $GET_CHAR_Lvl(atk,cls);
-rndm = $RANDOM(100) +# 1;
-// potions
-$IF (dLvl ># 21){$ForEachPossession($CharacterContext(),"item_Potion");};
-$IF (iLvl != "-?-?-"){cLvl = iLvl;};
-$IF (dLvl ># cLvl){percent = (dLvl -# cLvl) *# 5 +# 50;}
-$ELSE{percent = 50 -# (cLvl -# dLvl) *# 2;};
-$IF (rndm <=# percent){$ForEachPossession($CharacterContext(),"item_Potion");};
-// spells and spell effects
-$IF (dLvl ># cLvl){percent = (dLvl -# cLvl) *# 5 +# 50;}
-$ELSE{percent = 50 -# (cLvl -# dLvl) *# 2;};
-$IF (rndm <=# percent)
-	{
-		$RUN_CHAR_SCRIPTS(tgt,"Dispel");
-		$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
-		$RETURN;
-	};
]]>
      </script>
      <script name="SpellLingeringScripts">
        <![CDATA[$VAR cLvl; // caster's level (creator)
-$VAR dLvl; // caster's level (destroyer)
-$VAR percent;
-$VAR rndm;
-$IF ($GET_SPELL_SA($SpellContext(),"Dispelled") != "-?-?-"){ $RETURN "RemoveLinger"; };
-cLvl = $GET_HOOK_PARAM(7);
-dLvl = $GET_HOOK_PARAM(6);
-rndm = $RANDOM(100) +# 1;
-$IF (dLvl ># cLvl){percent = (dLvl -# cLvl) *# 5 +# 50;}
-$ELSE{percent = 50 -# (cLvl -# dLvl) *# 2;};
-$IF (rndm <=# percent){$RETURN "RemoveLinger";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_DispelEvil</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
]]>
      </script>
      <script name="Dispel SE">
        <![CDATA[$REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
]]>
      </script>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR lvl;
-atk = $IndexOf($AttackerContext());
-lvl = $GET_CHAR_Lvl(atk,$SA_PARAM_GET());
-$SET_CHARACTER_SA($TargetContext(),"IsDispellingEvil",$GET_PARTY_TIME() +# lvl);
-$SET_CHARACTER_SA($TargetContext(),"CanDispel",1);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_DispelGood</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
]]>
      </script>
      <script name="Dispel SE">
        <![CDATA[$REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
]]>
      </script>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR lvl;
-atk = $IndexOf($AttackerContext());
-lvl = $GET_CHAR_Lvl(atk,$SA_PARAM_GET());
-$SET_CHARACTER_SA($TargetContext(),"IsDispellingGood",$GET_PARTY_TIME() +# lvl);
-$SET_CHARACTER_SA($TargetContext(),"CanDispel",1);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_Drain</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR trgt; // trgt of draining
-$VAR bName; // name of baseclass
-$VAR bLvl; // level of baseclasses
-$VAR bDie; // type of die used for HP for baseclass
-$VAR bNum; // number of baseclasses in class
-$VAR name;
-$VAR monHit; // monster THAC0
-$VAR rand;
-$VAR drain; // amount of HP drained
-$VAR prevDrain; // previous Drains
-trgt = $IndexOf($TargetContext());
-bName = $GetHighestLevelBaseclass(trgt);
-bLvl = $GetBaseclassLevel(trgt,bName);
-name = $GET_CHAR_NAME(trgt);
-$SET_CHAR_Lvl(trgt,bName,bLvl -# 1);
-$IF ((bLvl -# 1) <=# 0)
-	{
-		$SET_CHAR_HITPOINTS(trgt,-11);
-		$SET_CHAR_MAXHITPOINTS(trgt,-11);
-		$SET_CHAR_STATUS(trgt,5); // status 5 = gone, PC cannot be raised or resurrected
-		$RETURN ;
-	};
-bDie = $RollHitPointDice(bName,bLvl,bLvl); 
-bNum = $DelimitedStringCount($GET_CHARACTER_SA($TargetContext(),"class_baseName"));
-$IF (bNum <# 1){bNum = 1;};
-rand = $RANDOM(bDie) +# 1;
-drain = rand /# bNum;
-$IF (drain <# 1){drain = 1;};
-$SET_CHAR_MAXHITPOINTS(trgt,$GET_CHAR_MAXHITPOINTS(trgt) -# drain);
-$IF ($GET_CHARACTER_SA($TargetContext(),"IsDrained") == "-?-?-")
-	{
-		$SET_CHARACTER_SA($TargetContext(),"IsDrained","#$" + bName + "$" + bLvl + "$" + drain + "#$99");
-	}
-$ELSE
-	{
-		prevDrain = $GET_CHARACTER_SA($TargetContext(),"IsDrained");
-		$SET_CHARACTER_SA($TargetContext(),"IsDrained","#$" + bName + "$" + bLvl + "$" + drain + prevDrain);
-	};
-$SET_CHAR_Exp(trgt,bName,$DAT_Baseclass_Experience(bName,bLvl -# 1));
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_DrainVamp</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR trgt; // trgt of draining
-$VAR bName; // name of baseclass
-$VAR bLvl; // level of baseclasses
-$VAR bDie; // type of die used for HP for baseclass
-$VAR bNum; // number of baseclasses in class
-$VAR name;
-$VAR monHit; // monster THAC0
-$VAR rand;
-$VAR drain; // amount of HP drained
-$VAR prevDrain; // previous Drains
-trgt = $IndexOf($TargetContext());
-bName = $GetHighestLevelBaseclass(trgt);
-bLvl = $GetBaseclassLevel(trgt,bName);
-name = $GET_CHAR_NAME(trgt);
-$SET_CHAR_Lvl(trgt,bName,bLvl -# 2);
-$IF ((bLvl -# 2) <=# 0)
-	{
-		$SET_CHAR_HITPOINTS(trgt,-11);
-		$SET_CHAR_MAXHITPOINTS(trgt,-11);
-		$SET_CHAR_STATUS(trgt,5); // status 5 = gone, PC cannot be raised or resurrected
-		$RETURN ;
-	};
-bDie = $RollHitPointDice(bName,bLvl,bLvl); 
-bNum = $DelimitedStringCount($GET_CHARACTER_SA($TargetContext(),"class_baseName"));
-$IF (bNum <# 1){bNum = 1;};
-rand = $RANDOM(bDie) +# 1;
-drain = rand /# bNum;
-$IF (drain <# 1){drain = 1;};
-$SET_CHAR_MAXHITPOINTS(trgt,$GET_CHAR_MAXHITPOINTS(trgt) -# drain);
-$IF ($GET_CHARACTER_SA($TargetContext(),"IsDrained") == "-?-?-")
-	{
-		$SET_CHARACTER_SA($TargetContext(),"IsDrained","#$" + bName + "$" + bLvl + "$" + drain + "#$99");
-	}
-$ELSE
-	{
-		prevDrain = $GET_CHARACTER_SA($TargetContext(),"IsDrained");
-		$SET_CHARACTER_SA($TargetContext(),"IsDrained","#$" + bName + "$" + bLvl + "$" + drain + prevDrain);
-	};
-$SET_CHAR_Exp(trgt,bName,$DAT_Baseclass_Experience(bName,bLvl -# 1));
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_Enfeeble</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR lvl;
-$VAR cls;
-$IF ($GET_CHARACTER_SA($TargetContext(),"saved")){$RETURN;};
-atk = $IndexOf($AttackerContext());
-cls = $SA_PARAM_GET();
-lvl = $GET_CHAR_Lvl(atk,cls);
-$SET_CHARACTER_SA($TargetContext(),"enfeebled",100 -# (22 +# lvl));
-$SET_CHARACTER_SA($TargetContext(),"IsEnfeebled",$GET_PARTY_TIME() +# lvl);
-$SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_Enlarge</name>
    <asl>
      <script name="Dispel SE">
        <![CDATA[$REMOVE_SPELL_EFFECT($CharacterContext(), $GET_HOOK_PARAM(5));
]]>
      </script>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker/caster
-$VAR tgt; // target
-$VAR str;
-$VAR strMod;
-$VAR adjStr;
-$VAR adjStrMod;
-$VAR cls;
-$VAR adj;
-$VAR lvl;
-$VAR list1;
-$VAR list2;
-$IF (($GET_CHARACTER_SA($TargetContext(),"reduced") || $GET_MONSTERTYPE_SA($MonsterTypeContext(),"reduced")) != "-?-?-")
-	{$RETURN $RUN_CHAR_SCRIPTS(tgt,"Dispel reduced");};
-atk = $IndexOf($AttackerContext());
-tgt = $IndexOf($TargetContext());
-str = $GET_CHAR_LIMITED_STR(tgt);
-strMod = $GET_CHAR_LIMITED_STRMOD(tgt);
-adjStr = 18 -# str;
-adjStrMod = 100 -# strMod;
-cls = $SA_PARAM_GET();
-adj = $GET_CHARACTER_SA($TargetContext(),"casterLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj;
-$IF (lvl ># 10) {lvl =# 10;};
-$IF ($GET_CHARACTER_SA($TargetContext(),"myStr") == "-?-?-")
-	{
-		$SET_CHARACTER_SA($TargetContext(),"myStr", str);
-		$SET_CHARACTER_SA($TargetContext(),"myStrMod", strMod);
-	};
-$IF ($GET_CHARACTER_SA($TargetContext(),"mySize") == "-?-?-")
-	{$SET_CHARACTER_SA($TargetContext(),"mySize", $GET_CHAR_SIZE(tgt));};
-list1 = "|$18$0|$18$0|$18$01|$18$51|$18$76|$18$91|$18$100|$19$0|$20$0|$21$0|$22$0";
-list2 = $DelimitedStringSubstring(list1,lvl);
-$IF (str <# $DelimitedStringSubstring(list2,0))
-	{$MODIFY_CHAR_ATTRIBUTE(tgt,"STR",adjStr,"MINUTES",10 *# lvl,"Enlarge STR","SPELL Enlarge STR");};
-str = $GET_CHAR_LIMITED_STR(tgt);
-$IF (str ==# 18)
-	{
-		$IF (strMod <# $DelimitedStringSubstring(list2,1))
-			{
-				$MODIFY_CHAR_ATTRIBUTE(tgt,"STRMOD",adjStrMod,"MINUTES",10 *# lvl,"Enlarge STRMOD","SPELL Enlarge STRMOD");
-			};
-	}
-$ELSE {$MODIFY_CHAR_ATTRIBUTE(tgt,"STRMOD",strMod -# strMod,"MINUTES",10 *# lvl,"Enlarge STRMOD","SPELL Enlarge STRMOD");};
-$IF (lvl ># 4) {$SET_CHAR_SIZE(tgt,2);};
-$SET_CHARACTER_SA($TargetContext(),"IsEnlarged",lvl);
-$SET_CHARACTER_SA($TargetContext(),"enlarged",1);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_Entangle</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
]]>
      </script>
      <script name="Dispel SE">
        <![CDATA[$REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
]]>
      </script>
      <script name="Entangled1">
        <![CDATA[$RETURN $SET_HOOK_PARAM(8 ,"Slowed by Plants");
]]>
      </script>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR tgt; // target
-$VAR cls;
-$VAR adj;
-$VAR lvl;
-$VAR exp; // expiration time
-atk = $IndexOf($AttackerContext());
-tgt = $IndexOf($TargetContext());
-cls = $SA_PARAM_GET();
-adj = $GET_CHARACTER_SA($AttackerContext(),"casterLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj;
-exp = $GET_PARTY_TIME() +# 10;
-$SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-$IF ($SkillAdj($TargetContext(), "Save Vs SP", "", "F", "") ># $RANDOM(20))
-  {$SET_CHARACTER_SA($TargetContext(),"IsEntangled0",exp);}
-$ELSE{$SET_CHARACTER_SA($TargetContext(),"IsEntangled1", $GET_CHAR_MAXMOVE(tgt) /# 2);};
]]>
      </script>
      <script name="MovementAdjustments">
        <![CDATA[$VAR speed;
-speed = $GET_HOOK_PARAM(5);
-speed = speed /# 2;
-$SET_HOOK_PARAM(5, speed);
]]>
      </script>
      <script name="RemoveLinger">
        <![CDATA[$RETURN "AREA";
]]>
      </script>
      <script name="SpellLingerBlockage">
        <![CDATA[$IF ($GET_COMBATANT_SA($CombatantContext(),"IsEntangled1") != "-?-?-"){$RETURN "N";};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_Fear</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
]]>
      </script>
      <script name="Dispel SE">
        <![CDATA[$REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
]]>
      </script>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR cls;
-$VAR adj;
-$VAR lvl;
-atk = $IndexOf($AttackerContext());
-cls = $SA_PARAM_GET();
-adj = $GET_CHARACTER_SA($AttackerContext(),"casterLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj;
-$SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-$SET_CHARACTER_SA($TargetContext(),"IsAfraid","");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_FireResistant</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
]]>
      </script>
      <script name="Dispel SE">
        <![CDATA[$REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
]]>
      </script>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR cls;
-$VAR adj;
-$VAR lvl;
-$VAR exp; // expiration time
-atk = $IndexOf($AttackerContext());
-cls = $SA_PARAM_GET();
-adj = $GET_CHARACTER_SA($AttackerContext(),"casterLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj;
-$SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-exp = $GET_PARTY_TIME() +# lvl;
-$SET_CHARACTER_SA($TargetContext(),"IsResistantFire",exp);
]]>
      </script>
      <script name="RemoveLinger">
        <![CDATA[$RETURN "TARGETS";
]]>
      </script>
      <script name="SpellDuration">
        <![CDATA[$SA_PARAM_SET($GET_HOOK_PARAM(5));
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_FireShield</name>
    <asl>
      <script name="OverrideSpellSelection">
        <![CDATA[$RETURN "$Cold Fire Shield$Hot Fire Shield";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_FireShieldCold</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
]]>
      </script>
      <script name="Dispel SE">
        <![CDATA[$REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
]]>
      </script>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR exp; // expiration time
-$VAR atk; // attacker
-$VAR cls;
-$VAR lvl;
-atk = $IndexOf($AttackerContext());
-cls = $SA_PARAM_GET();
-lvl = $GET_CHAR_Lvl(atk,cls);
-$SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-exp = $GET_PARTY_TIME();
-exp = exp +# 2 +# lvl;
-$RETURN $SET_CHARACTER_SA($TargetContext(),"IsFireShieldedCold", exp);
]]>
      </script>
      <script name="RemoveLinger">
        <![CDATA[$RETURN "TARGETS";
]]>
      </script>
      <script name="SpellDuration">
        <![CDATA[$SA_PARAM_SET($GET_HOOK_PARAM(5));
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_FireShieldHot</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
]]>
      </script>
      <script name="Dispel SE">
        <![CDATA[$REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
]]>
      </script>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR exp; // expiration time
-$VAR atk; // attacker
-$VAR cls;
-$VAR lvl;
-atk = $IndexOf($AttackerContext());
-cls = $SA_PARAM_GET();
-lvl = $GET_CHAR_Lvl(atk,cls);
-$SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-exp = $GET_PARTY_TIME();
-exp = exp +# 2 +# lvl;
-$RETURN $SET_CHARACTER_SA($TargetContext(),"IsFireShieldedHot", exp);
]]>
      </script>
      <script name="RemoveLinger">
        <![CDATA[$RETURN "TARGETS";
]]>
      </script>
      <script name="SpellDuration">
        <![CDATA[$SA_PARAM_SET($GET_HOOK_PARAM(5));
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_FixBlind</name>
    <asl>
      <script name="FixCharacter">
        <![CDATA[$VAR blind;
-blind = $GET_CHARACTER_SA($CharacterContext(),"IsBlind");
-$RETURN blind != "-?-?-";
Info = "cure blindness, heal for FIX";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_FixCure</name>
    <asl>
      <script name="FixCharacter">
        <![CDATA[$VAR chr; // character
-$VAR HP; // hit points
-$VAR maxHP; // maximum hit points
-chr = $IndexOf($CharacterContext());
-HP = $GET_CHAR_HITPOINTS(chr);
-maxHP = $GET_CHAR_MAXHITPOINTS(chr);
-$RETURN maxHP ># HP;
Info = "cure light/serious/critical wounds, heal for FIX";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_FixCurse</name>
    <asl>
      <script name="FixCharacter">
        <![CDATA[$VAR curse;
-curse = $GET_CHARACTER_SA($CharacterContext(),"IsCursed");
-$RETURN curse != "-?-?-";
Info = "remove curse for FIX";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_FixDisease</name>
    <asl>
      <script name="FixCharacter">
        <![CDATA[$VAR disease;
-disease = $GET_CHARACTER_SA($CharacterContext(),"IsDiseased");
-$RETURN disease != "-?-?-";
Info = "cure disease, heal for FIX";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_FixDrain</name>
    <asl>
      <script name="FixCharacter">
        <![CDATA[$VAR drain;
-drain = $GET_CHARACTER_SA($CharacterContext(),"IsDrained");
-$RETURN drain != "-?-?-";
Info = "restoration for FIX";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_FixFeeblemind</name>
    <asl>
      <script name="FixCharacter">
        <![CDATA[$VAR feeblemind;
-feeblemind = $GET_CHARACTER_SA($CharacterContext(),"IsFeebleminded");
-$RETURN feeblemind != "-?-?-";
Info = "heal for FIX";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_FixPoison</name>
    <asl>
      <script name="FixCharacter">
        <![CDATA[$VAR poison;
-poison = $GET_CHARACTER_SA($CharacterContext(),"IsPoisoned");
-$RETURN poison != "-?-?-";
Info = "slow/neutralize poison for FIX";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_FixRaise</name>
    <asl>
      <script name="FixCharacter">
        <![CDATA[$VAR chr; // character
-$VAR status;
-chr = $IndexOf($CharacterContext());
-status = $GET_CHAR_STATUS(chr);
-$RETURN status ==# 2;
Info = "raise dead, resurrection for FIX";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_Fumble</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
]]>
      </script>
      <script name="Dispel SE">
        <![CDATA[$REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
]]>
      </script>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR cls;
-$VAR adj;
-$VAR lvl;
-$VAR exp; // expiration time
-atk = $IndexOf($AttackerContext());
-cls = $SA_PARAM_GET();
-adj = $GET_CHARACTER_SA($AttackerContext(),"casterLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj;
-$SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-exp = $GET_PARTY_TIME() +# lvl;
-$SET_CHARACTER_SA($TargetContext(), "IsFumbling",exp);
]]>
      </script>
      <script name="SpellDuration">
        <![CDATA[$SA_PARAM_SET($GET_HOOK_PARAM(5));
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_Harm</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$IF ($GET_CHAR_UNDEAD($IndexOf($TargetContext())) != "none"){$RETURN;};
-$CastSpellOnTarget($TargetContext(),"HarmDisease");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_HarmDisease</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR tgt; // target
-$VAR minhp;
-tgt = $IndexOf($TargetContext());
-$IF ($GET_CHARACTER_SA($TargetContext(),"pcSTR") == "-?-?-")
-  {
-   $SET_CHARACTER_SA($TargetContext(),"pcSTR", $GET_CHAR_LIMITED_STR(tgt));
-   $SET_CHARACTER_SA($TargetContext(),"pcSTRMOD", $GET_CHAR_LIMITED_STRMOD(tgt));
-  };
-minhp = $GET_CHAR_MAXHITPOINTS(tgt) /# 10;
-$IF (minhp <# 1){minhp = 1;};
-$SET_CHARACTER_SA($TargetContext(),"minhp",minhp);
-$SET_CHARACTER_SA($TargetContext(),"IsDiseasedSpell",$GET_PARTY_TIME() +# (($RANDOM(6) +# 1) *# 10));
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_Haste</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
]]>
      </script>
      <script name="Dispel SE">
        <![CDATA[$REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
]]>
      </script>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR cls;
-$VAR adj;
-$VAR lvl;
-$VAR exp; // expiration time
-atk = $IndexOf($AttackerContext());
-cls = $SA_PARAM_GET();
-adj = $GET_CHARACTER_SA($AttackerContext(),"casterLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj;
-$SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-exp = $GET_PARTY_TIME() +# lvl;
-$SET_CHARACTER_SA($TargetContext(),"IsFast",exp);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_Heal</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR tgt; // target
-$VAR hp; // hit points
-$VAR maxHP; // max hit points
-tgt = $IndexOf($TargetContext());
-hp = $GET_CHAR_HITPOINTS(tgt);
-maxHP = $GET_CHAR_MAXHITPOINTS(tgt);
-$IF ($GET_CHAR_UNDEAD(tgt) != "none") {$RETURN;};
-$IF ($GET_CHAR_STATUS(tgt) ># 1) {$RETURN;};
-$DELETE_CHARACTER_SA($TargetContext(),"IsBlind");
-$DELETE_CHARACTER_SA($TargetContext(),"IsDiseased");
-$DELETE_CHARACTER_SA($TargetContext(),"IsDiseasedSpell");
-$DELETE_CHARACTER_SA($TargetContext(),"IsMummyDiseased");
-$DELETE_CHARACTER_SA($TargetContext(),"IsFeebleminded");
-$IF (hp <# (maxHP -# 4))
-	{
-		$SET_CHAR_STATUS(tgt,0);
-		$SET_CHAR_HITPOINTS(tgt,(maxHP -# ($RANDOM(4)+#1)));
-	}
-$ELSE
-	{
-		$SET_CHAR_STATUS(tgt,0);
-		$SET_CHAR_HITPOINTS(tgt,(maxHP));
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_HoldAnimal</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR cls;
-$VAR adj;
-$VAR lvl;
-$VAR exp; // expiration time
-$IF ($GET_CHARACTER_SA($TargetContext(),"saved")){$RETURN;};
-$IF($GET_CANBEHELDORCHARMED($TargetContext()) !=# 1){$RETURN;};
-$IF ($GET_ISANIMAL($TargetContext()) !=# 1){$RETURN;};
-atk = $IndexOf($AttackerContext());
-cls = $SA_PARAM_GET();
-adj = $GET_CHARACTER_SA($AttackerContext(),"casterLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj;
-exp = $GET_PARTY_TIME() +# (lvl *# 2);
-$SET_CHARACTER_SA($TargetContext(),"IsHeld",exp);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_HoldMonster</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR cls;
-$VAR lvl;
-$VAR exp; // expiration time
-$IF ($GET_CHARACTER_SA($TargetContext(),"saved")){$RETURN;};
-$IF ($GET_CANBEHELDORCHARMED($TargetContext()) !=# 1){$RETURN;};
-atk = $IndexOf($AttackerContext());
-cls = $SA_PARAM_GET();
-lvl = $GET_CHAR_Lvl(atk,cls);
-exp = $GET_PARTY_TIME() +# lvl;
-$SET_CHARACTER_SA($TargetContext(),"IsHeld",exp);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_HoldPersonCleric</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR tgt; // target
-$VAR cls;
-$VAR adj; 
-$VAR lvl;
-$VAR exp; // expiration time
-$VAR nomTgt;
-$VAR type;
-$IF ($GET_CHARACTER_SA($TargetContext(),"saved") ==# 1){$RETURN;};
-$IF ($GET_CANBEHELDORCHARMED($TargetContext()) !=# 1){$RETURN;};
-atk = $IndexOf($AttackerContext());
-tgt = $IndexOf($TargetContext());
-nomTgt = $GET_CHAR_NAME(tgt);
-type = $GET_CHAR_TYPE(tgt);
-$IF ((type != "@PC@") && (type != "@NPC@")) {$IF ($GET_MONSTERTYPE_SA(nomTgt,"IsPerson") == "-?-?-")  {$RETURN;};};
-cls = $SA_PARAM_GET();
-adj = $GET_CHARACTER_SA($AttackerContext(),"casterLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj;
-exp = $GET_PARTY_TIME() +# 4 +# lvl;
-$SET_CHARACTER_SA($TargetContext(),"IsHeld",exp);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_HoldPersonMU</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR tgt; // target
-$VAR nomTgt;
-$VAR cls;
-$VAR lvl;
-$VAR exp; // expiration time
-$VAR type;
-$IF ($GET_CHARACTER_SA($TargetContext(),"saved") ==# 1){$RETURN;};
-$IF ($GET_CANBEHELDORCHARMED($TargetContext()) !=# 1){$RETURN;};
-atk = $IndexOf($AttackerContext());
-tgt = $IndexOf($TargetContext());
-nomTgt = $GET_CHAR_NAME(tgt);
-type = $GET_CHAR_TYPE(tgt);
-$IF (type != "@PC@" && type != "@NPC@") {$IF ($GET_MONSTERTYPE_SA(nomTgt,"IsPerson") == "-?-?-") {$RETURN;};};
-cls = $SA_PARAM_GET();
-lvl = $GET_CHAR_Lvl(atk,cls);
-exp = $GET_PARTY_TIME() +# (lvl *# 2);
-$SET_CHARACTER_SA($TargetContext(),"IsHeld",exp);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_ImmuneDragonBreath</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
]]>
      </script>
      <script name="Dispel SE">
        <![CDATA[$REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
]]>
      </script>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR cls;
-$VAR lvl;
-atk = $IndexOf($AttackerContext());
-cls = $SA_PARAM_GET();
-lvl = $GET_CHAR_Lvl(atk,cls);
-$SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-$SET_CHARACTER_SA($TargetContext(),"IsImmuneDB","4");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_ImmuneNormalMissiles</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
]]>
      </script>
      <script name="Dispel SE">
        <![CDATA[$REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
]]>
      </script>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR cls;
-$VAR adj;
-$VAR lvl;
-$VAR exp; // expiration time
-atk = $IndexOf($AttackerContext());
-cls = $SA_PARAM_GET();
-adj = $GET_CHARACTER_SA($AttackerContext(),"casterLevel");
-lvl = $GET_CHAR_Lvl(atk,cls);
-$SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-exp = $GET_PARTY_TIME() +# lvl;
-$SET_CHARACTER_SA($TargetContext(), "IsImmuneNormalMissiles",exp);
]]>
      </script>
      <script name="SpellDuration">
        <![CDATA[$SA_PARAM_SET($GET_HOOK_PARAM(5));
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_ImmuneSpells</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
]]>
      </script>
      <script name="Dispel SE">
        <![CDATA[$REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
]]>
      </script>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR cls;
-$VAR adj;
-$VAR lvl;
-$VAR exp; // expiration time
-atk = $IndexOf($AttackerContext());
-cls = $SA_PARAM_GET();
-adj = $GET_CHARACTER_SA($AttackerContext(),"casterLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj;
-$SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-exp = $GET_PARTY_TIME() +# lvl;
-$SET_CHARACTER_SA($TargetContext(),"IsImmuneSpells",exp);
]]>
      </script>
      <script name="SpellDuration">
        <![CDATA[$SA_PARAM_SET($GET_HOOK_PARAM(5));
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_ImmuneSpellsMinor</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
]]>
      </script>
      <script name="Dispel SE">
        <![CDATA[$REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
]]>
      </script>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR cls;
-$VAR adj;
-$VAR lvl;
-$VAR exp; // expiration time
-atk = $IndexOf($AttackerContext());
-cls = $SA_PARAM_GET();
-adj = $GET_CHARACTER_SA($AttackerContext(),"casterLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj;
-$SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-exp = $GET_PARTY_TIME() +# lvl;
-$SET_CHARACTER_SA($TargetContext(),"IsImmuneSpellsMinor",exp);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_InsectPlagueDruid</name>
    <asl>
      <script name="CheckProximity">
        <![CDATA[$VAR atk; // attacker/caster
-$VAR tgt; // target
-$VAR range;
-$VAR distance;
-$VAR sVS; // Save Vs Spell
-$VAR roll;
-$VAR bCls; // target baseclass
-$VAR lvl; // target level
-atk = $GET_HOOK_PARAM(5);
-tgt = $GET_HOOK_PARAM(6);
-range = $SA_PARAM_GET();
-distance = $VisualDistance(tgt, atk);
-$IF (range <# distance) {$RETURN;};
-sVS = $SkillAdj($TargetContext(), "Save Vs SP", "", "F", "");
-roll = $RANDOM(20) +# 1;
-bCls = $GetHighestLevelBaseclass(tgt);
-lvl = $GetBaseclassLevel(tgt,bCls);
-$IF (lvl <# 3){$SET_COMBATANT_SA($TargetContext(),"IsInsectFlee",atk);};
-$IF (lvl <# 6){$IF (sVS ># roll){$SET_COMBATANT_SA($TargetContext(),"IsInsectFlee",atk);};};
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
]]>
      </script>
      <script name="Dispel SE">
        <![CDATA[$REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
]]>
      </script>
      <script name="RemoveLinger">
        <![CDATA[$RETURN "AREA";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_Invisible</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
]]>
      </script>
      <script name="Dispel SE">
        <![CDATA[$REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
]]>
      </script>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker/caster
-$VAR cls;
-$VAR adj;
-$VAR lvl;
-atk = $IndexOf($AttackerContext());
-cls = $SA_PARAM_GET();
-adj = $GET_CHARACTER_SA($AttackerContext(),"casterLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj;
-$SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-$SET_CHARACTER_SA($TargetContext(),"IsInvisibleSpell",2);
-$SET_CHARACTER_SA($TargetContext(),"IsInvisible",2);
]]>
      </script>
      <script name="RemoveLinger">
        <![CDATA[$RETURN "TARGETS";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_InvisibleToAnimals</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
]]>
      </script>
      <script name="Dispel SE">
        <![CDATA[$REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
]]>
      </script>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR cls;
-$VAR adj;
-$VAR lvl;
-$VAR exp; // expiration time
-atk = $IndexOf($AttackerContext());
-cls = $SA_PARAM_GET();
-adj = $GET_CHARACTER_SA($AttackerContext(),"casterLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj;
-$SET_CHARACTER_SA($AttackerContext(),"DispelLevel",lvl);
-exp = $GET_PARTY_TIME() +# lvl;
-$SET_CHARACTER_SA($TargetContext(),"IsInvisibleToAnimals",exp);
]]>
      </script>
      <script name="RemoveLinger">
        <![CDATA[$RETURN "TARGETS";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_MassCharm</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR side;  // caster's side
-$VAR atk; // attacker
-$VAR tgt; // target
-$VAR clvl;  // caster level
-$VAR name;  // target name
-$VAR lvl;   // target level
-$VAR tlvl;  // temporary target level
-$VAR bCls;
-$VAR cls;
-$VAR opr;   //once per round
-$VAR rnd;
-opr = $GET_CHARACTER_SA($AttackerContext(),"CombatRoundStart");
-$IF (opr == "-?-?-" || opr ==# 0)
-	{
-		$SET_CHARACTER_SA($AttackerContext(),"CombatRoundStart",5);
-		$SET_CHARACTER_SA($AttackerContext(),"PointPool",clvl *# 2);
-	};
-rnd = $GET_CHARACTER_SA($AttackerContext(),"PointPool");
-$IF (rnd <# 1) {$RETURN;};
-$IF ($GET_CANBEHELDORCHARMED($TargetContext()) != 1) {$RETURN;};
-side = $GET_CHARACTER_SA($AttackerContext(), "side");
-$IF ($GET_CHARACTER_SA($TargetContext(), "side") ==# side) {$RETURN;};
-atk = $IndexOf($AttackerContext());
-tgt = $IndexOf($TargetContext());
-cls = $SA_PARAM_GET();
-clvl = $GET_CHAR_Lvl(atk,cls);
-name = $GET_CHAR_NAME(tgt);
-tlvl = $GET_MONSTERTYPE_SA(name,"monsterLevel");
-$IF (tlvl != "-?-?-") {lvl = tlvl;}
-$ELSE
-	{
-		bCls = $GetHighestLevelBaseclass(tgt);
-		lvl = $GetBaseclassLevel(tgt,bCls);
-	};
-$IF (lvl ># rnd) {$RETURN;}
-$ELSE
-	{
-		$SET_CHARACTER_SA($AttackerContext(),"PointPool",rnd -# lvl);
-		$IF ($GET_CHARACTER_SA($TargetContext(),"saved" )) {$RETURN;};
-		$SetFriendly(tgt,side);
-		$SET_CHARACTER_SA($TargetContext(),"IsCharmed",clvl);
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_MindBlast</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR exp;
-exp = $GetCombatRound() +# $RANDOM(9) +# 4;
-$SET_CHARACTER_SA($TargetContext(),"IsStunned","Stunned");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_MirrorImage</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
]]>
      </script>
      <script name="Dispel SE">
        <![CDATA[$REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
]]>
      </script>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR cls;
-$VAR adj;
-$VAR lvl;
-$VAR rndm;
-$VAR images;
-atk = $IndexOf($AttackerContext());
-cls = $SA_PARAM_GET();
-adj = $GET_CHARACTER_SA($AttackerContext(),"casterLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj;
-$SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-// Determine number of new images
-rndm = $RANDOM(100) +# 1 +# lvl;
-$IF (rndm ># 75){images = 4;}
-$ELSE
-	{
-		$IF (rndm ># 50){images = 3;}
-		$ELSE
-			{
-				$IF (rndm ># 25){images = 2;}
-				$ELSE{images = 1;};
-			};
-	};
-// Test for existing images
-$IF ($GET_CHARACTER_SA($TargetContext(),"IsMirrored") == "-?-?-")
-  {$SET_CHARACTER_SA($TargetContext(),"IsMirrored",0);};
-// Add new images
-$SET_CHARACTER_SA($TargetContext(),"IsMirrored",$GET_CHARACTER_SA($AttackerContext(),"IsMirrored") +# images);
]]>
      </script>
      <script name="RemoveLinger">
        <![CDATA[$RETURN "TARGETS";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_MummyRot</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$SET_CHARACTER_SA($CharacterContext(),"IsMummyDiseased",$GET_PARTY_DAYS() +# 30);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_NeutralizePoison</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR tgt; // target
-tgt = $IndexOf($TargetContext());
-$IF ($GET_CHARACTER_SA($TargetContext(), "IsPoisoned") == "-?-?-"){$RETURN;};
-$DELETE_CHARACTER_SA($TargetContext(),"IsPoisoned");
-$IF ($GET_CHAR_HITPOINTS(tgt) <=# 0)
-	{
-		$SET_CHAR_HITPOINTS(tgt, "1");
-		$SET_CHAR_STATUS(tgt, "0");
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_Paralysis</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR tgt; // target
-$VAR name;
-atk = $IndexOf($AttackerContext());
-tgt = $IndexOf($TargetContext());
-name = $GET_CHAR_NAME(tgt);
-$IF ($GET_CHARACTER_SA($TargetContext(),"IsImmuneParalysis") != "-?-?-"){$RETURN;};
-$IF ($GET_MONSTERTYPE_SA(name,"monster_ImmuneParalysis") != "-?-?-"){$RETURN;};
-$IF ($GET_CHARACTER_SA($TargetContext(),"saved")){$RETURN;};
-$IF ($GET_CHAR_NAME(atk) == "Ghoul" && $GET_CHAR_RACE(tgt) == "Elf"){$RETURN;};
-$SET_CHARACTER_SA($TargetContext(),"IsParalyzed","Paralyzed");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_Petrify</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$SET_CHARACTER_SA($TargetContext(),"IsPetrified","Petrified");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_Poison</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR tgt; // target
-$VAR time;
-tgt = $IndexOf($TargetContext());
-time = $GET_PARTY_TIME();
-$IF ($GET_CHARACTER_SA($TargetContext(),"IsImmunePoison") != "-?-?-"){$RETURN;};
-$IF ($GET_CHARACTER_SA($TargetContext(),"IsProtectedPoisonCaster") != "-?-?-"){$RETURN;};
-$IF ($GET_CHARACTER_SA($TargetContext(),"IsProtectedPoisonTarget") != "-?-?-"){$RETURN;};
-$SET_CHARACTER_SA($TargetContext(),"IsPoisoned",time);
-$SET_CHAR_STATUS(tgt,2);
-$SET_CHAR_HITPOINTS(tgt,"-11");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_PowerWordKill</name>
    <asl>
      <script name="ComputeDamage">
        <![CDATA[$VAR tgt; // target
-$VAR tgtHP;
-tgt = $IndexOf($TargetContext());
-tgtHP = $GET_CHAR_HITPOINTS(tgt);
-$IF (tgtHP <=# 60){$RETURN tgtHP +# 11;};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_PowerWordStun</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR exp; // expiration time
-exp = $GET_PARTY_TIME() +# $RANDOM(4) +# $RANDOM(4) +# 2;
-$SET_CHARACTER_SA($TargetContext(),"IsStunned",exp);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_Prayer</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR cls;
-$VAR adj;
-$VAR lvl;
-$VAR exp; // expiration time
-atk = $IndexOf($AttackerContext());
-cls = $SA_PARAM_GET();
-adj = $GET_CHARACTER_SA($AttackerContext(),"casterLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj;
-$SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-exp = $GET_PARTY_TIME() +# lvl;
-$SET_CHARACTER_SA($TargetContext(),"IsPraying",exp);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_ProtectionFromAcid</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
]]>
      </script>
      <script name="Dispel SE">
        <![CDATA[$REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
]]>
      </script>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR tgt; // target
-$VAR cls;
-$VAR adj;
-$VAR lvl;
-$VAR exp; // expiration time
-atk = $IndexOf($AttackerContext());
-tgt = $IndexOf($TargetContext());
-cls = $SA_PARAM_GET();
-adj = $GET_CHARACTER_SA($AttackerContext(),"casterLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj;
-$SET_CHARACTER_SA($CharacterContext(),"DispelLevel",lvl);
-exp = $GET_PARTY_TIME() +# lvl *# 10;
-$IF (atk ==# tgt)
-	{
-		$SET_CHARACTER_SA($TargetContext(),"IsProtectedAcidCaster",exp);
-		$SET_CHARACTER_SA($TargetContext(),"FirePoints",lvl *# 12);
-	}
-$ELSE{$SET_CHARACTER_SA($TargetContext(),"IsProtectedAcidTarget",exp);};
-$SkillAdj($TargetContext(),"Save Vs BR","protectionAcid","-","4");
-$SkillAdj($TargetContext(),"Save Vs RSW","protectionAcid","-","4");
-$SkillAdj($TargetContext(),"Save Vs SP","protectionAcid","-","4");
]]>
      </script>
      <script name="RemoveLinger">
        <![CDATA[$RETURN "TARGETS";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_ProtectionFromEvil</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
]]>
      </script>
      <script name="Dispel SE">
        <![CDATA[$REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
]]>
      </script>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR cls;
-$VAR adj;
-$VAR lvl;
-$VAR exp; // expiration time
-atk = $IndexOf($AttackerContext());
-cls = $SA_PARAM_GET();
-adj = $GET_CHARACTER_SA($AttackerContext(),"casterLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj;
-$SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-exp = $GET_PARTY_TIME() +# lvl;
-$SET_CHARACTER_SA($TargetContext(),"IsProtectedEvil",exp);
-$SkillAdj($TargetContext(),"Save Vs BR","protectedEvil","-","2");
-$SkillAdj($TargetContext(),"Save Vs PP","protectedEvil","-","2");
-$SkillAdj($TargetContext(),"Save Vs PPDM","protectedEvil","-","2");
-$SkillAdj($TargetContext(),"Save Vs RSW","protectedEvil","-","2");
-$SkillAdj($TargetContext(),"Save Vs SP","protectedEvil","-","2");
]]>
      </script>
      <script name="SpellDuration">
        <![CDATA[$SA_PARAM_SET($GET_HOOK_PARAM(5));
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_ProtectionFromFire</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
]]>
      </script>
      <script name="Dispel SE">
        <![CDATA[$REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
]]>
      </script>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR tgt; // target
-$VAR cls;
-$VAR adj;
-$VAR lvl;
-$VAR exp; // expiration time
-atk = $IndexOf($AttackerContext());
-tgt = $IndexOf($TargetContext());
-cls = $SA_PARAM_GET();
-adj = $GET_CHARACTER_SA($AttackerContext(),"casterLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj;
-$SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-exp = $GET_PARTY_TIME() +# lvl *# 10;
-$IF (atk ==# tgt)
-	{
-		$SET_CHARACTER_SA($TargetContext(),"IsProtectedFireCaster",exp);
-		$SET_CHARACTER_SA($TargetContext(),"FirePoints",lvl *# 12);
-	}
-$ELSE{$SET_CHARACTER_SA($TargetContext(),"IsProtectedFireTarget",exp);};
-$SkillAdj($TargetContext(),"Save Vs BR","protectedFire","-","4");
-$SkillAdj($TargetContext(),"Save Vs RSW","protectedFire","-","4");
-$SkillAdj($TargetContext(),"Save Vs SP","protectedFire","-","4");
]]>
      </script>
      <script name="RemoveLinger">
        <![CDATA[$RETURN "TARGETS";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_ProtectionFromGood</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
]]>
      </script>
      <script name="Dispel SE">
        <![CDATA[$REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
]]>
      </script>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR cls;
-$VAR adj;
-$VAR lvl;
-$VAR exp; // expiration time
-atk = $IndexOf($AttackerContext());
-cls = $SA_PARAM_GET();
-adj = $GET_CHARACTER_SA($AttackerContext(),"casterLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj;
-$SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-exp = $GET_PARTY_TIME() +# lvl;
-$SET_CHARACTER_SA($TargetContext(),"IsProtectedGood",exp);
-$SkillAdj($TargetContext(),"Save Vs BR","protectedGood","-","2");
-$SkillAdj($TargetContext(),"Save Vs PP","protectedGood","-","2");
-$SkillAdj($TargetContext(),"Save Vs PPDM","protectedGood","-","2");
-$SkillAdj($TargetContext(),"Save Vs RSW","protectedGood","-","2");
-$SkillAdj($TargetContext(),"Save Vs SP","protectedGood","-","2");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_ProtectionFromLightning</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
]]>
      </script>
      <script name="Dispel SE">
        <![CDATA[$REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
]]>
      </script>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR tgt; // target
-$VAR cls;
-$VAR adj;
-$VAR lvl;
-$VAR exp; // expiration time
-atk = $IndexOf($AttackerContext());
-tgt = $IndexOf($TargetContext());
-cls = $SA_PARAM_GET();
-adj = $GET_CHARACTER_SA($AttackerContext(),"casterLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj;
-$SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-exp = $GET_PARTY_TIME() +# lvl *# 10;
-$IF (atk ==# tgt)
-	{
-		$SET_CHARACTER_SA($TargetContext(),"IsProtectedLightningCaster",exp);
-		$SET_CHARACTER_SA($TargetContext(),"FirePoints",lvl *# 12);
-	}
-$ELSE{$SET_CHARACTER_SA($TargetContext(),"IsProtectedLightningTarget",exp);};
-$SkillAdj($TargetContext(),"Save Vs BR","protectedLightning","-","4");
-$SkillAdj($TargetContext(),"Save Vs RSW","protectedLightning","-","4");
-$SkillAdj($TargetContext(),"Save Vs SP","protectedLightning","-","4");
]]>
      </script>
      <script name="RemoveLinger">
        <![CDATA[$RETURN "TARGETS";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_RaiseDead</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR tgt; // target
-$VAR type;
-$VAR CON; // Constitution
-$VAR raised;
-$VAR list;
-$VAR pct; // percent
-tgt = $IndexOf($TargetContext());
-$IF ($GET_CHARACTER_SA($TargetContext(),"mummy") == 1)
-	{ // Mummy Swap
-		$AddCombatant("Ancient Fighter",0);
-		$TeleportCombatant($IndexOf($Name("Ancient Fighter")),$GET_HOOK_PARAM(5),$GET_HOOK_PARAM(6));
-		$DELETE_CHARACTER_SA($TargetContext(),"mummy");
-		$RETURN;
-	};
-$IF ($GET_CHAR_STATUS(tgt) !=# 2){$RETURN;};
-CON = $GET_CHAR_LIMITED_CON(tgt);
-raised = $GET_CHARACTER_SA($TargetContext(),"raised");
-$IF (raised == "-?-?-"){raised = CON;}
-$ELSE {raised = raised -# 1;};
-$IF (raised <# 1 || $GET_CHAR_RACE(tgt) == "Elf"){$RETURN $SET_CHAR_STATUS(tgt,5);};
-$SET_CHARACTER_SA($TargetContext(),"raised",raised);
-list = "$0$30$35$40$45$50$55$60$65$70$75$80$85$90$92$94$96$98$100$100$100$100$100$100$100$100";
-pct = $DelimitedStringSubstring(list,CON);
-$IF (pct <# $RANDOM(100) +# 1){$RETURN $SET_CHAR_STATUS(tgt,5);};
-$MODIFY_CHAR_ATTRIBUTE(tgt,"CON", -1, "MINUTES", 999999999, "Raise Dead CON reduction", "SPELL Raise Dead");
-$SET_CHAR_HITPOINTS(tgt,1);
-$SET_CHAR_STATUS(tgt,1);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_ReadMagic</name>
    <asl>
      <script name="CanIdentify">
        <![CDATA[$IF ($GET_ITEM_SA($ItemContext(), "item_Scroll" ) != "-?-?-")
-	{
-		$RETURN "Y";
-	};
]]>
      </script>
      <script name="Identify">
        <![CDATA[$SA_REMOVE();
-$RETURN "Y";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_Reduce</name>
    <asl>
      <script name="Dispel SE">
        <![CDATA[$REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5 ));
]]>
      </script>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker/caster
-$VAR tgt; // target
-$VAR cls;
-$VAR adj;
-$VAR lvl;
-$VAR str;
-$VAR strMod;
-$VAR adjStr;
-$IF (($GET_CHARACTER_SA($TargetContext(),"enlarged")  != "-?-?-") || ($GET_MONSTERTYPE_SA($MonsterTypeContext(),"enlarged") != "-?-?-"))
-	{$RETURN $RUN_CHAR_SCRIPTS(tgt,"Dispel enlarged");};
-atk = $IndexOf($AttackerContext());
-tgt = $IndexOf($TargetContext());
-cls = $SA_PARAM_GET();
-adj = $GET_CHARACTER_SA($AttackerContext(),"casterLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj;
-str = $GET_CHAR_LIMITED_STR(tgt);
-strMod = $GET_CHAR_LIMITED_STRMOD(tgt);
-adjStr = str -# 6;
-$IF (lvl ># 10) {lvl =# 10;};
-$IF ($GET_CHARACTER_SA($TargetContext(),"myStr") == "-?-?-")
-	{
-		$SET_CHARACTER_SA($TargetContext(),"myStr", str);
-		$SET_CHARACTER_SA($TargetContext(),"myStrMod", strMod);
-	};
-$IF ($GET_CHARACTER_SA($TargetContext(),"mySize") == "-?-?-")
-	{$SET_CHARACTER_SA($TargetContext(),"mySize", $GET_CHAR_SIZE(tgt));};
-$IF ($GET_CHAR_SIZE(tgt) ># 0){$SET_CHAR_SIZE(tgt, 0);};
-$IF ($GET_CHAR_LIMITED_STR(tgt) ># 6)
-	{
-		$MODIFY_CHAR_ATTRIBUTE(tgt,"STR",adjStr,"MINUTES",10 *# lvl,"Reduce STR","SPELL Reduce STR");
-		$MODIFY_CHAR_ATTRIBUTE(tgt,"STRMOD",-#strMod,"MINUTES",10 *# lvl,"Reduce STRMOD","SPELL Reduce STRMOD");
-	};
-$SET_CHARACTER_SA($TargetContext(),"IsReduced",lvl);
-$SET_CHARACTER_SA($TargetContext(),"reduced",1);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_RemoveBlindness</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$DELETE_CHARACTER_SA($TargetContext(),"IsBlind");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_RemoveDisease</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$DELETE_CHARACTER_SA($TargetContext(),"IsDiseased");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_RemoveFeeblemind</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR tgt; // target
-tgt = $IndexOf($TargetContext());
-$DELETE_CHARACTER_SA($TargetContext(),"IsFeebleminded");
-$REMOVE_CHAR_MODIFICATION(tgt,"SPELL Feeblemind");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_RemovePetrified</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$DELETE_CHARACTER_SA($TargetContext(),"IsPetrified");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_Restoration</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR tgt; // target
-$VAR feebled;
-$VAR drained;
-$VAR head;
-$VAR cls;
-$VAR level;
-$VAR hp;
-$VAR done;
-$VAR tHP;
-$VAR tMaxHP;
-tgt = $IndexOf($TargetContext());
-done = 0;
-// Level restoration
-drained = $GET_CHARACTER_SA($TargetContext(),"IsDrained");
-$IF (drained != "-?-?-")
-	{
-		tHP = $GET_CHAR_HITPOINTS(tgt);
-		tMaxHP = $GET_CHAR_MAXHITPOINTS(tgt);
-		$WHILE (done <# 1)
-			{
-				head = $DelimitedStringHead(drained);
-				cls = $DelimitedStringSubstring(head,0);
-				$IF ($GET_CHAR_Lvl(tgt,cls) <# $DelimitedStringSubstring(head,1))
-					{
-						level = $DelimitedStringSubstring(head,1);
-						$SET_CHAR_Lvl(tgt,cls,level);
-						$SET_CHAR_Exp(tgt,cls,$DAT_Baseclass_Experience(cls,level));
-						hp = $DelimitedStringSubstring(head,2);
-						$SET_CHAR_MAXHITPOINTS(tgt,tMaxHP +# hp);
-						$SET_CHAR_HITPOINTS(tgt,tHP +# hp); 
-						done = 2;
-					};
-				$SET_CHARACTER_SA($TargetContext(),"IsDrained",$DelimitedStringTail(drained));
-				$IF ($GET_CHARACTER_SA($TargetContext(),"IsDrained") == "$|99")
-					{
-						$DELETE_CHARACTER_SA($TargetContext(),"IsDrained");
-						done = 3;
-					};
-			};
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_Resurrection</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR tgt; // target
-$VAR monName;
-$VAR monLvl;
-$VAR CON; // Constitution
-$VAR pct; // percent
-tgt = $IndexOf($TargetContext());
-$IF ($InParty($TargetContext())){$SET_CHAR_AGE(tgt, ($GET_CHAR_AGE(tgt) +# 3));};
-monName = $GET_CHAR_NAME(tgt);
-monLvl = $GET_MONSTERTYPE_SA(monName,"monsterLevel"); 
-$IF (monLvl != "-?-?-") 
-	{
-		$IF (monName == "Ghast"||monName == "Ghoul"||monName == "Skeleton"||monName == "Wight"||monName == "Wraith"||monName == "Zombie")
-			{
-				$SET_CHAR_STATUS(tgt, 2);
-				$SET_CHAR_HITPOINTS(tgt, "-11");
-				$RETURN;
-			};
-		$IF (monName == "Mummy")
-			{
-				$SET_CHAR_HITPOINTS(tgt, "-11");
-				$SET_CHAR_STATUS(tgt, 2);
-				$AddCombatant("Ancient Fighter", 0 );
-			};
-	};
-$IF (monLvl == "-?-?-")
-	{
-		$IF ($GET_CHAR_RACE(tgt) == "Elf"){$RETURN;};
-		$IF ($GET_CHAR_STATUS(tgt) !=# 2){$RETURN;};
-		CON = $GET_CHAR_LIMITED_CON(tgt);
-		pct = 0;
-		$IF (CON ># 0){pct = 30;};
-		$IF (CON ># 1){pct = 35;};
-		$IF (CON ># 2){pct = 40;};
-		$IF (CON ># 3){pct = 45;};
-		$IF (CON ># 4){pct = 50;};
-		$IF (CON ># 5){pct = 55;};
-		$IF (CON ># 6){pct = 60;};
-		$IF (CON ># 7){pct = 65;};
-		$IF (CON ># 8){pct = 70;};
-		$IF (CON ># 9){pct = 75;};
-		$IF (CON ># 10){pct = 80;};
-		$IF (CON ># 11){pct = 85;};
-		$IF (CON ># 12){pct = 90;};
-		$IF (CON ># 13){pct = 92;};
-		$IF (CON ># 14){pct = 94;};
-		$IF (CON ># 15){pct = 96;};
-		$IF (CON ># 16){pct = 98;};
-		$IF (CON ># 17){pct = 100;};
-		$IF (pct <# ($RANDOM(100) +# 1)){$SET_CHAR_STATUS(tgt, 5); $RETURN;}
-		$ELSE
-			{
-				$SET_CHAR_HITPOINTS(tgt, $GET_CHAR_MAXHITPOINTS(tgt));
-				$SET_CHAR_STATUS(tgt, 0);
-				$RETURN;
-			};
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_SeeInvisible</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
]]>
      </script>
      <script name="Dispel SE">
        <![CDATA[$REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
]]>
      </script>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR cls;
-$VAR adj;
-$VAR lvl;
-$VAR exp; // expiration time
-atk = $IndexOf($AttackerContext());
-cls = $SA_PARAM_GET();
-adj = $GET_CHARACTER_SA($AttackerContext(),"casterLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj;
-$SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-exp = $GET_PARTY_TIME() +# lvl;
-$SET_CHARACTER_SA($TargetContext(),"IsSeeingInvisible",exp);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_Shield</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
]]>
      </script>
      <script name="Dispel SE">
        <![CDATA[$REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
]]>
      </script>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR cls;
-$VAR adj;
-$VAR lvl;
-$VAR exp; // expiration time
-cls = $SA_PARAM_GET();
-adj = $GET_CHARACTER_SA($AttackerContext(),"casterLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj;
-$SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-exp = $GET_PARTY_TIME() +# lvl *# 5;
-$SET_CHARACTER_SA($TargetContext(),"IsShielded",exp);
]]>
      </script>
      <script name="RemoveLinger">
        <![CDATA[$RETURN "TARGETS";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_Silence</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
]]>
      </script>
      <script name="Dispel SE">
        <![CDATA[$REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
]]>
      </script>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR cls;
-$VAR adj;
-$VAR lvl;
-$VAR exp; // expiration time
-atk = $IndexOf($AttackerContext());
-cls = $SA_PARAM_GET();
-adj = $GET_CHARACTER_SA($AttackerContext(),"casterLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj;
-$SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-exp = $GET_PARTY_TIME() +# lvl;
-$SET_CHARACTER_SA($TargetContext(), "IsSilenced",exp);
]]>
      </script>
      <script name="SpellDuration">
        <![CDATA[$SA_PARAM_SET($GET_HOOK_PARAM(5));
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_Sleep</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
]]>
      </script>
      <script name="Dispel SE">
        <![CDATA[$REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
]]>
      </script>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR tgt; // target
-$VAR type;
-$VAR nomTgt;
-$VAR index;
-$VAR lvl;
-$VAR monLvlMon;
-$VAR bCls; // baseclass
-tgt = $IndexOf($TargetContext());
-type = $GET_CHAR_TYPE(tgt);
-nomTgt = $GET_CHAR_NAME(tgt);
-monLvlMon = $GET_MONSTERTYPE_SA(nomTgt,"monsterLevel");
-$IF ($GET_CHAR_STATUS(tgt) != 0){$RETURN;};
-$IF (type != "@PC@" || type != "@NPC@") {$IF ($GET_CHAR_UNDEAD(tgt) != "none") {$RETURN;};};
-$IF ($GET_CHARACTER_SA($TargetContext(),"monster_ImmuneSleep") != "-?-?-") {$RETURN;};
-$IF ($GET_CHARACTER_SA($TargetContext(),"IsSleeping") != "-?-?-") {$RETURN;};
-$IF (monLvlMon != "-?-?-") {lvl = monLvlMon;}
-$ELSE {bCls = $GetHighestLevelBaseclass(tgt);lvl = $GetBaseclassLevel(tgt,bCls);};
-$IF (lvl <# 5) {$SET_CHARACTER_SA($TargetContext(),"IsSleeping","Sleeping");};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_Slow</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
]]>
      </script>
      <script name="Dispel SE">
        <![CDATA[$REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
]]>
      </script>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR cls;
-$VAR adj;
-$VAR lvl;
-$VAR exp; // expiration time
-atk = $IndexOf($AttackerContext());
-cls = $SA_PARAM_GET();
-adj = $GET_CHARACTER_SA($AttackerContext(),"casterLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj;
-$SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-exp = $GET_PARTY_TIME() +# lvl;
-$SET_CHARACTER_SA($TargetContext(),"IsSlow",exp);
]]>
      </script>
      <script name="SpellDuration">
        <![CDATA[$SA_PARAM_SET($GET_HOOK_PARAM(5));
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_SlowPoison</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR cls;
-$VAR adj;
-$VAR lvl;
-$VAR exp; // expiration time
-$VAR isPsnd;
-atk = $IndexOf($AttackerContext());
-cls = $SA_PARAM_GET();
-adj = $GET_CHARACTER_SA($AttackerContext(),"casterLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj;
-$SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-exp = $GET_PARTY_TIME() +# lvl *# 60;
-isPsnd = $GET_CHARACTER_SA($TargetContext(), "IsPoisoned");
-$IF (isPsnd != "-?-?-")
-	{$IF (isPsnd <# (exp +# lvl)){$RETURN $SET_CHARACTER_SA($TargetContext(),"IsSlowedPoisoned",exp);};};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_SnakeCharm</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
]]>
      </script>
      <script name="Dispel SE">
        <![CDATA[$REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
]]>
      </script>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR cls;
-$VAR adj;
-$VAR lvl;
-$VAR exp; // expiration time
-$IF ($GET_CHARACTER_SA($TargetContext(),"IsSnake") == "-?-?-"){$RETURN;};
-atk = $IndexOf($AttackerContext());
-cls = $SA_PARAM_GET();
-adj = $GET_CHARACTER_SA($AttackerContext(),"casterLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj;
-$SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-exp = $GET_PARTY_TIME() +# lvl;
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_StinkingCloud</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
]]>
      </script>
      <script name="Dispel SE">
        <![CDATA[$REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
]]>
      </script>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR atk; // attacker
-$VAR cls;
-$VAR adj;
-$VAR lvl;
-$IF ($GET_CHARACTER_SA($TargetContext(),"IsImmunePoison") != "-?-?-"){$RETURN;};
-$IF ($GET_HASPOISONIMMUNITY($TargetContext()) == 1){$RETURN;};
-$IF($GET_CHARACTER_SA($TargetContext(),"IsProtectedPoisonCaster") != "-?-?-"){$RETURN;};
-$IF($GET_CHARACTER_SA($TargetContext(),"IsProtectedPoisonTarget") != "-?-?-"){$RETURN;};
-atk = $IndexOf($AttackerContext());
-cls = $SA_PARAM_GET();
-adj = $GET_CHARACTER_SA($AttackerContext(),"casterLevel");
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj;
-$SET_CHARACTER_SA($TargetContext(),"DispelLevel",lvl);
-$IF ($GET_CHARACTER_SA($TargetContext(),"StinkingSave") == "-?-?-")
-  {
-   $SET_CHARACTER_SA($TargetContext(),"StinkingSave",$SkillAdj($TargetContext(), "Save Vs PPDM", "", "F", ""));
-   $IF ($GET_CHARACTER_SA($TargetContext(),"StinkingSave") != 1)
-     {$SET_CHARACTER_SA($TargetContext(),"IsStinkingStuck",$GetCombatRound() +# $RANDOM(4) +# 2);};
-  };
-$IF ($GET_CHARACTER_SA($TargetContext(),"StinkingSave") == 1)
-  {$SET_CHARACTER_SA($TargetContext(),"IsStinkingCloudy",$GetCombatRound());};
]]>
      </script>
      <script name="RemoveLinger">
        <![CDATA[$RETURN "AREA";
]]>
      </script>
      <script name="SpellLingerBlockage">
        <![CDATA[$IF ($GET_CHARACTER_SA($CharacterContext(),"IsImmunePoison") != "-?-?-" || $GET_HASPOISONIMMUNITY($CombatantContext()) == 1 || $SA_CHARACTER_GET("IsProtectedPoisonCaster") != "-?-?-" || $SA_CHARACTER_GET("IsProtectedPoisonTarget") != "-?-?-"){$RETURN;};
-$IF ($GET_CHARACTER_SA($CombatantContext(),"StinkingSave") != "-?-?-")
-  {$RETURN "N";};
]]>
      </script>
      <script name="StinkAdjust">
        <![CDATA[$SET_HOOK_PARAM(6, "N");
]]>
      </script>
      <script name="StinkingCloudy">
        <![CDATA[$RETURN $SET_HOOK_PARAM(8 ,"Coughing");
]]>
      </script>
      <script name="StinkingStuck">
        <![CDATA[$RETURN $SET_HOOK_PARAM(8 ,"Coughing Uncontrollably");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_Summon1</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM(7, "");
-$SET_HOOK_PARAM(6, "");
-$RETURN "1";
]]>
      </script>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR rndmRnd;
-rndmRnd = $RANDOM(4) +# $GetCombatRound();
-$SET_CHARACTER_SA($TargetContext(), "summoning1", rndmRnd);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_Summon2</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM(7, "");
-$SET_HOOK_PARAM(6, "");
-$RETURN "1";
]]>
      </script>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR rndmRnd;
-rndmRnd = $RANDOM(4) +# $GetCombatRound();
-$SET_CHARACTER_SA($TargetContext(), "summoning2", rndmRnd);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_Summon3</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM(7, "");
-$SET_HOOK_PARAM(6, "");
-$RETURN "1";
]]>
      </script>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR rndmRnd;
-rndmRnd = $RANDOM(4) +# $GetCombatRound();
-$SET_CHARACTER_SA($TargetContext(), "summoning3", rndmRnd);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_Summon4</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM(7, "");
-$SET_HOOK_PARAM(6, "");
-$RETURN "1";
]]>
      </script>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR rndmRnd;
-rndmRnd = $RANDOM(3) +# $GetCombatRound();
-$SET_CHARACTER_SA($TargetContext(), "summoning4", rndmRnd);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_Summon5</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM(7, "");
-$SET_HOOK_PARAM(6, "");
-$RETURN "1";
]]>
      </script>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR rndmRnd;
-rndmRnd = $RANDOM(3) +# $GetCombatRound();
-$SET_CHARACTER_SA($TargetContext(), "summoning5", rndmRnd);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_Summon6</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM(7, "");
-$SET_HOOK_PARAM(6, "");
-$RETURN "1";
]]>
      </script>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR rndmRnd;
-rndmRnd = $RANDOM(3) +# $GetCombatRound();
-$SET_CHARACTER_SA($TargetContext(), "summoning6", rndmRnd);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_Summon7</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM(7, "");
-$SET_HOOK_PARAM(6, "");
-$RETURN "1";
]]>
      </script>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR rndmRnd;
-rndmRnd = $RANDOM(2) +# $GetCombatRound();
-$SET_CHARACTER_SA($TargetContext(), "summoning7", rndmRnd);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_SummonAnimal1</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR list;
-$VAR count;
-$VAR n;
-$VAR monster1;
-$VAR sCount;
-list = "$Wild Dog$Owl";
-count = $DelimitedStringCount(list);
-n = $RANDOM(count);
-monster1 = $DelimitedStringSubstring(list,n);
-sCount = $RANDOM(8);
-$WHILE (sCount >=# 0)
-	{
-		$AddCombatant(monster1,"1");
-		sCount = sCount -# 1;
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_SummonAnimal2</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR list;
-$VAR count;
-$VAR n;
-$VAR monster1;
-$VAR sCount;
-list = "$Brown Bear$Giant Badger";
-count = $DelimitedStringCount(list);
-n = $RANDOM(count);
-monster1 = $DelimitedStringSubstring(list,n);
-sCount = $RANDOM(6);
-$WHILE (sCount >=# 0)
-	{
-		$AddCombatant(monster1,"1");
-		sCount = sCount -# 1;
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_SummonAnimal3</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$VAR list;
-$VAR count;
-$VAR n;
-$VAR monster1;
-$VAR sCount;
-list = "$Elephant$Rhinoceros";
-count = $DelimitedStringCount(list);
-n = $RANDOM(count);
-monster1 = $DelimitedStringSubstring(list,n);
-sCount = $RANDOM(4);
-$WHILE (sCount >=# 0)
-	{
-		$AddCombatant(monster1,"1");
-		sCount = sCount -# 1;
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_SummonElementalAir</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$AddCombatant("Air Elemental","1");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_SummonElementalEarth</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$AddCombatant("Earth Elemental","1");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_SummonElementalFire</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$AddCombatant("Fire Elemental",1);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_SummonElementalWater</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$AddCombatant("Water Elemental",1);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_SummonInvisibleStalker</name>
    <asl>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$AddCombatant("Invisible Stalker","1");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_TransmuteRockToMud</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
]]>
      </script>
      <script name="Dispel SE">
        <![CDATA[$REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
]]>
      </script>
      <script name="InvokeSpellOnTarget">
        <![CDATA[$SET_CHARACTER_SA($TargetContext(),"IsStuckInMud","");
]]>
      </script>
      <script name="RemoveLinger">
        <![CDATA[$RETURN "AREA";
]]>
      </script>
      <script name="SpellLingerBlockage">
        <![CDATA[$RETURN "Y";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_Unlock</name>
    <asl>
      <script name="OpenLocks">
        <![CDATA[$RETURN "Y";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>spell_WallOfStone</name>
    <asl>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
]]>
      </script>
      <script name="Dispel SE">
        <![CDATA[$REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
]]>
      </script>
      <script name="RemoveLinger">
        <![CDATA[$RETURN "AREA";
]]>
      </script>
      <script name="SpellLingerBlockage">
        <![CDATA[$RETURN "Y";
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>StandardDisplaySpellEffect</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$SET_HOOK_PARAM( 7, $SA_PARAM_GET());
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
]]>
      </script>
      <script name="Dispel">
        <![CDATA[$SA_REMOVE();
-$RUN_CHAR_SE_SCRIPTS($TargetContext(),"Dispel SE");
]]>
      </script>
      <script name="Dispel SE">
        <![CDATA[$REMOVE_SPELL_EFFECT($CharacterContext(),$GET_HOOK_PARAM(5));
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>Summoned</name>
    <asl>
      <script name="CreateMonsterCombatant">
        <![CDATA[$SET_COMBATANT_SA($CharacterContext(),"Summoned",$SA_PARAM_GET());
Dispel = $VAR tgt; // target
-tgt = $IndexOf($TargetContext());
-$IF ($GET_COMBATANT_SA($TargetContext(), "Summoned") != "-?-?-")
-	{
-		$SET_CHAR_STATUS(tgt, "2");
-		$SET_CHAR_HITPOINTS(tgt, "-20");
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>summoning1</name>
    <asl>
      <script name="StartCombatRound">
        <![CDATA[$VAR list;
-$VAR count;
-$VAR n;
-$VAR monster1;
-$VAR rndmRnd;
-list = "$Goblin$Hobgoblin$Orc$Giant Rat";
-count = $DelimitedStringCount(list);
-n = $RANDOM(count);
-monster1 = $DelimitedStringSubstring(list,n);
-rndmRnd = $SA_PARAM_GET();
-$IF (rndmRnd ==# $GetCombatRound())
-	{
-		$AddCombatant(monster1,1);
-		$SA_REMOVE();
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>summoning2</name>
    <asl>
      <script name="StartCombatRound">
        <![CDATA[$VAR list;
-$VAR count;
-$VAR n;
-$VAR monster1;
-$VAR rndmRnd;
-list = "$Gnoll$Stirge$Giant Centipede$Troglodyte";
-count = $DelimitedStringCount(list);
-n = $RANDOM(count);
-monster1 = $DelimitedStringSubstring(list,n);
-rndmRnd = $SA_PARAM_GET();
-$IF (rndmRnd ==# $GetCombatRound())
-	{
-		$AddCombatant(monster1,1);
-		$SA_REMOVE();
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>summoning3</name>
    <asl>
      <script name="StartCombatRound">
        <![CDATA[$VAR list;
-$VAR count;
-$VAR n;
-$VAR monster1;
-$VAR rndmRnd;
-list = "$Bugbear$Gelatinous Cube$Ghoul$Ogre";
-count = $DelimitedStringCount(list);
-n = $RANDOM(count);
-monster1 = $DelimitedStringSubstring(list,n);
-rndmRnd = $SA_PARAM_GET();
-$IF (rndmRnd ==# $GetCombatRound())
-	{
-		$AddCombatant(monster1,1);
-		$SA_REMOVE();
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>summoning4</name>
    <asl>
      <script name="StartCombatRound">
        <![CDATA[$VAR list;
-$VAR count;
-$VAR n;
-$VAR monster1;
-$VAR rndmRnd;
-list = "$Gargoyle$Hell Hound$Ghast$Werewolf";
-count = $DelimitedStringCount(list);
-n = $RANDOM(count);
-monster1 = $DelimitedStringSubstring(list,n);
-rndmRnd = $SA_PARAM_GET();
-$IF (rndmRnd ==# $GetCombatRound())
-	{
-		$AddCombatant(monster1,1);
-		$SA_REMOVE();
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>summoning5</name>
    <asl>
      <script name="StartCombatRound">
        <![CDATA[$VAR list;
-$VAR count;
-$VAR n;
-$VAR monster1;
-$VAR rndmRnd;
-list = "$Cockatrice$Displacer Beast$Giant Snake$Giant Spider";
-count = $DelimitedStringCount(list);
-n = $RANDOM(count);
-monster1 = $DelimitedStringSubstring(list,n);
-rndmRnd = $SA_PARAM_GET();
-$IF (rndmRnd ==# $GetCombatRound())
-	{
-		$AddCombatant(monster1,1);
-		$SA_REMOVE();
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>summoning6</name>
    <asl>
      <script name="StartCombatRound">
        <![CDATA[$VAR list;
-$VAR count;
-$VAR n;
-$VAR monster1;
-$VAR rndmRnd;
-list = "$Troll$Wight$Wraith$Wyvern";
-count = $DelimitedStringCount(list);
-n = $RANDOM(count);
-monster1 = $DelimitedStringSubstring(list,n);
-rndmRnd = $SA_PARAM_GET();
-$IF (rndmRnd ==# $GetCombatRound())
-	{
-		$AddCombatant(monster1,1);
-		$SA_REMOVE();
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>summoning7</name>
    <asl>
      <script name="StartCombatRound">
        <![CDATA[$VAR list;
-$VAR count;
-$VAR n;
-$VAR monster1;
-$VAR rndmRnd;
-list = "$Ettin$Umber Hulk$Xorn$Neo-Otyugh";
-count = $DelimitedStringCount(list);
-n = $RANDOM(count);
-monster1 = $DelimitedStringSubstring(list,n);
-rndmRnd = $SA_PARAM_GET();
-$IF (rndmRnd ==# $GetCombatRound())
-	{
-		$AddCombatant(monster1,1);
-		$SA_REMOVE();
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>TeleporterDestinations</name>
    <asl>
      <script name="/1/0/0">
        <![CDATA[$RETURN $GET_PARTY_ASL("spot");
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>Turn$SYS$</name>
    ><asl>
      <script name="idk">
        <![CDATA[
<Skeleton> = 1100112
-1070112
-1040112
-1010112
-1010112
-2010112
-2010112
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
<Zombie> = 1130112
-1100112
-1070112
-1010112
-1010112
-2010112
-2010112
-2010112
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
<Ghoul> = 1160112
-1130112
-1100112
-1040112
-1010112
-1010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
<Shadow> = 1190112
-1160112
-1160112
-1070112
-1040112
-1010112
-1010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
-2010712
<Wight> = 1200112
-1190112
-1160112
-1100112
-1070112
-1040112
-1010112
-1010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
<Ghast> = 1210112
-1200112
-1190112
-1130112
-1100112
-1070112
-1040112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
<Wraith> = 1210112
-1210112
-1200112
-1160112
-1130112
-1100112
-1070112
-1040112
-1010112
-1010112
-1010112
-1010112
-1010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
-2010112
<Mummy> = 1210112
-1210112
-1210112
-1200112
-1160112
-1130112
-1100112
-1070112
-1040112
-1040112
-1040112
-1040112
-1040112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
<Spectre> = 1210112
-1210112
-1210112
-1210112
-1200112
-1160112
-1130112
-1100112
-1070112
-1070112
-1070112
-1070112
-1070112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
-1010112
<Vampire> = 1210112
-1210112
-1210112
-1210112
-1210112
-1200112
-1160112
-1130112
-1100112
-1100112
-1100112
-1100112
-1100112
-1040112
-1040112
-1040112
-1040112
-1040112
-1040112
-1040112
-1040112
-1040112
-1040112
-1040112
-1040112
-1040112
-1040112
-1040112
-1040112
-1040112
-1040112
-1040112
-1040112
-1040112
-1040112
-1040112
-1040112
-1040112
-1040112
-1040112
<Ghost> = 1210112
-1210112
-1210112
-1210112
-1210112
-1210112
-1200112
-1160112
-1130112
-1130112
-1130112
-1130112
-1130112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
<Lich> = 1210112
-1210112
-1210112
-1210112
-1210112
-1210112
-1210112
-1190112
-1160112
-1160112
-1160112
-1160112
-1160112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
-1100112
<Special> = 1210112
-1210112
-1210112
-1210112
-1210112
-1210112
-1210112
-1200112
-1190112
-1190112
-1190112
-1190112
-1190112
-1130112
-1130112
-1130112
-1130112
-1130112
-1130112
-1130112
-1130112
-1130112
-1130112
-1130112
-1130112
-1130112
-1130112
-1130112
-1130112
-1130112
-1130112
-1130112
-1130112
-1130112
-1130112
-1130112
-1130112
-1130112
-1130112
-1130112
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>turnUndead</name>
    <asl>
      <script name="CanTurn">
        <![CDATA[$VAR par5;
-$VAR com;
-$VAR clrc;
-$VAR pldn;
-par5 = $GET_HOOK_PARAM(5);
-com = $IndexOf($CombatantContext());
-clrc = $GET_CHAR_Lvl(com,"cleric");
-pldn = $GET_CHAR_Lvl(com,"paladin");
-$IF (clrc ># 0 || pldn ># 2){$RETURN par5;}; // turning undead table - DMG 25
]]>
      </script>
      <script name="TurnAttempt">
        <![CDATA[$VAR par5;
-$VAR par6;
-$VAR num;
-$VAR turn;
-par5 = $GET_HOOK_PARAM(5);
-par6 = $GET_HOOK_PARAM(6);
-num = $DelimitedStringCount(par5);
-turn = $DelimitedStringSubstring(par5,num);
-$RETURN par5;
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>_AncientAura</name>
    <asl>
      <script name="AURA_Create">
        <![CDATA[$VAR chr; // character
-$VAR prm; // SA parameter
-$DEBUG($SA_NAME());
-chr = $IndexOf($CharacterContext());
-prm = $SA_PARAM_GET();
-$AURA_Attach("Combatant");
-$AURA_Combatant(chr);
-$AURA_Size(0,prm,0,360);
-$AURA_Shape("AnnularSector");
-$AURA_Spell("AncientAura");
-$AURA_Wavelength("Xray");
]]>
      </script>
      <script name="AURA_Enter">
        <![CDATA[$VAR com; // comabtant
-$VAR cName; // combatant's name
-com = $IndexOf($CombatantContext());
-cName = $GET_CHAR_NAME(com);
-$DEBUG ($SA_NAME() + ", ARUA_Enter");
-$IF (cName == "Ancient Fighter"){$RETURN;};
-$SET_COMBATANT_SA($CombatantContext(),"_IsAuraed","");
]]>
      </script>
      <script name="AURA_Exit">
        <![CDATA[$DEBUG ($SA_NAME() + ", AURA_Exit");
-$DELETE_COMBATANT_SA($CombatantContext(),"_IsAuraed");
]]>
      </script>
      <script name="CreateMonsterCombatant">
        <![CDATA[$AURA_Create("_AncientAura",3,0,0,0);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>_BigGuyAura</name>
    <asl>
      <script name="AURA_Create">
        <![CDATA[$VAR prm; // SA parameter
-prm = $SA_PARAM_GET();
-$DEBUG("Big Guy Aura");
-$AURA_Attach("Combatant");
-$AURA_Combatant($IndexOf($CharacterContext()));
-$AURA_Size(0,prm,0,360);
-$AURA_Shape("AnnularSector");
-$AURA_Spell("BigGuyAura");
-$AURA_Wavelength("Visible");
]]>
      </script>
      <script name="CreateMonsterCombatant">
        <![CDATA[$AURA_Create("_BigGuyAura",3,0,0,0);
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>_IsAuraed</name>
    <asl>
      <script name="CharDisplayStatus">
        <![CDATA[$DEBUG ("IsAuraed");
-$SET_HOOK_PARAM( 7, "Auraed");
-$SET_HOOK_PARAM( 6, "");
-$RETURN 1;
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>_PaladinAuraSA</name>
    <asl>
      <script name="AURA_Create">
        <![CDATA[$VAR rnd;
-$VAR time;
-rnd = $GetCombatRound();
-time = rnd +# 6;
-$AURA_Attach("CombatantFacing");
-$AURA_Combatant($IndexOf($Myself()));
-$AURA_Size(0,2,315,90);
-$AURA_Shape("AnnularSector");
-$AURA_Spell("PaladinAura");
-$AURA_Wavelength("Neutrino");
-$SET_COMBATANT_SA($Myself(),"PaladinAura",time);
]]>
      </script>
      <script name="AURA_Effect">
        $IF ($GetCombatRound() ><![CDATA[# 6){$AURA_Destroy();};
]]>
      </script>
      <script name="AURA_Round">
        <![CDATA[$VAR exp; // expiration time
-exp = $GET_COMBATANT_SA($Myself(),"PaladinAura");
-$IF ($GetCombatRound() ># exp)
-	{
-		$AURA_Destroy();
-		$DELETE_COMBATANT_SA($Myself(),"PaladinAura");
-	};
\(END)

]]>
      </script>
    </asl>
  </item>
  <item>
    <name>$$Help</name>
    ><asl>
      <![CDATA[
Date = "May 10, 2017"
Updates1_01 = "fixed spell_HoldAnimal, spell_HoldMonster, spell_HoldPersonCleric and spell_HoldPersonMU, updated/fixed FreeAttack-AttackOver and FreeAttack-CanFreeAttack, updated monster_SpellImmunity, IsImmuneSpells and IsImmuneSpellsMinor, fixed Global_Display to correctly show all character statuses"
Updates1_02 = "fixed display issue to show dmg done by weapons in party members possession, updated STATUS display to reflect chganges to Damage Event, fixed context issue with spell_NeutralizePoison, all instances of $SET_CHARACTER_SA for IsHugged now $SET_COMBATANT_SA"
Updates1_02 = "fixed spell_Sleep, changed Competing so that now roll of 20 always hits and roll of 1 always misses, monster_WeaponImmunity changed so that weapons will hit monster but only do damage if of appropriate magical level"
Updates1_03 = "added class_Druid, IsDruidImmuneWoodlandCharm, IsDruidShapeChanger; fixed spell_Confusion, spell_Sleep, spell_HoldMonster, spell_HollPersonCleric, spell_HoldPersonMU, fixed times in class_Paladin"
Updates1_04 = "fixed spell_Charm, spell_HoldPersonCleric, IsDiseased, IsDiseasedSpell, IsGreenSlimed, IsMindFlayed, IsMummyFear, item_GirdleGiantStrength, item_Scroll, monster_AuraMummy, monster_DrainStrength, monster_ModronElementalResistance, monster_SpellImmunity, spell_Confusion; redid Saving Throw scripts for class_Paladin, IsBarkskinned, IsBestowedCurse, IsCloakDisplaced, IsPaladinProtectedFromEvil, IsProtectedAcidTarget, IsProtectedEvil, IsProtectedFireTarget, IsProtectedGood, IsProtectedLightningTarget, IsProtectedPoisonTarget, item_CloakDisplaced, race_ShortSaveBonus, spell_Barkskin, spell_BestowCurse, spell_ProtectionFromAcid, spell_ProtectionFromEvil, spell_ProtectionFromFire, spell_ProtectionFromGood, spell_ProtectionFromLightning; removed IsShortSaveBonus, SaveAdjPPDM, SaveAdjSpell; added spell_DispelEvil"
Updates1_05 = "Global_CreateMonsterCombatant skillAdj functions modified, IsRingImmuneElectricity and item_RingOfElectricalImmunity fixed by Nol Drek, fixed elemental_ImmuneAcid, elemental_ImmuneCold, elemental_ImmuneElectricity, elemental_ImmuneFire, elemental_ResistantCold, elemental_ResistantElectricity, elemental_ResistantFire, elemental_SlowingCold, elemental_SlowingElectricity, elemental_SlowingFire, elemental_VulnerableCold, elemental_VulnerableFire, IsRingResistantCold, IsRingResistantFire, item_Periapt, item_RingOfColdResistance, item_RingOfFireResistance; added IsPeriaptImmuneDisease"
Updates1_06 = "all elemental_ SAs updated and new ones added so that acid, cold, electricity and fire are possibility for each; IsRingImmuneElectricty, IsRingResistantCold and IsRingResistantFire removed; added item_RingOfAcidImmunity/Resistance/Vulnerability, item_RingOfColdImmunity/Vulnerability, item_RingOfElectricalImmunity/Resistance/Vulnerability and item_RingOfFireImmunity/Vulnerability; added IsImmuneAcid/Cold/Electricity/Fire, IsResistantAcid/Electricity, IsImmuneNormalFire"
Updates1_07 = "IsImmune/Resistant, monster_Immune/Resistant, spell_Immune/Resistant updated"
Updates1_08 = "added JoinParty (allows NPC to enter play with spells memorized); fixed monster_WeaponImmunityType"
Updates1_09 = "added item_GAuntletsDexterity, monster_CrysmalBluntWeapon, monster_CrysmalElectricalResistance, monster_CheetahNotSurprised, monster_RearClawRakeCat1, monster_RearClawRakeCat2, IsDetectedGood, IsStuckInMud, spell_TransmuteRockToMud, spell_WallOfStone. Fixed spell_Enlarge, spell_Reduce, spell_Bless, spell_Blink, spell_FireResistant, spell_Haste, spell_ImmuneDragonBreath, spell_ImmuneNormalMissiles, spell_ImmuneSpells, spell_ImmuneSpellsMinor, spell_Invisible, spell_MirrorImage, spell_Prayer, spell_ProtectionFromAcid, spell_ProtectionFromEvil, spell_ProtectionFromGood, spell_ProtectionFromLightning, spell_RaiseDead, spell_SeeInvisible, spell_Shield, spell_Silence, spell_Slow, spell_SlowPoison"
Updates1_10 = "changed Global_Display to use class_ThievingSkills instead of class names, changed Competing to use class_Sweep, class_AttacksPerRound, class_AttacksPerRoundAdj and class_Leader instead of class names"
Updates1_11 = "Fixed issues with parens in spell_Enlarge, spel_Reduce, all the various elemental SAs; corrected several score context issues relative to $GET_CHARACTER_SA();"
Updates1_12 = "Fixed item_Scroll"
Updates1_13 = "Fixed varous contexts to match correctly with Hooks"
Updates1_14 = "removed item_wand"
Updates170321 = "rewrote $EVENT_WhoTries_Attempt"
Updates170510 = "added missing monster SAs - elemental_ImmuneStone, elemental_ImmuneWater, monster_DaoDoubleHolyWater, monster_DjinniAirResistance, monster_MaridColdResistance, monster_MaridFireVulnerability"
Updates170713 = "added SpecialGraphics"
Updates170715 = "added Hooks FacingText, LocationText, SearchingText, and TimeText to Global_Display to manage displayed time, location and searching with the compass"
Updates170921 = "added ChangeClassXXX - where XXX is the name of a single class"
\(END)
]]>
    </asl>
  </item>
</abilities>